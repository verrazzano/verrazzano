# Copyright (C) 2020, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        app.kubernetes.io/version: {{ .Chart.Version }}
    spec:
      terminationGracePeriodSeconds: 0
      initContainers:
        - name: webhookswait
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          image: {{ .Values.image }}
          command: [ 'sh', '-c', "/verrazzano/platform-operator/scripts/wait4webhook.sh" ]
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      {{- if .Values.affinity }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.name }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          image: {{ .Values.image }}
          ports:
            - containerPort: 9100
              name: http-metric
              protocol: TCP
          args:
            - --zap-log-level=info
            - --health-check-period=60
            {{ if .Values.experimentalFeatures.moduleAPI.enabled }}
            - --experimental-modules=true
            {{ end }}
          env:
            - name: VERRAZZANO_KUBECONFIG
              value: /home/verrazzano/kubeconfig
            - name: KUBECONFIG
              value: /home/verrazzano/kubeconfig
            {{- if .Values.global.registry }}
            - name: REGISTRY
              value: {{ .Values.global.registry }}
            {{- end }}
            {{- if .Values.global.repository }}
            - name: IMAGE_REPO
              value: {{ .Values.global.repository }}
            {{- end }}
            {{- if .Values.global.appOperatorImage }}
            - name: APP_OPERATOR_IMAGE
              value: {{ .Values.global.appOperatorImage }}
            {{- end }}
            {{- if .Values.global.clusterOperatorImage }}
            - name: CLUSTER_OPERATOR_IMAGE
              value: {{ .Values.global.clusterOperatorImage }}
            {{- end }}
          resources:
            requests:
              memory: 72Mi
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      serviceAccountName: {{ .Values.name }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 999
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-webhook
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}-webhook
    app.kubernetes.io/version: {{ .Chart.Version }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}-webhook
  template:
    metadata:
      labels:
        app: {{ .Values.name }}-webhook
        app.kubernetes.io/version: {{ .Chart.Version }}
    spec:
      terminationGracePeriodSeconds: 0
      {{- if .Values.webhookAffinity }}
      affinity: {{ toYaml .Values.webhookAffinity | nindent 8 }}
      {{- end }}
      initContainers:
        - name: initwebhooks
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          image: {{ .Values.image }}
          args:
            - --zap-log-level=info
            - --run-webhook-init=true
            {{ if .Values.experimentalFeatures.moduleAPI.enabled }}
            - --experimental-modules=true
            {{ end }}
          resources:
            requests:
              memory: 72Mi
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      containers:
        - name: webhook-run
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - --zap-log-level=info
            - --run-webhooks=true
            - --resource-validation={{ .Values.webhooks.resourceValidation }}
            {{ if .Values.experimentalFeatures.moduleAPI.enabled }}
            - --experimental-modules=true
            {{ end }}
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
          resources:
            requests:
              memory: 72Mi
          ports:
            - containerPort: 9100
              name: http-metric
              protocol: TCP
            - containerPort: 9443
              name: webhook
              protocol: TCP
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: webhook-certs
          emptyDir: {}
      serviceAccountName: {{ .Values.name }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 999
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
