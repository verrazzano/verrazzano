# Copyright (c) 2021, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

# Network policy for Verrazzano API Proxy
# Ingress: allow nginx-ingress-controller to connect to port 8775
# Egress:  allow all - access needed to Keycloak via external https endpoint
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: verrazzano-api
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app: verrazzano-api
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: ingress-nginx
          podSelector:
            matchLabels:
              app.kubernetes.io/instance: ingress-controller
      ports:
        - protocol: TCP
          port: 8775
---
# Network policy for Verrazzano console
# Ingress: allow nginx-ingress-controller to connect to port 8000
# Egress:  allow kube-dns and istiod
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: verrazzano-console
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app: verrazzano-console
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: ingress-nginx
          podSelector:
            matchLabels:
              app.kubernetes.io/instance: ingress-controller
      ports:
        - protocol: TCP
          port: 8000
  egress:
    - ports:
        - port: 53
          protocol: UDP
        - port: 53
          protocol: TCP
      to:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
    # allow egress to istiod
    - ports:
        - port: 15012
          protocol: TCP
      to:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: istio-system
          podSelector:
            matchLabels:
              app: istiod
---
# Network policy for Verrazzano operator
# Ingress: deny all
# Egress:  allow access to Kubernetes API server
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: verrazzano-operator
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app: verrazzano-operator
  policyTypes:
    - Ingress
    - Egress
  egress:
    - ports:
        - port: {{ .Values.kubernetes.service.endpoint.port }}
          protocol: TCP
      to:
        - ipBlock:
            cidr: {{ .Values.kubernetes.service.endpoint.ip }}/32
---
# Network policy for Verrazzano application operator
# Ingress: allow access from Kubernetes API server for webhook port 9443
# Egress:  allow access to Kubernetes API server on its port, and to all destinations on 443
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: verrazzano-application-operator
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app: verrazzano-application-operator
  policyTypes:
    - Ingress
    - Egress
  egress:
    # allow access to all destinations on Kubernetes API server port
    # allow access to all destinations on 443
    # So that a managed cluster can connect to admin cluster on both of those ports
    - ports:
        - port: {{ .Values.kubernetes.service.endpoint.port }}
          protocol: TCP
        - port: 443
          protocol: TCP
  ingress:
    - ports:
        - port: 9443
          protocol: TCP
---
# Network policy for Verrazzano monitoring operator
# Ingress: deny all
# Egress:  allow access to Kubernetes API server
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: verrazzano-monitoring-operator
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      k8s-app: verrazzano-monitoring-operator
  policyTypes:
    - Ingress
    - Egress
  egress:
    - ports:
        - port: {{ .Values.kubernetes.service.endpoint.port }}
          protocol: TCP
      to:
        - ipBlock:
            cidr: {{ .Values.kubernetes.service.endpoint.ip }}/32
---
# Network policy for OAM Kubernetes Runtime operator
# Ingress: deny all
# Egress:  allow access to Kubernetes API server
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: oam-kubernetes-runtime
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: oam-kubernetes-runtime
  policyTypes:
    - Ingress
    - Egress
  egress:
    - ports:
        - port: {{ .Values.kubernetes.service.endpoint.port }}
          protocol: TCP
      to:
        - ipBlock:
            cidr: {{ .Values.kubernetes.service.endpoint.ip }}/32

