# Copyright (c) 2021, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
---
# Network policy for WebLogic operator
# Ingress: deny all
# Egress: allow connect to Kubernetes API server
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: weblogic-operator
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app: weblogic-operator
  policyTypes:
    - Ingress
    - Egress
  egress:
    - ports:
        - port: {{ .Values.kubernetes.service.endpoint.port }}
          protocol: TCP
      to:
        - ipBlock:
            cidr: {{ .Values.kubernetes.service.endpoint.ip }}/32
---
# Network policy for Coherence Operator
# Ingress: allow connect from Kubernetes API server to validating webhook port 9443
# Egress: allow connect to Kubernetes API server
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: coherence-operator
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      control-plane: coherence
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - ports:
        - port: 9443
          protocol: TCP
      from:
        - ipBlock:
            cidr: {{ .Values.kubernetes.service.endpoint.ip }}/32
  egress:
    - ports:
        - port: {{ .Values.kubernetes.service.endpoint.port }}
          protocol: TCP
      to:
        - ipBlock:
            cidr: {{ .Values.kubernetes.service.endpoint.ip }}/32
---
# Network policy for VMI System Grafana
# Ingress: allow connect from the ingress controller to oidc port 8775
# Egress: allow connect to Prometheus port 9090
#         allow connect to DNS lookup port 53 for both UDP and TCP
#         allow connect to Keycloak port 8080
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: vmi-system-grafana
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app: system-grafana
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: ingress-nginx
          podSelector:
            matchLabels:
              app.kubernetes.io/instance: ingress-controller
      ports:
        - port: 8775
          protocol: TCP
  egress:
    - ports:
        - port: 9090
          protocol: TCP
      to:
        - podSelector:
            matchLabels:
              app: system-prometheus
    - ports:
        - port: 53
          protocol: UDP
        - port: 53
          protocol: TCP
      to:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
    - ports:
        - port: 8080
          protocol: TCP
      to:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: keycloak
          podSelector:
            matchLabels:
              app.kubernetes.io/instance: keycloak
---
# Network policy for VMI System Prometheus
# Ingress: allow connect from the ingress controller to oidc port 8775
#          allow connect from Prometheus Pusher and Grafana to port 9090
# Egress: allow all
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: vmi-system-prometheus
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app: system-prometheus
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: ingress-nginx
          podSelector:
            matchLabels:
              app.kubernetes.io/instance: ingress-controller
      ports:
        - port: 8775
          protocol: TCP
    - ports:
        - port: 9090
          protocol: TCP
---
# Network policy for Cert Manager
# Ingress: allow connect from Prometheus for scraping metrics
# Egress: allow connect to Kubernetes API server
#         allow connect to DNS lookup port 53 for both UDP and TCP
#         allow connect to Let's Encrypt server
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cert-manager
  namespace: cert-manager
spec:
  podSelector:
    matchLabels:
      app: cert-manager
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Port for scraping Prometheus metrics
    - from:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: {{ .Release.Namespace }}
          podSelector:
            matchLabels:
              app: system-prometheus
      ports:
        - port: 9402
          protocol: TCP
  egress:
    # Port for connecting to Kubernetes API services
    - ports:
        - port: {{ .Values.kubernetes.service.endpoint.port }}
          protocol: TCP
      to:
        - ipBlock:
            cidr: {{ .Values.kubernetes.service.endpoint.ip }}/32
    # Ports for DNS lookup
    - ports:
        - port: 53
          protocol: UDP
        - port: 53
          protocol: TCP
    # Port for connecting to Let's Encrypt server
    - ports:
        - port: 443
          protocol: TCP
{{- if .Values.externaldns.enabled }}
---
# Network policy for External DNS
# Ingress: deny all
# Egress: allow connect to Kubernetes API server
#         allow connect to DNS lookup port 53 for both UDP and TCP
#         allow connect to DNS server
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: external-dns
  namespace: cert-manager
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: external-dns
  policyTypes:
    - Ingress
    - Egress
  egress:
    # Port for connecting to Kubernetes API services
    - ports:
        - port: {{ .Values.kubernetes.service.endpoint.port }}
          protocol: TCP
      to:
        - ipBlock:
            cidr: {{ .Values.kubernetes.service.endpoint.ip }}/32
    # Ports for DNS lookup
    - ports:
        - port: 53
          protocol: UDP
        - port: 53
          protocol: TCP
    # Port for connecting to DNS server
    - ports:
        - port: 443
          protocol: TCP
{{- end }}
---
# Network policy for Node Exporter
# Ingress: allow connect from Prometheus to scrap metrics
# Egress: deny all
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: node-exporter
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      verrazzano.io/namespace: monitoring
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: verrazzano-system
          podSelector:
            matchLabels:
              app: system-prometheus
      ports:
        - port: 9100
          protocol: TCP
{{- if .Values.keycloak.enabled }}
---
# Network policy for Keycloak
# Ingress: allow nginx ingress and ingress from pods in the verrazzano-system namespace
# Egress:  DNS and the port to talk to MySQL
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: keycloak
  namespace: keycloak
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: keycloak
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            verrazzano.io/namespace: ingress-nginx
      - podSelector:
          matchLabels:
            app.kubernetes.io/instance: ingress-controller
      ports:
        - protocol: TCP
          port: 8080
    - from:
      - namespaceSelector:
          matchLabels:
            verrazzano.io/namespace: {{ .Release.Namespace }}
      ports:
        - protocol: TCP
          port: 8080
  egress:
    - ports:
      - port: 53
        protocol: UDP
      - port: 53
        protocol: TCP
      to:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
    - ports:
      - port: 3306
        protocol: TCP
      to:
        - podSelector:
            matchLabels:
              app: mysql
---
# Network policy for Keycloak MySQL
# Ingress: allow port 3306 from Keycloak pods
# Egress:  deny all
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: keycloak-mysql
  namespace: keycloak
spec:
  podSelector:
    matchLabels:
      app: mysql
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: keycloak
      ports:
        - protocol: TCP
          port: 3306
{{- end }}
---
# Network policy for NGINX Ingress controller
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: controller
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Allow ingress to 443 from anywhere
    - ports:
        - port: 443
          protocol: TCP
  egress:
    # Allow egress to Kubernetes API server
    - ports:
        - port: {{ .Values.kubernetes.service.endpoint.port }}
          protocol: TCP
      to:
        - ipBlock:
            cidr: {{ .Values.kubernetes.service.endpoint.ip }}/32
    # Allow egress to kub-dns for name resolution
    - to:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - port: 53
          protocol: UDP
        - port: 53
          protocol: TCP
    # Allow egress to ingress-nginx default backend
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: default-backend
      ports:
        - port: 8080
          protocol: TCP
    # Allow egress to verrazzano system pods at port 8775 (OIDC sidecar)
    - to:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: verrazzano-system
          podSelector:
            matchLabels:
              app: verrazzano-api
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: verrazzano-system
          podSelector:
            matchLabels:
              app: system-es-ingest
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: verrazzano-system
          podSelector:
            matchLabels:
              app: system-kibana
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: verrazzano-system
          podSelector:
            matchLabels:
              app: system-prometheus
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: verrazzano-system
          podSelector:
            matchLabels:
              app: system-grafana
      ports:
        - port: 8775
          protocol: TCP
    # Allow egress to verrazzano console at port 8000
    - to:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: verrazzano-system
          podSelector:
            matchLabels:
              app: verrazzano-console
      ports:
        - port: 8000
          protocol: TCP
    # Allow egress to Prometheus gateway at port 9091
    - to:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: verrazzano-system
          podSelector:
            matchLabels:
              app: system-prometheus-gw
      ports:
        - port: 9091
          protocol: TCP
    # Allow egress to Rancher
    - to:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: cattle-system
    # Allow egress to Keycloak at port 80
    - to:
        - namespaceSelector:
            matchLabels:
              verrazzano.io/namespace: keycloak
          podSelector:
            matchLabels:
              app.kubernetes.io/name: keycloak
      ports:
        - port: 8080
          protocol: TCP
---
# Network policy for NGINX Ingress default-backend
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-nginx-default-backend
  namespace: ingress-nginx
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: default-backend
  policyTypes:
    - Ingress
    # Deny all egress
    - Egress
  ingress:
    # Allow ingress from ingress-nginx controller
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: controller
      ports:
        - port: 8080
          protocol: TCP
