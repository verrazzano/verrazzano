# Copyright (c) 2022, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        sidecar.istio.io/inject: 'false'
      annotations:
        verrazzano.io/checksum: {{ tpl (toYaml .Values) . | sha256sum }}
    spec:
      terminationGracePeriodSeconds: 0
      initContainers:
        - name: webhookswait
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          image: {{ .Values.image }}
          command: [ 'sh', '-c', "/usr/local/bin/wait4webhook.sh" ]
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      {{- if .Values.affinity }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Values.name }}
        image: {{ .Values.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        - name: CLUSTER_SYNC_ENABLED
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.name }}-selector
              key: enabled
        - name: ARGOCD_CLUSTER_TOKEN_TTL
          value: "{{ .Values.argoCDClusterTokenTTL }}"
        volumeMounts:
          - name: cluster-selector
            mountPath: /var/syncClusters
        ports:
          - containerPort: 9100
            name: http-metric
            protocol: TCP
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      serviceAccountName: {{ .Values.name }}
      volumes:
        - name: cluster-selector
          configMap:
            name: {{ .Values.name }}-selector
            items:
            - key: selector.yaml
              path: selector.yaml
            optional: true
      securityContext:
        runAsUser: 1000
        runAsGroup: 999
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-webhook
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}-webhook
    app.kubernetes.io/version: {{ .Chart.Version }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}-webhook
  template:
    metadata:
      labels:
        app: {{ .Values.name }}-webhook
        app.kubernetes.io/version: {{ .Chart.Version }}
        sidecar.istio.io/inject: 'false'
    spec:
      terminationGracePeriodSeconds: 0
      {{- if .Values.webhookAffinity }}
      affinity: {{ toYaml .Values.webhookAffinity | nindent 8 }}
      {{- end }}
      initContainers:
        - name: initwebhooks
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          image: {{ .Values.image }}
          args:
            - --zap-log-level=info
            - --run-webhook-init=true
          resources:
            requests:
              memory: 72Mi
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/certs
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      containers:
        - name: webhook-run
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - --zap-log-level=info
            - --run-webhooks=true
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/certs
          resources:
            requests:
              memory: 72Mi
          ports:
            - containerPort: 9100
              name: http-metric
              protocol: TCP
            - containerPort: 9443
              name: webhook
              protocol: TCP
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: webhook-certs
          emptyDir: {}
      serviceAccountName: {{ .Values.name }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 999
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
