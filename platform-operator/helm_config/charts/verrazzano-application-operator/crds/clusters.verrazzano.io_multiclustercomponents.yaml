# Copyright (c) 2021, 2022, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: multiclustercomponents.clusters.verrazzano.io
spec:
  group: clusters.verrazzano.io
  names:
    kind: MultiClusterComponent
    listKind: MultiClusterComponentList
    plural: multiclustercomponents
    shortNames:
    - mccomp
    - mccomps
    singular: multiclustercomponent
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MultiClusterComponent specifies the Multi Cluster Component API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: The desired state of a Multi Cluster Component resource.
            properties:
              placement:
                description: Clusters in which the component is to be created.
                properties:
                  clusters:
                    items:
                      description: Cluster where multi cluster resources are placed
                      properties:
                        name:
                          description: the name of the cluster
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                required:
                - clusters
                type: object
              template:
                description: Template containing the metadata and spec for an OAM
                  component.
                properties:
                  metadata:
                    description: Metadata describing the secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects.
                        type: object
                      name:
                        description: Name must be unique within a namespace.
                        type: string
                      namespace:
                        description: Namespace defines the space within each name
                          must be unique.
                        type: string
                    type: object
                  spec:
                    description: The embedded OAM component spec.
                    properties:
                      parameters:
                        description: Parameters exposed by this component. ApplicationConfigurations
                          that reference this component may specify values for these
                          parameters, which will in turn be injected into the embedded
                          workload.
                        items:
                          description: A ComponentParameter defines a configurable
                            parameter of a component.
                          properties:
                            description:
                              description: Description of this parameter.
                              type: string
                            fieldPaths:
                              description: FieldPaths specifies an array of fields
                                within this Component's workload that will be overwritten
                                by the value of this parameter. The type of the parameter
                                (e.g. int, string) is inferred from the type of these
                                fields; All fields must be of the same type. Fields
                                are specified as JSON field paths without a leading
                                dot, for example 'spec.replicas'.
                              items:
                                type: string
                              type: array
                            name:
                              description: Name of this parameter. OAM ApplicationConfigurations
                                will specify parameter values using this name.
                              type: string
                            required:
                              default: false
                              description: Required specifies whether or not a value
                                for this parameter must be supplied when authoring
                                an ApplicationConfiguration.
                              type: boolean
                          required:
                          - fieldPaths
                          - name
                          type: object
                        type: array
                      workload:
                        description: A Workload that will be created for each ApplicationConfiguration
                          that includes this Component. Workload is an instance of
                          a workloadDefinition. We either use the GVK info or a special
                          "type" field in the workload to associate the content of
                          the workload with its workloadDefinition
                        type: object
                        x-kubernetes-embedded-resource: true
                        x-kubernetes-preserve-unknown-fields: true
                    required:
                    - workload
                    type: object
                type: object
            required:
            - placement
            - template
            type: object
          status:
            description: The observed state of a Multi Cluster Component resource.
            properties:
              clusters:
                items:
                  description: ClusterLevelStatus describes the status of the multi
                    cluster resource in a specific cluster
                  properties:
                    lastUpdateTime:
                      description: LastUpdateTime of the resource state in this cluster
                      type: string
                    message:
                      description: Message with details about the status in this cluster
                      type: string
                    name:
                      description: Name of the cluster
                      type: string
                    state:
                      description: State of the resource in this cluster
                      type: string
                  required:
                  - lastUpdateTime
                  - name
                  - state
                  type: object
                type: array
              conditions:
                description: The latest available observations of an object's current
                  state.
                items:
                  description: Condition describes current state of a multi cluster
                    resource.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human readable message indicating details about
                        last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              state:
                description: State of the multi cluster resource
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
