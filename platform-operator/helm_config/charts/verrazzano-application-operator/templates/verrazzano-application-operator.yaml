# Copyright (c) 2020, 2022, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
{{- if .Values.global.imagePullSecrets }}
imagePullSecrets:
  {{- range .Values.global.imagePullSecrets }}
- name: {{ . }}
{{- end }}
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: verrazzano-application-operator
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - namespaces
      - pods
      - secrets
      - rolebindings
      - serviceaccounts
      - services
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - statefulsets
      - replicasets
      - daemonsets
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - roles
      - rolebindings
    verbs:
      - bind
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - clusters.verrazzano.io
    resources:
      - '*'
      - '*/status'
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - coherence.oracle.com
    resources:
      - coherence
      - coherence/status
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - core.oam.dev
    resources:
      - '*'
      - '*/status'
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - networking.istio.io
    resources:
      - destinationrules
      - ingresses
      - gateways
      - virtualservices
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - verrazzano.io
    resources:
      - '*'
      - '*/status'
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - oam.verrazzano.io
    resources:
      - '*'
      - '*/status'
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - app.verrazzano.io
    resources:
      - '*'
      - '*/status'
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - security.istio.io
    resources:
      - authorizationpolicies
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - weblogic.oracle
    resources:
      - domains
      - domains/status
      - clusters
      - clusters/status
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
      - podmonitors
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - mysql.oracle.com
    resources:
      - innodbclusters
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - jaegertracing.io
    resources:
      - jaegers
    verbs:
      - create
      - get
      - list
      - update
  - apiGroups:
    - mysql.oracle.com
    resources:
      - mysqlbackups
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
      - delete
  - apiGroups:
      - mysql.oracle.com
    resources:
      - mysqlbackups/status
    verbs:
      - get
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: verrazzano-application-operator
subjects:
  - kind: ServiceAccount
    name: {{ .Values.name }}
    namespace: {{ .Values.namespace }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  ports:
    - name: https-webhook
      port: 443
      targetPort: 9443
    - name: http-metric
      protocol: TCP
      port: 9100
      targetPort: 9100
  selector:
    app: {{ .Values.name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - name: {{ .Values.name }}
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - containerPort: 9443
              name: https-webhook
              protocol: TCP
            - containerPort: 9100
              name: http-metric
              protocol: TCP
          args:
            - --zap-log-level={{ .Values.logLevel }}
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - 'reply=$(curl -s -o /dev/null -w %{http_code} -o /dev/null -k -H "Content-Type: application/json"  https://127.0.0.1:9443/appconfig-defaulter); if [ \"$reply\" -lt 200 -o \"$reply\" -ge 400 ]; then exit 1; fi; reply=$(curl -s -o /dev/null -w %{http_code} -o /dev/null -k -H "Content-Type: application/json"  https://127.0.0.1:9443/validate-oam-verrazzano-io-v1alpha1-ingresstrait); if [ \"$reply\" -lt 200 -o \"$reply\" -ge 400 ]; then exit 1; fi;'
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          resources:
            requests:
              memory: {{ .Values.requestMemory }}
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/certs
          env:
            - name: DEFAULT_FLUENTD_IMAGE
              value: {{ .Values.fluentdImage }}
            - name: ISTIO_PROXY_IMAGE
              value: {{ .Values.istioProxyImage }}
            - name: WEBLOGIC_MONITORING_EXPORTER_IMAGE
              value: {{ .Values.weblogicMonitoringExporterImage }}
      volumes:
        - name: webhook-certs
          emptyDir: {}
      serviceAccountName: {{ .Values.name }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: verrazzano-application-appconfig-defaulter
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
webhooks:
  - name: verrazzano-application-appconfig-defaulter.verrazzano.io
    namespaceSelector:
      matchExpressions:
        - { key: verrazzano.io/namespace, operator: NotIn, values: [ kube-system ] }
    clientConfig:
      service:
        name: {{ .Values.name }}
        namespace: {{ .Values.namespace }}
        path: "/appconfig-defaulter"
    rules:
      - apiGroups:
          - core.oam.dev
        apiVersions:
          - v1alpha2
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - applicationconfigurations
    sideEffects: NoneOnDryRun
    failurePolicy: Fail
    matchPolicy: Exact
    timeoutSeconds: 30
    admissionReviewVersions:
      - v1beta1
      - v1
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: verrazzano-application-ingresstrait-validator
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
webhooks:
  - name: verrazzano-application-ingresstrait-validator.verrazzano.io
    namespaceSelector:
      matchExpressions:
        - { key: verrazzano.io/namespace, operator: NotIn, values: [ kube-system ] }
    clientConfig:
      service:
        name: {{ .Values.name }}
        namespace: {{ .Values.namespace }}
        path: "/validate-oam-verrazzano-io-v1alpha1-ingresstrait"
    rules:
      - apiGroups:
          - oam.verrazzano.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - ingresstraits
    sideEffects: None
    failurePolicy: Fail
    matchPolicy: Exact
    timeoutSeconds: 30
    admissionReviewVersions:
      - v1beta1
      - v1
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: verrazzano-application-istio-defaulter
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
webhooks:
  - name: verrazzano-application-istio-defaulter.verrazzano.io
    namespaceSelector:
      matchExpressions:
          - {key: istio-injection, operator: In, values: [enabled]}
          - {key: verrazzano.io/namespace, operator: NotIn, values: [verrazzano-system, kube-system, verrazzano-monitoring]}
    clientConfig:
      service:
        name: {{ .Values.name }}
        namespace: {{ .Values.namespace }}
        path: "/istio-defaulter"
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
    failurePolicy: Fail
    matchPolicy: Exact
    timeoutSeconds: 30
    admissionReviewVersions:
      - v1beta1
      - v1
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: verrazzano-application-verrazzanoproject
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
webhooks:
  - name: verrazzano-clusters-verrazzanoproject-validator.verrazzano.io
    namespaceSelector:
      matchExpressions:
        - { key: verrazzano.io/namespace, operator: NotIn, values: [ kube-system ] }
    clientConfig:
      service:
        name: {{ .Values.name }}
        namespace: {{ .Values.namespace }}
        path: "/validate-clusters-verrazzano-io-v1alpha1-verrazzanoproject"
    rules:
      - apiGroups:
          - clusters.verrazzano.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - verrazzanoprojects
    sideEffects: None
    failurePolicy: Fail
    matchPolicy: Exact
    timeoutSeconds: 30
    admissionReviewVersions:
      - v1beta1
      - v1
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: verrazzano-application-multiclusterapplicationconfiguration
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
webhooks:
  - name: verrazzano-clusters-multiclusterapplicationconfiguration-validator.verrazzano.io
    namespaceSelector:
      matchExpressions:
        - { key: verrazzano.io/namespace, operator: NotIn, values: [ kube-system ] }
    clientConfig:
      service:
        name: {{ .Values.name }}
        namespace: {{ .Values.namespace }}
        path: "/validate-clusters-verrazzano-io-v1alpha1-multiclusterapplicationconfiguration"
    rules:
      - apiGroups:
          - clusters.verrazzano.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - multiclusterapplicationconfigurations
    sideEffects: None
    failurePolicy: Fail
    matchPolicy: Exact
    timeoutSeconds: 30
    admissionReviewVersions:
      - v1beta1
      - v1
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: verrazzano-application-multiclustercomponent
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
webhooks:
  - name: verrazzano-clusters-multiclustercomponent-validator.verrazzano.io
    namespaceSelector:
      matchExpressions:
        - { key: verrazzano.io/namespace, operator: NotIn, values: [ kube-system ] }
    clientConfig:
      service:
        name: {{ .Values.name }}
        namespace: {{ .Values.namespace }}
        path: "/validate-clusters-verrazzano-io-v1alpha1-multiclustercomponent"
    rules:
      - apiGroups:
          - clusters.verrazzano.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - multiclustercomponents
    sideEffects: None
    failurePolicy: Fail
    matchPolicy: Exact
    timeoutSeconds: 30
    admissionReviewVersions:
      - v1beta1
      - v1
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: verrazzano-application-multiclusterconfigmap
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
webhooks:
  - name: verrazzano-clusters-multiclusterconfigmap-validator.verrazzano.io
    namespaceSelector:
      matchExpressions:
        - { key: verrazzano.io/namespace, operator: NotIn, values: [ kube-system ] }
    clientConfig:
      service:
        name: {{ .Values.name }}
        namespace: {{ .Values.namespace }}
        path: "/validate-clusters-verrazzano-io-v1alpha1-multiclusterconfigmap"
    rules:
      - apiGroups:
          - clusters.verrazzano.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - multiclusterconfigmaps
    sideEffects: None
    failurePolicy: Fail
    matchPolicy: Exact
    timeoutSeconds: 30
    admissionReviewVersions:
      - v1beta1
      - v1
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: verrazzano-application-multiclustersecret
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
webhooks:
  - name: verrazzano-clusters-multiclustersecret-validator.verrazzano.io
    namespaceSelector:
      matchExpressions:
        - { key: verrazzano.io/namespace, operator: NotIn, values: [ kube-system ] }
    clientConfig:
      service:
        name: {{ .Values.name }}
        namespace: {{ .Values.namespace }}
        path: "/validate-clusters-verrazzano-io-v1alpha1-multiclustersecret"
    rules:
      - apiGroups:
          - clusters.verrazzano.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - multiclustersecrets
    sideEffects: None
    failurePolicy: Fail
    matchPolicy: Exact
    timeoutSeconds: 30
    admissionReviewVersions:
      - v1beta1
      - v1
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: verrazzano-application-metrics-binding
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
webhooks:
  - name: metrics-binding-generator-workload.verrazzano.io
    namespaceSelector:
      matchExpressions:
        - { key: verrazzano.io/namespace, operator: NotIn, values: [ kube-system ] }
      matchLabels:
        verrazzano-managed: "true"
    objectSelector:
      matchExpressions:
        - key: app.oam.dev/component
          operator: DoesNotExist
    clientConfig:
      service:
        name: {{ .Values.name }}
        namespace: {{ .Values.namespace }}
        path: "/metrics-binding-generator-workload"
    rules:
      - operations: ["CREATE","UPDATE"]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["deployments","pods","replicasets","statefulsets"]
        scope: "Namespaced"
    sideEffects: None
    failurePolicy: Fail
    matchPolicy: Equivalent
    timeoutSeconds: 30
    admissionReviewVersions:
      - v1beta1
      - v1
  - name: metrics-binding-labeler-pod.verrazzano.io
    namespaceSelector:
      matchExpressions:
        - { key: verrazzano.io/namespace, operator: NotIn, values: [ kube-system ] }
      matchLabels:
        verrazzano-managed: "true"
    objectSelector:
      matchExpressions:
        - key: app.oam.dev/component
          operator: DoesNotExist
    clientConfig:
      service:
        name: {{ .Values.name }}
        namespace: {{ .Values.namespace }}
        path: "/metrics-binding-labeler-pod"
    rules:
      - operations: ["CREATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
        scope: "Namespaced"
    sideEffects: None
    failurePolicy: Fail
    matchPolicy: Equivalent
    timeoutSeconds: 30
    admissionReviewVersions:
      - v1beta1
      - v1
---
apiVersion: app.verrazzano.io/v1alpha1
kind: MetricsTemplate
metadata:
  name: standard-k8s-metrics-template
  namespace: {{ .Values.namespace }}
spec:
  workloadSelector:
    apiGroups: ["apps", ""]
    apiVersions: ["v1"]
    resources: ["deployment", "statefulset", "replicaset", "pod"]
  prometheusConfig:
    targetConfigMap:
      namespace: {{ .Values.namespace }}
      name: vmi-system-prometheus-config
    scrapeConfigTemplate: |
      kubernetes_sd_configs:
        - namespaces:
            names:
            - {{`{{.workload.metadata.namespace}}`}}
          role: pod
      relabel_configs:
        - action: replace
          replacement: local
          source_labels: null
          target_label: verrazzano_cluster
        - action: keep
          regex: {{`{{index .workload.metadata.labels "app.verrazzano.io/workload"}}`}};true
          source_labels:
            - __meta_kubernetes_pod_label_app_verrazzano_io_workload
            - __meta_kubernetes_pod_annotation_prometheus_io_scrape
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels:
            - __address__
            - __meta_kubernetes_pod_annotation_prometheus_io_port
          target_label: __address__
        - action: replace
          regex: (.*)
          source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_path
          target_label: __metrics_path__
        - action: replace
          regex: (.*)
          replacement: $1
          source_labels:
            - __meta_kubernetes_namespace
          target_label: namespace
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          source_labels:
            - __meta_kubernetes_pod_name
          target_label: pod_name
        - action: labeldrop
          regex: (controller_revision_hash)
        - action: replace
          regex: .*/(.*)$
          replacement: $1
          source_labels:
            - name
          target_label: webapp
      {{`{{ if index .namespace.metadata.labels "istio-injection" }}`}}
      {{`{{ if eq (index .namespace.metadata.labels "istio-injection" ) "enabled" }}`}}
      scheme: https
      tls_config:
        ca_file: /etc/istio-certs/root-cert.pem
        cert_file: /etc/istio-certs/cert-chain.pem
        insecure_skip_verify: true
        key_file: /etc/istio-certs/key.pem
      {{`{{ end }}`}}
      {{`{{ end }}`}}
