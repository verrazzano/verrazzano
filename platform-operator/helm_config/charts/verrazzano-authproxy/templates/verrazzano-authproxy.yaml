# Copyright (c) 2021, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Values.impersonatorRoleName }}
rules:
- apiGroups: [""]
  resources: ["users", "groups"]
  verbs: ["impersonate"]
- apiGroups: ["authentication.k8s.io"]
  resources: ["uids"]
  verbs: ["impersonate"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.impersonatorRoleName }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Values.impersonatorRoleName }}
subjects:
- kind: ServiceAccount
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.name }}
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
        traffic.sidecar.istio.io/excludeOutboundPorts: 443,6443
        verrazzano.io/metricsEnabled: "true"
        {{ if .Values.managedClusterRegistered }}
        verrazzano.io/managedClusterRegistered: "true"
        {{ end }}
        verrazzano.io/cmChecksum: {{ include (print $.Template.BasePath "/verrazzano-authproxy-configmap.yaml") . | sha256sum }}
      labels:
        app: {{ .Values.name }}
    spec:
      volumes:
       - name: api-config
         projected:
           sources:
            - secret:
                items:
                  - key: ca.crt
                    path: default-ca-bundle
                name:  verrazzano-tls
                optional: true
            - secret:
                name: verrazzano-cluster-registration
                optional: true
                items:
                  - key: ca-bundle
                    path: admin-ca-bundle
                  - key: keycloak-url
                    path: keycloak-url
            - secret:
                name: verrazzano-authproxy-secret
                items:
                  - key: cookie-encryption-key
                    path: cookie-encryption-key
            - configMap:
                name: verrazzano-authproxy-config
                items:
                  - key: startup.sh
                    path: startup.sh
                    mode: 0755
                  - key: nginx.conf
                    path: nginx.conf
                    mode: 0744 
                  - key: conf.lua
                    path: conf.lua
                    mode: 0755
                  - key: auth.lua
                    path: auth.lua
                    mode: 0755
                  - key: reload.sh
                    path: reload.sh
                    mode: 0755
      {{- with .Values.affinity }}
      affinity:
        {{- tpl . $ | nindent 8 }}
      {{- end }}
      containers:
      - image: {{ .Values.imageName }}:{{ .Values.imageVersion }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: {{ .Values.name }}
        command: ["/api-config/startup.sh"]
        env:
        - name: VZ_API_HOST
          value: "verrazzano.{{ .Values.config.envName }}.{{ .Values.config.dnsSuffix }}"
        - name: VZ_API_VERSION
          value: "20210501"
        ports:
        - containerPort: {{ .Values.port }}
        - containerPort: {{ .Values.grpcPort }}
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 1
          tcpSocket:
            port: {{ .Values.port }}
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 1
          timeoutSeconds: 1
          tcpSocket:
            port: {{ .Values.port }}
        volumeMounts:
        - mountPath: /api-config
          name: api-config
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            add:
              - NET_BIND_SERVICE
            drop:
              - ALL
      - image: {{ .Values.metricsImageName }}:{{ .Values.metricsImageVersion }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        name: verrazzano-authproxy-metrics
        command: [ "/usr/bin/nginx-prometheus-exporter" ]
        env:
        - name: SCRAPE_URI
          value: "http://localhost:{{ .Values.port }}/nginx_status"
        ports:
        - containerPort: 9113
          name: http-metrics
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /metrics
            port: http-metrics
          initialDelaySeconds: 3
          periodSeconds: 3
        startupProbe:
          httpGet:
            path: /metrics
            port: http-metrics
          failureThreshold: 30
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /metrics
            port: http-metrics
          failureThreshold: 3
          periodSeconds: 3
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      serviceAccountName: {{ .Values.name }}
      securityContext:
        runAsUser: 101  # nginx container user
        runAsGroup: 101 # nginx container group
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: http-api
    port: {{ .Values.port }}
    protocol: TCP
    targetPort: {{ .Values.port }}
  - name: grpc
    port: {{ .Values.grpcPort }}
    protocol: TCP
    targetPort: {{ .Values.grpcPort }}
  selector:
    app: {{ .Values.name }}
---
apiVersion: v1
kind: Service
metadata:
  name: verrazzano-authproxy-opensearch
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: http-authproxy
      port: {{ .Values.port }}
      protocol: TCP
      targetPort: {{ .Values.port }}
  selector:
    app: {{ .Values.name }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
{{- if .Values.global.imagePullSecrets }}
imagePullSecrets:
{{- range .Values.global.imagePullSecrets }}
- name: {{ . }}
{{- end }}
{{- end }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .Values.name }}-secret
  namespace: {{ .Release.Namespace }}
data:
  # encryption key generated dynamically and overridden on helm command line
  cookie-encryption-key: {{ randAscii 64 | b64enc | quote }}
