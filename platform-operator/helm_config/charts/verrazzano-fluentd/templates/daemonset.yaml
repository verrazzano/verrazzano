# Copyright (c) 2022, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.logging.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: fluentd
spec:
  selector:
    matchLabels:
      app: fluentd
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: fluentd
    spec:
      initContainers:
        - name: cacert-init
          command: ["/init/init.sh"]
          image: {{ .Values.logging.fluentdImage }}
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 999
            runAsGroup: 997
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /init
              name: {{ .Values.logging.name }}-init
              readOnly: true
            - name: cacerts
              mountPath: /fluentd/cacerts
            - mountPath: /fluentd/secret
              name: secret-volume
              readOnly: true
      containers:
        - args:
            - -c
            - /etc/fluentd.conf
          env:
            - name: FLUENTD_CONF
              value: fluentd-standalone.conf
            - name: FLUENT_ELASTICSEARCH_SED_DISABLE
              value: "true"
            - name: ELASTICSEARCH_URL
              value: {{ .Values.logging.osURL }}
            - name: CLUSTER_NAME
              value: {{ .Values.logging.clusterName }}
            - name: ELASTICSEARCH_USER
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.logging.usernameKey }}
                  name: {{ .Values.logging.credentialsSecret }}
                  optional: true
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.logging.passwordKey }}
                  name: {{ .Values.logging.credentialsSecret }}
                  optional: true
            - name: CA_FILE
              value: /fluentd/cacerts/all-ca-certs.pem
            - name: CONFIG_HASH
{{- if .Values.logging.configHash }}
              value: {{ .Values.logging.configHash }}
{{- else }}
              value: none
{{- end }}
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: {{ .Values.logging.fluentdImage }}
          imagePullPolicy: IfNotPresent
          securityContext:
{{- if .Values.seLinuxOptions }}
            seLinuxOptions:
              type: {{ .Values.seLinuxOptions.type }}
              level: {{ .Values.seLinuxOptions.level }}
              role: {{ .Values.seLinuxOptions.role }}
              user: {{ .Values.seLinuxOptions.user }}
{{- end }}
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - DAC_OVERRIDE
          ports:
          - containerPort: 24231
            name: http-metrics
            protocol: TCP
          name: {{ .Values.logging.name }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: cacerts
              mountPath: /fluentd/cacerts
            - mountPath: /fluentd/secret
              name: secret-volume
              readOnly: true
  {{- if .Values.fluentd.oci }}
  {{- if .Values.fluentd.oci.apiSecret }}
            - mountPath: /root/.oci
              name: oci-secret-volume
              readOnly: true
  {{- end }}
  {{- end }}
            - mountPath: /fluentd/etc
              name: {{ .Values.logging.name }}-config
              readOnly: true
            - mountPath: /var/log
              name: varlog
              readOnly: false
            - mountPath: /var/lib
              name: varlib
              readOnly: true
            - mountPath: /run/log/journal
              name: run-log-journal
              readOnly: true
{{- if .Values.fluentd.extraVolumeMounts }}
{{- range $i, $e := .Values.fluentd.extraVolumeMounts }}
            - mountPath: {{ $e.destination }}
              name: extra-volume-{{ $i }}
              readOnly: {{ $e.readOnly }}
{{- end }}
{{- end }}
      serviceAccountName: fluentd
      terminationGracePeriodSeconds: 30
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - configMap:
            defaultMode: 0755
            name: {{ .Values.logging.name }}-init
          name: {{ .Values.logging.name }}-init
        - name: cacerts
          emptyDir: {}
        - name: secret-volume
          secret:
            secretName: {{ .Values.logging.credentialsSecret }}
            optional: true
  {{- if .Values.fluentd.oci }}
  {{- if .Values.fluentd.oci.apiSecret }}
        - name: oci-secret-volume
          secret:
            secretName: {{ .Values.fluentd.oci.apiSecret }}
  {{- end }}
  {{- end }}
        - configMap:
            name: {{ .Values.logging.name }}-config
          name: {{ .Values.logging.name }}-config
        - hostPath:
            path: /var/log
            type: ""
          name: varlog
        - hostPath:
            path: /var/lib
            type: ""
          name: varlib
        - hostPath:
            path: /run/log/journal
            type: ""
          name: run-log-journal
{{- if .Values.fluentd.extraVolumeMounts }}
{{- range $i, $e := .Values.fluentd.extraVolumeMounts }}
        - hostPath:
            path: {{ $e.source }}
            type: ""
          name: extra-volume-{{ $i }}
{{- end }}
{{- end }}
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
