# Copyright (c) 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

manager:

  image:
    repository: public.ecr.aws/opsterio/opensearch-operator
    ## tag default uses appVersion from Chart.yaml, to override specify tag tag: "v1.1"
    tag: "2.3.0"
    pullPolicy: "IfNotPresent"

ingress:
  opensearch:
    enable: true
    annotations:
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "65M"
      nginx.ingress.kubernetes.io/rewrite-target: "/$2"
      nginx.ingress.kubernetes.io/service-upstream: "true"
      nginx.ingress.kubernetes.io/upstream-vhost: "${service_name}.${namespace}.svc.cluster.local"
    path: /()(.*)
    ingressClassName: verrazzano-nginx
    host: ""
    serviceName: verrazzano-authproxy
    portNumber: 8775
    tls: []

  opensearchDashboards:
    enable: true
    annotations:
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "65M"
      nginx.ingress.kubernetes.io/rewrite-target: "/$2"
      nginx.ingress.kubernetes.io/service-upstream: "true"
      nginx.ingress.kubernetes.io/upstream-vhost: "${service_name}.${namespace}.svc.cluster.local"
    path: /()(.*)
    ingressClassName: verrazzano-nginx
    host: ""
    serviceName: verrazzano-authproxy
    portNumber: 8775
    tls: []

opensearchCluster:
  enabled: true
  name: opensearch
  security:
    config:
      adminCredentialsSecret:
        name: admin-credentials-secret
      securityConfigSecret:
        name: securityconfig-secret
      adminSecret:
        name: opensearch-admin-cert
    tls:
      transport:
        generate: false
        secret:
          name: opensearch-node-cert
        adminDn: ["CN=admin,O=verrazzano"]
        nodesDn: ["CN=opensearch,O=verrazzano"]
      http:
        generate: false
        secret:
          name: opensearch-master-cert
  general:
    image: "iad.ocir.io/odsbuilddev/sandboxes/saket.m.mahto/opensearch-security:experimental"
    httpPort: 9200
    serviceName: opensearch
    version: 2.3.0
    drainDataNodes: true
    setVMMaxMapCount: true
  #    podSecurityContext:
  #      securityContext:
  #        seccompProfile:
  #          type: RuntimeDefault
  #    securityContext:
  #      allowPrivilegeEscalation: false
  #      capabilities:
  #        drop:
  #          - ALL
  #      privileged: false
  #      runAsUser: 1000
  dashboards:
    image: "iad.ocir.io/odsbuilddev/sandboxes/isha.girdhar/osd:latest"
    opensearchCredentialsSecret:
      name: admin-credentials-secret
    additionalConfig:
      server.name: opensearch-dashboards
      opensearch_security.auth.type: "proxy"
      opensearch_security.proxycache.user_header: "X-WEBAUTH-USER"
      opensearch_security.proxycache.roles_header: "x-proxy-roles"
      opensearch.requestHeadersAllowlist: "[\"securitytenant\",\"Authorization\",\"x-forwarded-for\",\"X-WEBAUTH-USER\",\"x-proxy-roles\"]"
      opensearch_security.multitenancy.enabled: "false"
    tls:
      enable: true
      generate: false
      secret:
        name: opensearch-dashboards-cert
    version: 2.3.0
    enable: true
    replicas: 1
#    securityContext:
#      allowPrivilegeEscalation: false
#      capabilities:
#        drop:
#          - ALL
#      privileged: false
#    podSecurityContext:
#      fsGroup: 1000
#      runAsGroup: 1000
#      runAsNonRoot: true
#      runAsUser: 1000
#      seccompProfile:
#        type: RuntimeDefault