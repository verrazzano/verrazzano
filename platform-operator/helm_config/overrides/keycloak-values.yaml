# Copyright (c) 2021, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

# NOTE: The extraInitContainers value is now set in the installation script (4-install-keycloak.sh) so that we can specify the
# image using data from the bill of materials file (verrazzano-bom.json).

# NOTE: The keycloak image now comes from the bill of materials file (verrazzano-bom.json).

postgresql:
  enabled: false

extraEnv: |
  - name: CACHE_OWNERS
    value: "2"
  - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
    value: "2"
  - name: JGROUPS_DISCOVERY_PROTOCOL
    value: JDBC_PING
  - name: JGROUPS_DISCOVERY_PROPERTIES
    value: "remove_all_data_on_view_change=true"
  - name: DB_VENDOR
    value: mysql
  - name: DB_ADDR
    value: mysql
  - name: DB_PORT
    value: "3306"
  - name: DB_DATABASE
    value: keycloak
  - name: DB_USER
    value: "keycloak"
  - name: DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: mysql
        key: mysql-password
  - name: PROXY_ADDRESS_FORWARDING
    value: "true"
  - name: KEYCLOAK_USER
    value: "keycloakadmin"
  - name: KEYCLOAK_PASSWORD
    valueFrom:
      secretKeyRef:
        name: keycloak-http
        key: password

extraVolumes: |
  - name: theme
    emptyDir: {}
  - name: cacerts
    emptyDir: {}
  - name: keycloak-http
    secret:
       secretName: keycloak-http

extraVolumeMounts: |
  - name: theme
    mountPath: /opt/jboss/keycloak/themes/oracle
  - name: keycloak-http
    mountPath: /etc/keycloak-http

extraPorts:
  - name: jgroups
    containerPort: 7600
    protocol: TCP

service:
  port: 8083
  extraPorts:
    - name: jgroups
      port: 7600
      targetPort: jgroups

podAnnotations:
  traffic.sidecar.istio.io/excludeInboundPorts: "7600"
  traffic.sidecar.istio.io/excludeOutboundPorts: "7600"

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
    external-dns.alpha.kubernetes.io/ttl: "60"
    nginx.ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/upstream-vhost: "keycloak-http.${namespace}.svc.cluster.local"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-conditional-samesite-none: "true"
    nginx.ingress.kubernetes.io/session-cookie-expires: "86400"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    nginx.ingress.kubernetes.io/session-cookie-name: "keycloak"
    nginx.ingress.kubernetes.io/session-cookie-samesite: "Strict"
    external-dns.alpha.kubernetes.io/target: "{{ .Values.dnsTarget }}"
  rules:
    -
      paths:
        - path: /
          pathType: ImplementationSpecific
      host: "{{ .Values.rulesHost }}"
  tls:
    -
      hosts:
        - "{{ .Values.tlsHosts }}"
      secretName: "{{ .Values.tlsSecret }}"

securityContext:
  runAsUser: 0
  runAsNonRoot: false

replicas: 1
