# Copyright (c) 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    control-plane: controller-manager
  name: cluster-api-provider-oci-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-oci-system/capoci-serving-cert
    controller-gen.kubebuilder.io/version: v0.10.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ociclusteridentities.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: capoci-webhook-service
          namespace: cluster-api-provider-oci-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: OCIClusterIdentity
    listKind: OCIClusterIdentityList
    plural: ociclusteridentities
    singular: ociclusteridentity
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: OCIClusterIdentity is the Schema for the OCI Cluster Identity
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIClusterIdentitySpec defines the parameters that are used
              to create an OCIClusterIdentity.
            properties:
              allowedNamespaces:
                description: AllowedNamespaces is used to identify the namespaces
                  the clusters are allowed to use the identity from. Namespaces can
                  be selected either using an array of namespaces or with label selector.
                  An empty allowedNamespaces object indicates that OCIClusters can
                  use this identity from any namespace. If this object is nil, no
                  namespaces will be allowed (default behaviour, if this field is
                  not provided) A namespace should be either in the NamespaceList
                  or match with Selector to use the identity.
                nullable: true
                properties:
                  list:
                    description: A nil or empty list indicates that OCICluster cannot
                      use the identity from any namespace. NamespaceList takes precedence
                      over the Selector.
                    items:
                      type: string
                    nullable: true
                    type: array
                  selector:
                    description: "Selector is a selector of namespaces that OCICluster
                      can use this Identity from. This is a standard Kubernetes LabelSelector,
                      a label query over a set of resources. The result of matchLabels
                      and matchExpressions are ANDed. \n A nil or empty selector indicates
                      that OCICluster cannot use this OCIClusterIdentity from any
                      namespace."
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              principalSecret:
                description: PrincipalSecret is a secret reference which contains
                  the authentication credentials for the principal.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              type:
                description: Type is the type of OCI Principal used. UserPrincipal
                  is the only supported value
                type: string
            required:
            - type
            type: object
          status:
            description: OCIClusterIdentityStatus defines the observed state of OCIClusterIdentity.
            properties:
              conditions:
                description: Conditions defines current service state of the OCIClusterIdentity.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: OCIClusterIdentity is the Schema for the OCI Cluster Identity
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIClusterIdentitySpec defines the parameters that are used
              to create an OCIClusterIdentity.
            properties:
              allowedNamespaces:
                description: AllowedNamespaces is used to identify the namespaces
                  the clusters are allowed to use the identity from. Namespaces can
                  be selected either using an array of namespaces or with label selector.
                  An empty allowedNamespaces object indicates that OCIClusters can
                  use this identity from any namespace. If this object is nil, no
                  namespaces will be allowed (default behaviour, if this field is
                  not provided) A namespace should be either in the NamespaceList
                  or match with Selector to use the identity.
                nullable: true
                properties:
                  list:
                    description: A nil or empty list indicates that OCICluster cannot
                      use the identity from any namespace. NamespaceList takes precedence
                      over the Selector.
                    items:
                      type: string
                    nullable: true
                    type: array
                  selector:
                    description: "Selector is a selector of namespaces that OCICluster
                      can use this Identity from. This is a standard Kubernetes LabelSelector,
                      a label query over a set of resources. The result of matchLabels
                      and matchExpressions are ANDed. \n A nil or empty selector indicates
                      that OCICluster cannot use this OCIClusterIdentity from any
                      namespace."
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              principalSecret:
                description: PrincipalSecret is a secret reference which contains
                  the authentication credentials for the principal.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              type:
                description: Type is the type of OCI Principal used. UserPrincipal
                  is the only supported value
                type: string
            required:
            - type
            type: object
          status:
            description: OCIClusterIdentityStatus defines the observed state of OCIClusterIdentity.
            properties:
              conditions:
                description: Conditions defines current service state of the OCIClusterIdentity.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-oci-system/capoci-serving-cert
    controller-gen.kubebuilder.io/version: v0.10.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ociclusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: capoci-webhook-service
          namespace: cluster-api-provider-oci-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: OCICluster
    listKind: OCIClusterList
    plural: ociclusters
    singular: ocicluster
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: OCICluster is the Schema for the ociclusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIClusterSpec defines the desired state of OciCluster
            properties:
              compartmentId:
                description: Compartment to create the cluster network.
                type: string
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              definedTags:
                additionalProperties:
                  additionalProperties:
                    type: string
                  type: object
                description: 'Defined tags for this resource. Each key is predefined
                  and scoped to a namespace. For more information, see Resource Tags
                  (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                  Example: `{"Operations": {"CostCenter": "42"}}`'
                type: object
              freeformTags:
                additionalProperties:
                  type: string
                description: Free-form tags for this resource.
                type: object
              identityRef:
                description: IdentityRef is a reference to an identity(principal)
                  to be used when reconciling this cluster
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              networkSpec:
                description: NetworkSpec encapsulates all things related to OCI network.
                properties:
                  apiServerLoadBalancer:
                    description: API Server LB configuration.
                    properties:
                      loadBalancerId:
                        description: ID of Load Balancer.
                        type: string
                      name:
                        description: LoadBalancer Name.
                        type: string
                    type: object
                  skipNetworkManagement:
                    description: SkipNetworkManagement defines if the networking spec(VCN
                      related) specified by the user needs to be reconciled(actioned-upon)
                      or used as it is. APIServerLB will still be reconciled.
                    type: boolean
                  vcn:
                    description: VCN configuration.
                    properties:
                      cidr:
                        description: VCN CIDR.
                        type: string
                      id:
                        description: VCN OCID.
                        type: string
                      internetGatewayId:
                        description: ID of Internet Gateway.
                        type: string
                      name:
                        description: VCN Name.
                        type: string
                      natGatewayId:
                        description: ID of Nat Gateway.
                        type: string
                      networkSecurityGroups:
                        description: NetworkSecurityGroups is the configuration for
                          the Network Security Groups required in the VCN.
                        items:
                          description: NSG defines configuration for a Network Security
                            Group. https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/networksecuritygroups.htm
                          properties:
                            egressRules:
                              description: EgressRules on the NSG.
                              items:
                                description: EgressSecurityRuleForNSG is EgressSecurityRule
                                  for NSG.
                                properties:
                                  egressRule:
                                    description: EgressSecurityRule A rule for allowing
                                      outbound IP packets.
                                    properties:
                                      description:
                                        description: An optional description of your
                                          choice for the rule.
                                        type: string
                                      destination:
                                        description: 'Conceptually, this is the range
                                          of IP addresses that a packet originating
                                          from the instance can go to. Allowed values:
                                          * IP address range in CIDR notation. For
                                          example: `192.168.1.0/24` or `2001:0db8:0123:45::/56`
                                          Note that IPv6 addressing is currently supported
                                          only in certain regions. See IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                          * The `cidrBlock` value for a Service, if
                                          you''re setting up a security list rule
                                          for traffic destined for a particular `Service`
                                          through a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                        type: string
                                      destinationType:
                                        description: 'Type of destination for the
                                          rule. The default is `CIDR_BLOCK`. Allowed
                                          values: * `CIDR_BLOCK`: If the rule''s `destination`
                                          is an IP address range in CIDR notation.
                                          * `SERVICE_CIDR_BLOCK`: If the rule''s `destination`
                                          is the `cidrBlock` value for a Service (the
                                          rule is for traffic destined for a particular
                                          `Service` through a service gateway).'
                                        type: string
                                      icmpOptions:
                                        description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                        properties:
                                          code:
                                            description: The ICMP code (optional).
                                            type: integer
                                          type:
                                            description: The ICMP type.
                                            type: integer
                                        type: object
                                      isStateless:
                                        description: A stateless rule allows traffic
                                          in one direction. Remember to add a corresponding
                                          stateless rule in the other direction if
                                          you need to support bidirectional traffic.
                                          For example, if egress traffic allows TCP
                                          destination port 80, there should be an
                                          ingress rule to allow TCP source port 80.
                                          Defaults to false, which means the rule
                                          is stateful and a corresponding rule is
                                          not necessary for bidirectional traffic.
                                        type: boolean
                                      protocol:
                                        description: The transport protocol. Specify
                                          either `all` or an IPv4 protocol number
                                          as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                          Options are supported only for ICMP ("1"),
                                          TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                        type: string
                                      tcpOptions:
                                        description: TcpOptions Optional and valid
                                          only for TCP. Use to specify particular
                                          destination ports for TCP rules. If you
                                          specify TCP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                      udpOptions:
                                        description: UdpOptions Optional and valid
                                          only for UDP. Use to specify particular
                                          destination ports for UDP rules. If you
                                          specify UDP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                    type: object
                                  id:
                                    description: 'EgressSecurityRule ID for NSG. Deprecated:
                                      this field is not populated and used during
                                      reconciliation'
                                    type: string
                                type: object
                              type: array
                            id:
                              description: NSG OCID.
                              type: string
                            ingressRules:
                              description: IngressRules on the NSG.
                              items:
                                description: IngressSecurityRuleForNSG is IngressSecurityRule
                                  for NSG
                                properties:
                                  id:
                                    description: 'IngressSecurityRule ID for NSG.
                                      Deprecated: this field is not populated and
                                      used during reconciliation'
                                    type: string
                                  ingressRule:
                                    description: IngressSecurityRule A rule for allowing
                                      inbound IP packets.
                                    properties:
                                      description:
                                        description: An optional description of your
                                          choice for the rule.
                                        type: string
                                      icmpOptions:
                                        description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                        properties:
                                          code:
                                            description: The ICMP code (optional).
                                            type: integer
                                          type:
                                            description: The ICMP type.
                                            type: integer
                                        type: object
                                      isStateless:
                                        description: A stateless rule allows traffic
                                          in one direction. Remember to add a corresponding
                                          stateless rule in the other direction if
                                          you need to support bidirectional traffic.
                                          For example, if ingress traffic allows TCP
                                          destination port 80, there should be an
                                          egress rule to allow TCP source port 80.
                                          Defaults to false, which means the rule
                                          is stateful and a corresponding rule is
                                          not necessary for bidirectional traffic.
                                        type: boolean
                                      protocol:
                                        description: The transport protocol. Specify
                                          either `all` or an IPv4 protocol number
                                          as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                          Options are supported only for ICMP ("1"),
                                          TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                        type: string
                                      source:
                                        description: 'Conceptually, this is the range
                                          of IP addresses that a packet coming into
                                          the instance can come from. Allowed values:
                                          * IP address range in CIDR notation. For
                                          example: `192.168.1.0/24` or `2001:0db8:0123:45::/56`.
                                          IPv6 addressing is supported for all commercial
                                          and government regions. See IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                          * The `cidrBlock` value for a Service, if
                                          you''re setting up a security list rule
                                          for traffic coming from a particular `Service`
                                          through a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                        type: string
                                      sourceType:
                                        description: 'Type of source for the rule.
                                          The default is `CIDR_BLOCK`. * `CIDR_BLOCK`:
                                          If the rule''s `source` is an IP address
                                          range in CIDR notation. * `SERVICE_CIDR_BLOCK`:
                                          If the rule''s `source` is the `cidrBlock`
                                          value for a Service (the rule is for traffic
                                          coming from a particular `Service` through
                                          a service gateway).'
                                        type: string
                                      tcpOptions:
                                        description: TcpOptions Optional and valid
                                          only for TCP. Use to specify particular
                                          destination ports for TCP rules. If you
                                          specify TCP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                      udpOptions:
                                        description: UdpOptions Optional and valid
                                          only for UDP. Use to specify particular
                                          destination ports for UDP rules. If you
                                          specify UDP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                    type: object
                                type: object
                              type: array
                            name:
                              description: NSG Name.
                              type: string
                            role:
                              description: Role defines the NSG role (eg. control-plane,
                                control-plane-endpoint, service-lb, worker).
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      privateRouteTableId:
                        description: ID of Private Route Table.
                        type: string
                      publicRouteTableId:
                        description: ID of Public Route Table.
                        type: string
                      serviceGatewayId:
                        description: ID of Service Gateway.
                        type: string
                      subnets:
                        description: Subnets is the configuration for subnets required
                          in the VCN.
                        items:
                          description: Subnet defines the configuration for a network's
                            subnet https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/managingVCNs_topic-Overview_of_VCNs_and_Subnets.htm#Overview
                          properties:
                            cidr:
                              description: Subnet CIDR.
                              type: string
                            id:
                              description: Subnet OCID.
                              type: string
                            name:
                              description: Subnet Name.
                              type: string
                            role:
                              description: Role defines the subnet role (eg. control-plane,
                                control-plane-endpoint, service-lb, worker).
                              type: string
                            securityList:
                              description: The security list associated with Subnet.
                              properties:
                                egressRules:
                                  description: EgressRules on the SecurityList.
                                  items:
                                    description: EgressSecurityRule A rule for allowing
                                      outbound IP packets.
                                    properties:
                                      description:
                                        description: An optional description of your
                                          choice for the rule.
                                        type: string
                                      destination:
                                        description: 'Conceptually, this is the range
                                          of IP addresses that a packet originating
                                          from the instance can go to. Allowed values:
                                          * IP address range in CIDR notation. For
                                          example: `192.168.1.0/24` or `2001:0db8:0123:45::/56`
                                          Note that IPv6 addressing is currently supported
                                          only in certain regions. See IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                          * The `cidrBlock` value for a Service, if
                                          you''re setting up a security list rule
                                          for traffic destined for a particular `Service`
                                          through a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                        type: string
                                      destinationType:
                                        description: 'Type of destination for the
                                          rule. The default is `CIDR_BLOCK`. Allowed
                                          values: * `CIDR_BLOCK`: If the rule''s `destination`
                                          is an IP address range in CIDR notation.
                                          * `SERVICE_CIDR_BLOCK`: If the rule''s `destination`
                                          is the `cidrBlock` value for a Service (the
                                          rule is for traffic destined for a particular
                                          `Service` through a service gateway).'
                                        type: string
                                      icmpOptions:
                                        description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                        properties:
                                          code:
                                            description: The ICMP code (optional).
                                            type: integer
                                          type:
                                            description: The ICMP type.
                                            type: integer
                                        type: object
                                      isStateless:
                                        description: A stateless rule allows traffic
                                          in one direction. Remember to add a corresponding
                                          stateless rule in the other direction if
                                          you need to support bidirectional traffic.
                                          For example, if egress traffic allows TCP
                                          destination port 80, there should be an
                                          ingress rule to allow TCP source port 80.
                                          Defaults to false, which means the rule
                                          is stateful and a corresponding rule is
                                          not necessary for bidirectional traffic.
                                        type: boolean
                                      protocol:
                                        description: The transport protocol. Specify
                                          either `all` or an IPv4 protocol number
                                          as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                          Options are supported only for ICMP ("1"),
                                          TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                        type: string
                                      tcpOptions:
                                        description: TcpOptions Optional and valid
                                          only for TCP. Use to specify particular
                                          destination ports for TCP rules. If you
                                          specify TCP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                      udpOptions:
                                        description: UdpOptions Optional and valid
                                          only for UDP. Use to specify particular
                                          destination ports for UDP rules. If you
                                          specify UDP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                    type: object
                                  type: array
                                id:
                                  description: ID of the SecurityList.
                                  type: string
                                ingressRules:
                                  description: IngressRules on the SecurityList.
                                  items:
                                    description: IngressSecurityRule A rule for allowing
                                      inbound IP packets.
                                    properties:
                                      description:
                                        description: An optional description of your
                                          choice for the rule.
                                        type: string
                                      icmpOptions:
                                        description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                        properties:
                                          code:
                                            description: The ICMP code (optional).
                                            type: integer
                                          type:
                                            description: The ICMP type.
                                            type: integer
                                        type: object
                                      isStateless:
                                        description: A stateless rule allows traffic
                                          in one direction. Remember to add a corresponding
                                          stateless rule in the other direction if
                                          you need to support bidirectional traffic.
                                          For example, if ingress traffic allows TCP
                                          destination port 80, there should be an
                                          egress rule to allow TCP source port 80.
                                          Defaults to false, which means the rule
                                          is stateful and a corresponding rule is
                                          not necessary for bidirectional traffic.
                                        type: boolean
                                      protocol:
                                        description: The transport protocol. Specify
                                          either `all` or an IPv4 protocol number
                                          as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                          Options are supported only for ICMP ("1"),
                                          TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                        type: string
                                      source:
                                        description: 'Conceptually, this is the range
                                          of IP addresses that a packet coming into
                                          the instance can come from. Allowed values:
                                          * IP address range in CIDR notation. For
                                          example: `192.168.1.0/24` or `2001:0db8:0123:45::/56`.
                                          IPv6 addressing is supported for all commercial
                                          and government regions. See IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                          * The `cidrBlock` value for a Service, if
                                          you''re setting up a security list rule
                                          for traffic coming from a particular `Service`
                                          through a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                        type: string
                                      sourceType:
                                        description: 'Type of source for the rule.
                                          The default is `CIDR_BLOCK`. * `CIDR_BLOCK`:
                                          If the rule''s `source` is an IP address
                                          range in CIDR notation. * `SERVICE_CIDR_BLOCK`:
                                          If the rule''s `source` is the `cidrBlock`
                                          value for a Service (the rule is for traffic
                                          coming from a particular `Service` through
                                          a service gateway).'
                                        type: string
                                      tcpOptions:
                                        description: TcpOptions Optional and valid
                                          only for TCP. Use to specify particular
                                          destination ports for TCP rules. If you
                                          specify TCP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                      udpOptions:
                                        description: UdpOptions Optional and valid
                                          only for UDP. Use to specify particular
                                          destination ports for UDP rules. If you
                                          specify UDP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                    type: object
                                  type: array
                                name:
                                  description: SecurityList Name.
                                  type: string
                              type: object
                            type:
                              description: Type defines the subnet type (e.g. public,
                                private).
                              type: string
                          required:
                          - name
                          - role
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    type: object
                  vcnPeering:
                    description: VCNPeering configuration.
                    properties:
                      drg:
                        description: DRG configuration refers to the DRG which has
                          to be created if required. If management cluster and workload
                          cluster shares the same DRG, this fields is not required
                          to be specified.
                        properties:
                          id:
                            description: ID is the OCID for the created DRG.
                            type: string
                          manage:
                            description: Manage defines whether the DRG has to be
                              managed(including create). If set to false(the default)
                              the ID has to be specified by the user to a valid DRG
                              ID to which the VCN has to be attached.
                            type: boolean
                          name:
                            description: Name is the name of the created DRG.
                            type: string
                          vcnAttachmentId:
                            description: VcnAttachmentId is the ID of the VCN attachment
                              of the DRG. The workload cluster VCN can be attached
                              to either the management cluster VCN if they are sharing
                              the same DRG or to the workload cluster DRG.
                            type: string
                        type: object
                      peerRouteRules:
                        description: PeerRouteRules defines the routing rules which
                          will be added to the private route tables of the workload
                          cluster VCN. The routes defined here will be directed to
                          DRG.
                        items:
                          description: PeerRouteRule defines a Route Rule to be routed
                            via a DRG.
                          properties:
                            vcnCIDRRange:
                              description: VCNCIDRRange is the CIDR Range of peer
                                VCN to which the workload cluster VCN will be peered.
                                The CIDR range is required to add the route rule in
                                the workload cluster VCN, the route rule will forward
                                any traffic to the CIDR to the DRG.
                              type: string
                          type: object
                        type: array
                      remotePeeringConnections:
                        description: RemotePeeringConnections defines the RPC connections
                          which be established with the workload cluster DRG.
                        items:
                          description: RemotePeeringConnection is used to peer VCNs
                            residing in different regions(typically). Remote VCN Peering
                            is explained here - https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/remoteVCNpeering.htm
                          properties:
                            managePeerRPC:
                              description: ManagePeerRPC will define if the Peer VCN
                                needs to be managed. If set to true a Remote Peering
                                Connection will be created in the Peer DRG and the
                                connection will be created between local and peer
                                RPC.
                              type: boolean
                            peerDRGId:
                              description: PeerDRGId defines the DRG ID of the peer.
                              type: string
                            peerRPCConnectionId:
                              description: PeerRPCConnectionId defines the RPC ID
                                of peer. If ManagePeerRPC is set to true this will
                                be created by Cluster API Provider for OCI, otherwise
                                this has be defined by the user.
                              type: string
                            peerRegionName:
                              description: PeerRegionName defined the region name
                                of Peer VCN.
                              type: string
                            rpcConnectionId:
                              description: RPCConnectionId is the connection ID of
                                the connection between peer and local RPC.
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              ociResourceIdentifier:
                description: The unique ID which will be used to tag all the resources
                  created by this Cluster. The tag will be used to identify resources
                  belonging to this cluster. this will be auto-generated and should
                  not be set by the user.
                type: string
              region:
                description: Region the cluster operates in. It must be one of available
                  regions in Region Identifier format. See https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
                type: string
            type: object
          status:
            description: OCIClusterStatus defines the observed state of OCICluster
            properties:
              availabilityDomains:
                additionalProperties:
                  description: OCIAvailabilityDomain contains information about an
                    Availability Domain (AD).
                  properties:
                    faultDomains:
                      description: 'FaultDomains a list of fault domain (FD) names.
                        Example: ["FAULT-DOMAIN-1"]'
                      items:
                        type: string
                      type: array
                    name:
                      description: 'Name is the AD''s full name. Example: Uocm:PHX-AD-1'
                      type: string
                  type: object
                description: AvailabilityDomains encapsulates the clusters Availability
                  Domain (AD) information in a map where the map key is the AD name
                  and the struct is details about the AD.
                type: object
              conditions:
                description: NetworkSpec encapsulates all things related to OCI network.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureDomains:
                additionalProperties:
                  description: FailureDomainSpec is the Schema for Cluster API failure
                    domains. It allows controllers to understand how many failure
                    domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: FailureDomains is a slice of FailureDomains.
                type: object
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: OCICluster is the Schema for the ociclusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIClusterSpec defines the desired state of OciCluster
            properties:
              availabilityDomains:
                additionalProperties:
                  description: OCIAvailabilityDomain contains information about an
                    Availability Domain (AD).
                  properties:
                    faultDomains:
                      description: 'FaultDomains a list of fault domain (FD) names.
                        Example: ["FAULT-DOMAIN-1"]'
                      items:
                        type: string
                      type: array
                    name:
                      description: 'Name is the AD''s full name. Example: Uocm:PHX-AD-1'
                      type: string
                  type: object
                description: AvailabilityDomains encapsulates the clusters Availability
                  Domain (AD) information in a map where the map key is the AD name
                  and the struct is details about the AD.
                type: object
              clientOverrides:
                description: ClientOverrides allows the default client SDK URLs to
                  be changed.
                nullable: true
                properties:
                  certOverride:
                    description: CertOverride is a secret that contains information
                      about a cert override used by all the OCI SDK clients. The secret
                      must contain data with a `cert`property.
                    nullable: true
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  computeClientUrl:
                    description: ComputeClientUrl allows the default compute SDK client
                      URL to be changed.
                    nullable: true
                    type: string
                  computeManagementClientUrl:
                    description: ComputeManagementClientUrl allows the default compute
                      management SDK client URL to be changed.
                    nullable: true
                    type: string
                  containerEngineClientUrl:
                    description: ContainerEngineClientUrl allows the default container
                      engine SDK client URL to be changed.
                    nullable: true
                    type: string
                  identityClientUrl:
                    description: IdentityClientUrl allows the default identity SDK
                      client URL to be changed.
                    nullable: true
                    type: string
                  loadBalancerClientUrl:
                    description: LoadBalancerClientUrl allows the default load balancer
                      SDK client URL to be changed.
                    nullable: true
                    type: string
                  networkLoadBalancerClientUrl:
                    description: NetworkLoadBalancerClientUrl allows the default NLB
                      SDK client URL to be changed.
                    nullable: true
                    type: string
                  vCNClientUrl:
                    description: VCNClientUrl allows the default vcn SDK client URL
                      to be changed.
                    nullable: true
                    type: string
                type: object
              compartmentId:
                description: Compartment to create the cluster network.
                type: string
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              definedTags:
                additionalProperties:
                  additionalProperties:
                    type: string
                  type: object
                description: 'Defined tags for this resource. Each key is predefined
                  and scoped to a namespace. For more information, see Resource Tags
                  (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                  Example: `{"Operations": {"CostCenter": "42"}}`'
                type: object
              freeformTags:
                additionalProperties:
                  type: string
                description: Free-form tags for this resource.
                type: object
              identityRef:
                description: IdentityRef is a reference to an identity(principal)
                  to be used when reconciling this cluster
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              networkSpec:
                description: NetworkSpec encapsulates all things related to OCI network.
                properties:
                  apiServerLoadBalancer:
                    description: API Server LB configuration.
                    properties:
                      loadBalancerId:
                        description: ID of Load Balancer.
                        type: string
                      loadBalancerType:
                        description: 'Type of Load Balancer: NLB (default) or LBaaS.'
                        type: string
                      name:
                        description: LoadBalancer Name.
                        type: string
                    type: object
                  skipNetworkManagement:
                    description: SkipNetworkManagement defines if the networking spec(VCN
                      related) specified by the user needs to be reconciled(actioned-upon)
                      or used as it is. APIServerLB will still be reconciled.
                    type: boolean
                  vcn:
                    description: VCN configuration.
                    properties:
                      cidr:
                        description: VCN CIDR.
                        type: string
                      id:
                        description: VCN OCID.
                        type: string
                      internetGateway:
                        description: Configuration for Internet Gateway.
                        properties:
                          id:
                            description: ID of Internet Gateway.
                            type: string
                          skip:
                            description: Skip specifies whether to skip creating internet
                              gateway even if any one Subnet is public.
                            type: boolean
                        type: object
                      name:
                        description: VCN Name.
                        type: string
                      natGateway:
                        description: Configuration for NAT Gateway.
                        properties:
                          id:
                            description: ID of Nat Gateway.
                            type: string
                          skip:
                            description: Skip specifies whether to skip creating NAT
                              gateway even if any one Subnet is private.
                            type: boolean
                        type: object
                      networkSecurityGroup:
                        description: Configuration for NSG management.
                        properties:
                          list:
                            description: NetworkSecurityGroup is the configuration
                              for the Network Security Groups required in the VCN.
                            items:
                              description: NSG defines configuration for a Network
                                Security Group. https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/networksecuritygroups.htm
                              properties:
                                egressRules:
                                  description: EgressRules on the NSG.
                                  items:
                                    description: EgressSecurityRuleForNSG is EgressSecurityRule
                                      for NSG.
                                    properties:
                                      egressRule:
                                        description: EgressSecurityRule A rule for
                                          allowing outbound IP packets.
                                        properties:
                                          description:
                                            description: An optional description of
                                              your choice for the rule.
                                            type: string
                                          destination:
                                            description: 'Conceptually, this is the
                                              range of IP addresses that a packet
                                              originating from the instance can go
                                              to. Allowed values: * IP address range
                                              in CIDR notation. For example: `192.168.1.0/24`
                                              or `2001:0db8:0123:45::/56` Note that
                                              IPv6 addressing is currently supported
                                              only in certain regions. See IPv6 Addresses
                                              (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                              * The `cidrBlock` value for a Service,
                                              if you''re setting up a security list
                                              rule for traffic destined for a particular
                                              `Service` through a service gateway.
                                              For example: `oci-phx-objectstorage`.'
                                            type: string
                                          destinationType:
                                            description: 'Type of destination for
                                              the rule. The default is `CIDR_BLOCK`.
                                              Allowed values: * `CIDR_BLOCK`: If the
                                              rule''s `destination` is an IP address
                                              range in CIDR notation. * `SERVICE_CIDR_BLOCK`:
                                              If the rule''s `destination` is the
                                              `cidrBlock` value for a Service (the
                                              rule is for traffic destined for a particular
                                              `Service` through a service gateway).'
                                            type: string
                                          icmpOptions:
                                            description: 'IcmpOptions Optional and
                                              valid only for ICMP and ICMPv6. Use
                                              to specify a particular ICMP type and
                                              code as defined in: - ICMP Parameters
                                              (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                              - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                              If you specify ICMP or ICMPv6 as the
                                              protocol but omit this object, then
                                              all ICMP types and codes are allowed.
                                              If you do provide this object, the type
                                              is required and the code is optional.
                                              To enable MTU negotiation for ingress
                                              internet traffic via IPv4, make sure
                                              to allow type 3 ("Destination Unreachable")
                                              code 4 ("Fragmentation Needed and Don''t
                                              Fragment was Set"). If you need to specify
                                              multiple codes for a single type, create
                                              a separate security list rule for each.'
                                            properties:
                                              code:
                                                description: The ICMP code (optional).
                                                type: integer
                                              type:
                                                description: The ICMP type.
                                                type: integer
                                            type: object
                                          isStateless:
                                            description: A stateless rule allows traffic
                                              in one direction. Remember to add a
                                              corresponding stateless rule in the
                                              other direction if you need to support
                                              bidirectional traffic. For example,
                                              if egress traffic allows TCP destination
                                              port 80, there should be an ingress
                                              rule to allow TCP source port 80. Defaults
                                              to false, which means the rule is stateful
                                              and a corresponding rule is not necessary
                                              for bidirectional traffic.
                                            type: boolean
                                          protocol:
                                            description: The transport protocol. Specify
                                              either `all` or an IPv4 protocol number
                                              as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                              Options are supported only for ICMP
                                              ("1"), TCP ("6"), UDP ("17"), and ICMPv6
                                              ("58").
                                            type: string
                                          tcpOptions:
                                            description: TcpOptions Optional and valid
                                              only for TCP. Use to specify particular
                                              destination ports for TCP rules. If
                                              you specify TCP as the protocol but
                                              omit this object, then all destination
                                              ports are allowed.
                                            properties:
                                              destinationPortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                              sourcePortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                            type: object
                                          udpOptions:
                                            description: UdpOptions Optional and valid
                                              only for UDP. Use to specify particular
                                              destination ports for UDP rules. If
                                              you specify UDP as the protocol but
                                              omit this object, then all destination
                                              ports are allowed.
                                            properties:
                                              destinationPortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                              sourcePortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                            type: object
                                        type: object
                                    type: object
                                  type: array
                                id:
                                  description: NSG OCID.
                                  type: string
                                ingressRules:
                                  description: IngressRules on the NSG.
                                  items:
                                    description: IngressSecurityRuleForNSG is IngressSecurityRule
                                      for NSG
                                    properties:
                                      ingressRule:
                                        description: IngressSecurityRule A rule for
                                          allowing inbound IP packets.
                                        properties:
                                          description:
                                            description: An optional description of
                                              your choice for the rule.
                                            type: string
                                          icmpOptions:
                                            description: 'IcmpOptions Optional and
                                              valid only for ICMP and ICMPv6. Use
                                              to specify a particular ICMP type and
                                              code as defined in: - ICMP Parameters
                                              (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                              - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                              If you specify ICMP or ICMPv6 as the
                                              protocol but omit this object, then
                                              all ICMP types and codes are allowed.
                                              If you do provide this object, the type
                                              is required and the code is optional.
                                              To enable MTU negotiation for ingress
                                              internet traffic via IPv4, make sure
                                              to allow type 3 ("Destination Unreachable")
                                              code 4 ("Fragmentation Needed and Don''t
                                              Fragment was Set"). If you need to specify
                                              multiple codes for a single type, create
                                              a separate security list rule for each.'
                                            properties:
                                              code:
                                                description: The ICMP code (optional).
                                                type: integer
                                              type:
                                                description: The ICMP type.
                                                type: integer
                                            type: object
                                          isStateless:
                                            description: A stateless rule allows traffic
                                              in one direction. Remember to add a
                                              corresponding stateless rule in the
                                              other direction if you need to support
                                              bidirectional traffic. For example,
                                              if ingress traffic allows TCP destination
                                              port 80, there should be an egress rule
                                              to allow TCP source port 80. Defaults
                                              to false, which means the rule is stateful
                                              and a corresponding rule is not necessary
                                              for bidirectional traffic.
                                            type: boolean
                                          protocol:
                                            description: The transport protocol. Specify
                                              either `all` or an IPv4 protocol number
                                              as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                              Options are supported only for ICMP
                                              ("1"), TCP ("6"), UDP ("17"), and ICMPv6
                                              ("58").
                                            type: string
                                          source:
                                            description: 'Conceptually, this is the
                                              range of IP addresses that a packet
                                              coming into the instance can come from.
                                              Allowed values: * IP address range in
                                              CIDR notation. For example: `192.168.1.0/24`
                                              or `2001:0db8:0123:45::/56`. IPv6 addressing
                                              is supported for all commercial and
                                              government regions. See IPv6 Addresses
                                              (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                              * The `cidrBlock` value for a Service,
                                              if you''re setting up a security list
                                              rule for traffic coming from a particular
                                              `Service` through a service gateway.
                                              For example: `oci-phx-objectstorage`.'
                                            type: string
                                          sourceType:
                                            description: 'Type of source for the rule.
                                              The default is `CIDR_BLOCK`. * `CIDR_BLOCK`:
                                              If the rule''s `source` is an IP address
                                              range in CIDR notation. * `SERVICE_CIDR_BLOCK`:
                                              If the rule''s `source` is the `cidrBlock`
                                              value for a Service (the rule is for
                                              traffic coming from a particular `Service`
                                              through a service gateway).'
                                            type: string
                                          tcpOptions:
                                            description: TcpOptions Optional and valid
                                              only for TCP. Use to specify particular
                                              destination ports for TCP rules. If
                                              you specify TCP as the protocol but
                                              omit this object, then all destination
                                              ports are allowed.
                                            properties:
                                              destinationPortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                              sourcePortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                            type: object
                                          udpOptions:
                                            description: UdpOptions Optional and valid
                                              only for UDP. Use to specify particular
                                              destination ports for UDP rules. If
                                              you specify UDP as the protocol but
                                              omit this object, then all destination
                                              ports are allowed.
                                            properties:
                                              destinationPortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                              sourcePortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                            type: object
                                        type: object
                                    type: object
                                  type: array
                                name:
                                  description: NSG Name.
                                  type: string
                                role:
                                  description: Role defines the NSG role (eg. control-plane,
                                    control-plane-endpoint, service-lb, worker).
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          skip:
                            description: Skip specifies whether to skip creating network
                              security groups.
                            type: boolean
                        type: object
                      routeTable:
                        description: Configuration for Route table.
                        properties:
                          privateRouteTableId:
                            description: ID of Private Route Table.
                            type: string
                          publicRouteTableId:
                            description: ID of Public Route Table.
                            type: string
                          skip:
                            description: Skip specifies whether to skip creating Route
                              table.
                            type: boolean
                        type: object
                      serviceGateway:
                        description: Configuration for Service Gateway.
                        properties:
                          id:
                            description: ID of Service Gateway.
                            type: string
                          skip:
                            description: Skip specifies whether to skip creating Service
                              gateway.
                            type: boolean
                        type: object
                      subnets:
                        description: Subnets is the configuration for subnets required
                          in the VCN.
                        items:
                          description: Subnet defines the configuration for a network's
                            subnet https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/managingVCNs_topic-Overview_of_VCNs_and_Subnets.htm#Overview
                          properties:
                            cidr:
                              description: Subnet CIDR.
                              type: string
                            id:
                              description: Subnet OCID.
                              type: string
                            name:
                              description: Subnet Name.
                              type: string
                            role:
                              description: Role defines the subnet role (eg. control-plane,
                                control-plane-endpoint, service-lb, worker).
                              type: string
                            securityList:
                              description: The security list associated with Subnet.
                              properties:
                                egressRules:
                                  description: EgressRules on the SecurityList.
                                  items:
                                    description: EgressSecurityRule A rule for allowing
                                      outbound IP packets.
                                    properties:
                                      description:
                                        description: An optional description of your
                                          choice for the rule.
                                        type: string
                                      destination:
                                        description: 'Conceptually, this is the range
                                          of IP addresses that a packet originating
                                          from the instance can go to. Allowed values:
                                          * IP address range in CIDR notation. For
                                          example: `192.168.1.0/24` or `2001:0db8:0123:45::/56`
                                          Note that IPv6 addressing is currently supported
                                          only in certain regions. See IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                          * The `cidrBlock` value for a Service, if
                                          you''re setting up a security list rule
                                          for traffic destined for a particular `Service`
                                          through a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                        type: string
                                      destinationType:
                                        description: 'Type of destination for the
                                          rule. The default is `CIDR_BLOCK`. Allowed
                                          values: * `CIDR_BLOCK`: If the rule''s `destination`
                                          is an IP address range in CIDR notation.
                                          * `SERVICE_CIDR_BLOCK`: If the rule''s `destination`
                                          is the `cidrBlock` value for a Service (the
                                          rule is for traffic destined for a particular
                                          `Service` through a service gateway).'
                                        type: string
                                      icmpOptions:
                                        description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                        properties:
                                          code:
                                            description: The ICMP code (optional).
                                            type: integer
                                          type:
                                            description: The ICMP type.
                                            type: integer
                                        type: object
                                      isStateless:
                                        description: A stateless rule allows traffic
                                          in one direction. Remember to add a corresponding
                                          stateless rule in the other direction if
                                          you need to support bidirectional traffic.
                                          For example, if egress traffic allows TCP
                                          destination port 80, there should be an
                                          ingress rule to allow TCP source port 80.
                                          Defaults to false, which means the rule
                                          is stateful and a corresponding rule is
                                          not necessary for bidirectional traffic.
                                        type: boolean
                                      protocol:
                                        description: The transport protocol. Specify
                                          either `all` or an IPv4 protocol number
                                          as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                          Options are supported only for ICMP ("1"),
                                          TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                        type: string
                                      tcpOptions:
                                        description: TcpOptions Optional and valid
                                          only for TCP. Use to specify particular
                                          destination ports for TCP rules. If you
                                          specify TCP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                      udpOptions:
                                        description: UdpOptions Optional and valid
                                          only for UDP. Use to specify particular
                                          destination ports for UDP rules. If you
                                          specify UDP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                    type: object
                                  type: array
                                id:
                                  description: ID of the SecurityList.
                                  type: string
                                ingressRules:
                                  description: IngressRules on the SecurityList.
                                  items:
                                    description: IngressSecurityRule A rule for allowing
                                      inbound IP packets.
                                    properties:
                                      description:
                                        description: An optional description of your
                                          choice for the rule.
                                        type: string
                                      icmpOptions:
                                        description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                        properties:
                                          code:
                                            description: The ICMP code (optional).
                                            type: integer
                                          type:
                                            description: The ICMP type.
                                            type: integer
                                        type: object
                                      isStateless:
                                        description: A stateless rule allows traffic
                                          in one direction. Remember to add a corresponding
                                          stateless rule in the other direction if
                                          you need to support bidirectional traffic.
                                          For example, if ingress traffic allows TCP
                                          destination port 80, there should be an
                                          egress rule to allow TCP source port 80.
                                          Defaults to false, which means the rule
                                          is stateful and a corresponding rule is
                                          not necessary for bidirectional traffic.
                                        type: boolean
                                      protocol:
                                        description: The transport protocol. Specify
                                          either `all` or an IPv4 protocol number
                                          as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                          Options are supported only for ICMP ("1"),
                                          TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                        type: string
                                      source:
                                        description: 'Conceptually, this is the range
                                          of IP addresses that a packet coming into
                                          the instance can come from. Allowed values:
                                          * IP address range in CIDR notation. For
                                          example: `192.168.1.0/24` or `2001:0db8:0123:45::/56`.
                                          IPv6 addressing is supported for all commercial
                                          and government regions. See IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                          * The `cidrBlock` value for a Service, if
                                          you''re setting up a security list rule
                                          for traffic coming from a particular `Service`
                                          through a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                        type: string
                                      sourceType:
                                        description: 'Type of source for the rule.
                                          The default is `CIDR_BLOCK`. * `CIDR_BLOCK`:
                                          If the rule''s `source` is an IP address
                                          range in CIDR notation. * `SERVICE_CIDR_BLOCK`:
                                          If the rule''s `source` is the `cidrBlock`
                                          value for a Service (the rule is for traffic
                                          coming from a particular `Service` through
                                          a service gateway).'
                                        type: string
                                      tcpOptions:
                                        description: TcpOptions Optional and valid
                                          only for TCP. Use to specify particular
                                          destination ports for TCP rules. If you
                                          specify TCP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                      udpOptions:
                                        description: UdpOptions Optional and valid
                                          only for UDP. Use to specify particular
                                          destination ports for UDP rules. If you
                                          specify UDP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                    type: object
                                  type: array
                                name:
                                  description: SecurityList Name.
                                  type: string
                              type: object
                            type:
                              description: Type defines the subnet type (e.g. public,
                                private).
                              type: string
                          required:
                          - name
                          - role
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    type: object
                  vcnPeering:
                    description: VCNPeering configuration.
                    properties:
                      drg:
                        description: DRG configuration refers to the DRG which has
                          to be created if required. If management cluster and workload
                          cluster shares the same DRG, this fields is not required
                          to be specified.
                        properties:
                          id:
                            description: ID is the OCID for the created DRG.
                            type: string
                          manage:
                            description: Manage defines whether the DRG has to be
                              managed(including create). If set to false(the default)
                              the ID has to be specified by the user to a valid DRG
                              ID to which the VCN has to be attached.
                            type: boolean
                          name:
                            description: Name is the name of the created DRG.
                            type: string
                          vcnAttachmentId:
                            description: VcnAttachmentId is the ID of the VCN attachment
                              of the DRG. The workload cluster VCN can be attached
                              to either the management cluster VCN if they are sharing
                              the same DRG or to the workload cluster DRG.
                            type: string
                        type: object
                      peerRouteRules:
                        description: PeerRouteRules defines the routing rules which
                          will be added to the private route tables of the workload
                          cluster VCN. The routes defined here will be directed to
                          DRG.
                        items:
                          description: PeerRouteRule defines a Route Rule to be routed
                            via a DRG.
                          properties:
                            vcnCIDRRange:
                              description: VCNCIDRRange is the CIDR Range of peer
                                VCN to which the workload cluster VCN will be peered.
                                The CIDR range is required to add the route rule in
                                the workload cluster VCN, the route rule will forward
                                any traffic to the CIDR to the DRG.
                              type: string
                          type: object
                        type: array
                      remotePeeringConnections:
                        description: RemotePeeringConnections defines the RPC connections
                          which be established with the workload cluster DRG.
                        items:
                          description: RemotePeeringConnection is used to peer VCNs
                            residing in different regions(typically). Remote VCN Peering
                            is explained here - https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/remoteVCNpeering.htm
                          properties:
                            managePeerRPC:
                              description: ManagePeerRPC will define if the Peer VCN
                                needs to be managed. If set to true a Remote Peering
                                Connection will be created in the Peer DRG and the
                                connection will be created between local and peer
                                RPC.
                              type: boolean
                            peerDRGId:
                              description: PeerDRGId defines the DRG ID of the peer.
                              type: string
                            peerRPCConnectionId:
                              description: PeerRPCConnectionId defines the RPC ID
                                of peer. If ManagePeerRPC is set to true this will
                                be created by Cluster API Provider for OCI, otherwise
                                this has be defined by the user.
                              type: string
                            peerRegionName:
                              description: PeerRegionName defined the region name
                                of Peer VCN.
                              type: string
                            rpcConnectionId:
                              description: RPCConnectionId is the connection ID of
                                the connection between peer and local RPC.
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              ociResourceIdentifier:
                description: The unique ID which will be used to tag all the resources
                  created by this Cluster. The tag will be used to identify resources
                  belonging to this cluster. this will be auto-generated and should
                  not be set by the user.
                type: string
              region:
                description: Region the cluster operates in. It must be one of available
                  regions in Region Identifier format. See https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
                type: string
            type: object
          status:
            description: OCIClusterStatus defines the observed state of OCICluster
            properties:
              conditions:
                description: NetworkSpec encapsulates all things related to OCI network.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureDomains:
                additionalProperties:
                  description: FailureDomainSpec is the Schema for Cluster API failure
                    domains. It allows controllers to understand how many failure
                    domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: FailureDomains is a slice of FailureDomains.
                type: object
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-oci-system/capoci-serving-cert
    controller-gen.kubebuilder.io/version: v0.10.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ociclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: capoci-webhook-service
          namespace: cluster-api-provider-oci-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: OCIClusterTemplate
    listKind: OCIClusterTemplateList
    plural: ociclustertemplates
    singular: ociclustertemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: OCIClusterTemplate is the Schema for the ociclustertemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIClusterTemplateSpec defines the desired state of OCIClusterTemplate.
            properties:
              template:
                description: OCIClusterTemplateResource describes the data needed
                  to create an OCICluster from a template.
                properties:
                  spec:
                    description: OCIClusterSpec defines the desired state of OciCluster
                    properties:
                      compartmentId:
                        description: Compartment to create the cluster network.
                        type: string
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      definedTags:
                        additionalProperties:
                          additionalProperties:
                            type: string
                          type: object
                        description: 'Defined tags for this resource. Each key is
                          predefined and scoped to a namespace. For more information,
                          see Resource Tags (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                          Example: `{"Operations": {"CostCenter": "42"}}`'
                        type: object
                      freeformTags:
                        additionalProperties:
                          type: string
                        description: Free-form tags for this resource.
                        type: object
                      identityRef:
                        description: IdentityRef is a reference to an identity(principal)
                          to be used when reconciling this cluster
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      networkSpec:
                        description: NetworkSpec encapsulates all things related to
                          OCI network.
                        properties:
                          apiServerLoadBalancer:
                            description: API Server LB configuration.
                            properties:
                              loadBalancerId:
                                description: ID of Load Balancer.
                                type: string
                              name:
                                description: LoadBalancer Name.
                                type: string
                            type: object
                          skipNetworkManagement:
                            description: SkipNetworkManagement defines if the networking
                              spec(VCN related) specified by the user needs to be
                              reconciled(actioned-upon) or used as it is. APIServerLB
                              will still be reconciled.
                            type: boolean
                          vcn:
                            description: VCN configuration.
                            properties:
                              cidr:
                                description: VCN CIDR.
                                type: string
                              id:
                                description: VCN OCID.
                                type: string
                              internetGatewayId:
                                description: ID of Internet Gateway.
                                type: string
                              name:
                                description: VCN Name.
                                type: string
                              natGatewayId:
                                description: ID of Nat Gateway.
                                type: string
                              networkSecurityGroups:
                                description: NetworkSecurityGroups is the configuration
                                  for the Network Security Groups required in the
                                  VCN.
                                items:
                                  description: NSG defines configuration for a Network
                                    Security Group. https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/networksecuritygroups.htm
                                  properties:
                                    egressRules:
                                      description: EgressRules on the NSG.
                                      items:
                                        description: EgressSecurityRuleForNSG is EgressSecurityRule
                                          for NSG.
                                        properties:
                                          egressRule:
                                            description: EgressSecurityRule A rule
                                              for allowing outbound IP packets.
                                            properties:
                                              description:
                                                description: An optional description
                                                  of your choice for the rule.
                                                type: string
                                              destination:
                                                description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet originating from the instance
                                                  can go to. Allowed values: * IP
                                                  address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56` Note that
                                                  IPv6 addressing is currently supported
                                                  only in certain regions. See IPv6
                                                  Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                  * The `cidrBlock` value for a Service,
                                                  if you''re setting up a security
                                                  list rule for traffic destined for
                                                  a particular `Service` through a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                type: string
                                              destinationType:
                                                description: 'Type of destination
                                                  for the rule. The default is `CIDR_BLOCK`.
                                                  Allowed values: * `CIDR_BLOCK`:
                                                  If the rule''s `destination` is
                                                  an IP address range in CIDR notation.
                                                  * `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `destination` is the `cidrBlock`
                                                  value for a Service (the rule is
                                                  for traffic destined for a particular
                                                  `Service` through a service gateway).'
                                                type: string
                                              icmpOptions:
                                                description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                properties:
                                                  code:
                                                    description: The ICMP code (optional).
                                                    type: integer
                                                  type:
                                                    description: The ICMP type.
                                                    type: integer
                                                type: object
                                              isStateless:
                                                description: A stateless rule allows
                                                  traffic in one direction. Remember
                                                  to add a corresponding stateless
                                                  rule in the other direction if you
                                                  need to support bidirectional traffic.
                                                  For example, if egress traffic allows
                                                  TCP destination port 80, there should
                                                  be an ingress rule to allow TCP
                                                  source port 80. Defaults to false,
                                                  which means the rule is stateful
                                                  and a corresponding rule is not
                                                  necessary for bidirectional traffic.
                                                type: boolean
                                              protocol:
                                                description: The transport protocol.
                                                  Specify either `all` or an IPv4
                                                  protocol number as defined in Protocol
                                                  Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                  Options are supported only for ICMP
                                                  ("1"), TCP ("6"), UDP ("17"), and
                                                  ICMPv6 ("58").
                                                type: string
                                              tcpOptions:
                                                description: TcpOptions Optional and
                                                  valid only for TCP. Use to specify
                                                  particular destination ports for
                                                  TCP rules. If you specify TCP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                              udpOptions:
                                                description: UdpOptions Optional and
                                                  valid only for UDP. Use to specify
                                                  particular destination ports for
                                                  UDP rules. If you specify UDP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                            type: object
                                          id:
                                            description: 'EgressSecurityRule ID for
                                              NSG. Deprecated: this field is not populated
                                              and used during reconciliation'
                                            type: string
                                        type: object
                                      type: array
                                    id:
                                      description: NSG OCID.
                                      type: string
                                    ingressRules:
                                      description: IngressRules on the NSG.
                                      items:
                                        description: IngressSecurityRuleForNSG is
                                          IngressSecurityRule for NSG
                                        properties:
                                          id:
                                            description: 'IngressSecurityRule ID for
                                              NSG. Deprecated: this field is not populated
                                              and used during reconciliation'
                                            type: string
                                          ingressRule:
                                            description: IngressSecurityRule A rule
                                              for allowing inbound IP packets.
                                            properties:
                                              description:
                                                description: An optional description
                                                  of your choice for the rule.
                                                type: string
                                              icmpOptions:
                                                description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                properties:
                                                  code:
                                                    description: The ICMP code (optional).
                                                    type: integer
                                                  type:
                                                    description: The ICMP type.
                                                    type: integer
                                                type: object
                                              isStateless:
                                                description: A stateless rule allows
                                                  traffic in one direction. Remember
                                                  to add a corresponding stateless
                                                  rule in the other direction if you
                                                  need to support bidirectional traffic.
                                                  For example, if ingress traffic
                                                  allows TCP destination port 80,
                                                  there should be an egress rule to
                                                  allow TCP source port 80. Defaults
                                                  to false, which means the rule is
                                                  stateful and a corresponding rule
                                                  is not necessary for bidirectional
                                                  traffic.
                                                type: boolean
                                              protocol:
                                                description: The transport protocol.
                                                  Specify either `all` or an IPv4
                                                  protocol number as defined in Protocol
                                                  Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                  Options are supported only for ICMP
                                                  ("1"), TCP ("6"), UDP ("17"), and
                                                  ICMPv6 ("58").
                                                type: string
                                              source:
                                                description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet coming into the instance
                                                  can come from. Allowed values: *
                                                  IP address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56`. IPv6 addressing
                                                  is supported for all commercial
                                                  and government regions. See IPv6
                                                  Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                  * The `cidrBlock` value for a Service,
                                                  if you''re setting up a security
                                                  list rule for traffic coming from
                                                  a particular `Service` through a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                type: string
                                              sourceType:
                                                description: 'Type of source for the
                                                  rule. The default is `CIDR_BLOCK`.
                                                  * `CIDR_BLOCK`: If the rule''s `source`
                                                  is an IP address range in CIDR notation.
                                                  * `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `source` is the `cidrBlock` value
                                                  for a Service (the rule is for traffic
                                                  coming from a particular `Service`
                                                  through a service gateway).'
                                                type: string
                                              tcpOptions:
                                                description: TcpOptions Optional and
                                                  valid only for TCP. Use to specify
                                                  particular destination ports for
                                                  TCP rules. If you specify TCP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                              udpOptions:
                                                description: UdpOptions Optional and
                                                  valid only for UDP. Use to specify
                                                  particular destination ports for
                                                  UDP rules. If you specify UDP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                            type: object
                                        type: object
                                      type: array
                                    name:
                                      description: NSG Name.
                                      type: string
                                    role:
                                      description: Role defines the NSG role (eg.
                                        control-plane, control-plane-endpoint, service-lb,
                                        worker).
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              privateRouteTableId:
                                description: ID of Private Route Table.
                                type: string
                              publicRouteTableId:
                                description: ID of Public Route Table.
                                type: string
                              serviceGatewayId:
                                description: ID of Service Gateway.
                                type: string
                              subnets:
                                description: Subnets is the configuration for subnets
                                  required in the VCN.
                                items:
                                  description: Subnet defines the configuration for
                                    a network's subnet https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/managingVCNs_topic-Overview_of_VCNs_and_Subnets.htm#Overview
                                  properties:
                                    cidr:
                                      description: Subnet CIDR.
                                      type: string
                                    id:
                                      description: Subnet OCID.
                                      type: string
                                    name:
                                      description: Subnet Name.
                                      type: string
                                    role:
                                      description: Role defines the subnet role (eg.
                                        control-plane, control-plane-endpoint, service-lb,
                                        worker).
                                      type: string
                                    securityList:
                                      description: The security list associated with
                                        Subnet.
                                      properties:
                                        egressRules:
                                          description: EgressRules on the SecurityList.
                                          items:
                                            description: EgressSecurityRule A rule
                                              for allowing outbound IP packets.
                                            properties:
                                              description:
                                                description: An optional description
                                                  of your choice for the rule.
                                                type: string
                                              destination:
                                                description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet originating from the instance
                                                  can go to. Allowed values: * IP
                                                  address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56` Note that
                                                  IPv6 addressing is currently supported
                                                  only in certain regions. See IPv6
                                                  Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                  * The `cidrBlock` value for a Service,
                                                  if you''re setting up a security
                                                  list rule for traffic destined for
                                                  a particular `Service` through a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                type: string
                                              destinationType:
                                                description: 'Type of destination
                                                  for the rule. The default is `CIDR_BLOCK`.
                                                  Allowed values: * `CIDR_BLOCK`:
                                                  If the rule''s `destination` is
                                                  an IP address range in CIDR notation.
                                                  * `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `destination` is the `cidrBlock`
                                                  value for a Service (the rule is
                                                  for traffic destined for a particular
                                                  `Service` through a service gateway).'
                                                type: string
                                              icmpOptions:
                                                description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                properties:
                                                  code:
                                                    description: The ICMP code (optional).
                                                    type: integer
                                                  type:
                                                    description: The ICMP type.
                                                    type: integer
                                                type: object
                                              isStateless:
                                                description: A stateless rule allows
                                                  traffic in one direction. Remember
                                                  to add a corresponding stateless
                                                  rule in the other direction if you
                                                  need to support bidirectional traffic.
                                                  For example, if egress traffic allows
                                                  TCP destination port 80, there should
                                                  be an ingress rule to allow TCP
                                                  source port 80. Defaults to false,
                                                  which means the rule is stateful
                                                  and a corresponding rule is not
                                                  necessary for bidirectional traffic.
                                                type: boolean
                                              protocol:
                                                description: The transport protocol.
                                                  Specify either `all` or an IPv4
                                                  protocol number as defined in Protocol
                                                  Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                  Options are supported only for ICMP
                                                  ("1"), TCP ("6"), UDP ("17"), and
                                                  ICMPv6 ("58").
                                                type: string
                                              tcpOptions:
                                                description: TcpOptions Optional and
                                                  valid only for TCP. Use to specify
                                                  particular destination ports for
                                                  TCP rules. If you specify TCP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                              udpOptions:
                                                description: UdpOptions Optional and
                                                  valid only for UDP. Use to specify
                                                  particular destination ports for
                                                  UDP rules. If you specify UDP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                            type: object
                                          type: array
                                        id:
                                          description: ID of the SecurityList.
                                          type: string
                                        ingressRules:
                                          description: IngressRules on the SecurityList.
                                          items:
                                            description: IngressSecurityRule A rule
                                              for allowing inbound IP packets.
                                            properties:
                                              description:
                                                description: An optional description
                                                  of your choice for the rule.
                                                type: string
                                              icmpOptions:
                                                description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                properties:
                                                  code:
                                                    description: The ICMP code (optional).
                                                    type: integer
                                                  type:
                                                    description: The ICMP type.
                                                    type: integer
                                                type: object
                                              isStateless:
                                                description: A stateless rule allows
                                                  traffic in one direction. Remember
                                                  to add a corresponding stateless
                                                  rule in the other direction if you
                                                  need to support bidirectional traffic.
                                                  For example, if ingress traffic
                                                  allows TCP destination port 80,
                                                  there should be an egress rule to
                                                  allow TCP source port 80. Defaults
                                                  to false, which means the rule is
                                                  stateful and a corresponding rule
                                                  is not necessary for bidirectional
                                                  traffic.
                                                type: boolean
                                              protocol:
                                                description: The transport protocol.
                                                  Specify either `all` or an IPv4
                                                  protocol number as defined in Protocol
                                                  Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                  Options are supported only for ICMP
                                                  ("1"), TCP ("6"), UDP ("17"), and
                                                  ICMPv6 ("58").
                                                type: string
                                              source:
                                                description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet coming into the instance
                                                  can come from. Allowed values: *
                                                  IP address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56`. IPv6 addressing
                                                  is supported for all commercial
                                                  and government regions. See IPv6
                                                  Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                  * The `cidrBlock` value for a Service,
                                                  if you''re setting up a security
                                                  list rule for traffic coming from
                                                  a particular `Service` through a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                type: string
                                              sourceType:
                                                description: 'Type of source for the
                                                  rule. The default is `CIDR_BLOCK`.
                                                  * `CIDR_BLOCK`: If the rule''s `source`
                                                  is an IP address range in CIDR notation.
                                                  * `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `source` is the `cidrBlock` value
                                                  for a Service (the rule is for traffic
                                                  coming from a particular `Service`
                                                  through a service gateway).'
                                                type: string
                                              tcpOptions:
                                                description: TcpOptions Optional and
                                                  valid only for TCP. Use to specify
                                                  particular destination ports for
                                                  TCP rules. If you specify TCP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                              udpOptions:
                                                description: UdpOptions Optional and
                                                  valid only for UDP. Use to specify
                                                  particular destination ports for
                                                  UDP rules. If you specify UDP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                            type: object
                                          type: array
                                        name:
                                          description: SecurityList Name.
                                          type: string
                                      type: object
                                    type:
                                      description: Type defines the subnet type (e.g.
                                        public, private).
                                      type: string
                                  required:
                                  - name
                                  - role
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          vcnPeering:
                            description: VCNPeering configuration.
                            properties:
                              drg:
                                description: DRG configuration refers to the DRG which
                                  has to be created if required. If management cluster
                                  and workload cluster shares the same DRG, this fields
                                  is not required to be specified.
                                properties:
                                  id:
                                    description: ID is the OCID for the created DRG.
                                    type: string
                                  manage:
                                    description: Manage defines whether the DRG has
                                      to be managed(including create). If set to false(the
                                      default) the ID has to be specified by the user
                                      to a valid DRG ID to which the VCN has to be
                                      attached.
                                    type: boolean
                                  name:
                                    description: Name is the name of the created DRG.
                                    type: string
                                  vcnAttachmentId:
                                    description: VcnAttachmentId is the ID of the
                                      VCN attachment of the DRG. The workload cluster
                                      VCN can be attached to either the management
                                      cluster VCN if they are sharing the same DRG
                                      or to the workload cluster DRG.
                                    type: string
                                type: object
                              peerRouteRules:
                                description: PeerRouteRules defines the routing rules
                                  which will be added to the private route tables
                                  of the workload cluster VCN. The routes defined
                                  here will be directed to DRG.
                                items:
                                  description: PeerRouteRule defines a Route Rule
                                    to be routed via a DRG.
                                  properties:
                                    vcnCIDRRange:
                                      description: VCNCIDRRange is the CIDR Range
                                        of peer VCN to which the workload cluster
                                        VCN will be peered. The CIDR range is required
                                        to add the route rule in the workload cluster
                                        VCN, the route rule will forward any traffic
                                        to the CIDR to the DRG.
                                      type: string
                                  type: object
                                type: array
                              remotePeeringConnections:
                                description: RemotePeeringConnections defines the
                                  RPC connections which be established with the workload
                                  cluster DRG.
                                items:
                                  description: RemotePeeringConnection is used to
                                    peer VCNs residing in different regions(typically).
                                    Remote VCN Peering is explained here - https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/remoteVCNpeering.htm
                                  properties:
                                    managePeerRPC:
                                      description: ManagePeerRPC will define if the
                                        Peer VCN needs to be managed. If set to true
                                        a Remote Peering Connection will be created
                                        in the Peer DRG and the connection will be
                                        created between local and peer RPC.
                                      type: boolean
                                    peerDRGId:
                                      description: PeerDRGId defines the DRG ID of
                                        the peer.
                                      type: string
                                    peerRPCConnectionId:
                                      description: PeerRPCConnectionId defines the
                                        RPC ID of peer. If ManagePeerRPC is set to
                                        true this will be created by Cluster API Provider
                                        for OCI, otherwise this has be defined by
                                        the user.
                                      type: string
                                    peerRegionName:
                                      description: PeerRegionName defined the region
                                        name of Peer VCN.
                                      type: string
                                    rpcConnectionId:
                                      description: RPCConnectionId is the connection
                                        ID of the connection between peer and local
                                        RPC.
                                      type: string
                                  type: object
                                type: array
                            type: object
                        type: object
                      ociResourceIdentifier:
                        description: The unique ID which will be used to tag all the
                          resources created by this Cluster. The tag will be used
                          to identify resources belonging to this cluster. this will
                          be auto-generated and should not be set by the user.
                        type: string
                      region:
                        description: Region the cluster operates in. It must be one
                          of available regions in Region Identifier format. See https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: OCIClusterTemplate is the Schema for the ociclustertemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIClusterTemplateSpec defines the desired state of OCIClusterTemplate.
            properties:
              template:
                description: OCIClusterTemplateResource describes the data needed
                  to create an OCICluster from a template.
                properties:
                  spec:
                    description: OCIClusterSpec defines the desired state of OciCluster
                    properties:
                      availabilityDomains:
                        additionalProperties:
                          description: OCIAvailabilityDomain contains information
                            about an Availability Domain (AD).
                          properties:
                            faultDomains:
                              description: 'FaultDomains a list of fault domain (FD)
                                names. Example: ["FAULT-DOMAIN-1"]'
                              items:
                                type: string
                              type: array
                            name:
                              description: 'Name is the AD''s full name. Example:
                                Uocm:PHX-AD-1'
                              type: string
                          type: object
                        description: AvailabilityDomains encapsulates the clusters
                          Availability Domain (AD) information in a map where the
                          map key is the AD name and the struct is details about the
                          AD.
                        type: object
                      clientOverrides:
                        description: ClientOverrides allows the default client SDK
                          URLs to be changed.
                        nullable: true
                        properties:
                          certOverride:
                            description: CertOverride is a secret that contains information
                              about a cert override used by all the OCI SDK clients.
                              The secret must contain data with a `cert`property.
                            nullable: true
                            properties:
                              name:
                                description: name is unique within a namespace to
                                  reference a secret resource.
                                type: string
                              namespace:
                                description: namespace defines the space within which
                                  the secret name must be unique.
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          computeClientUrl:
                            description: ComputeClientUrl allows the default compute
                              SDK client URL to be changed.
                            nullable: true
                            type: string
                          computeManagementClientUrl:
                            description: ComputeManagementClientUrl allows the default
                              compute management SDK client URL to be changed.
                            nullable: true
                            type: string
                          containerEngineClientUrl:
                            description: ContainerEngineClientUrl allows the default
                              container engine SDK client URL to be changed.
                            nullable: true
                            type: string
                          identityClientUrl:
                            description: IdentityClientUrl allows the default identity
                              SDK client URL to be changed.
                            nullable: true
                            type: string
                          loadBalancerClientUrl:
                            description: LoadBalancerClientUrl allows the default
                              load balancer SDK client URL to be changed.
                            nullable: true
                            type: string
                          networkLoadBalancerClientUrl:
                            description: NetworkLoadBalancerClientUrl allows the default
                              NLB SDK client URL to be changed.
                            nullable: true
                            type: string
                          vCNClientUrl:
                            description: VCNClientUrl allows the default vcn SDK client
                              URL to be changed.
                            nullable: true
                            type: string
                        type: object
                      compartmentId:
                        description: Compartment to create the cluster network.
                        type: string
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      definedTags:
                        additionalProperties:
                          additionalProperties:
                            type: string
                          type: object
                        description: 'Defined tags for this resource. Each key is
                          predefined and scoped to a namespace. For more information,
                          see Resource Tags (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                          Example: `{"Operations": {"CostCenter": "42"}}`'
                        type: object
                      freeformTags:
                        additionalProperties:
                          type: string
                        description: Free-form tags for this resource.
                        type: object
                      identityRef:
                        description: IdentityRef is a reference to an identity(principal)
                          to be used when reconciling this cluster
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      networkSpec:
                        description: NetworkSpec encapsulates all things related to
                          OCI network.
                        properties:
                          apiServerLoadBalancer:
                            description: API Server LB configuration.
                            properties:
                              loadBalancerId:
                                description: ID of Load Balancer.
                                type: string
                              loadBalancerType:
                                description: 'Type of Load Balancer: NLB (default)
                                  or LBaaS.'
                                type: string
                              name:
                                description: LoadBalancer Name.
                                type: string
                            type: object
                          skipNetworkManagement:
                            description: SkipNetworkManagement defines if the networking
                              spec(VCN related) specified by the user needs to be
                              reconciled(actioned-upon) or used as it is. APIServerLB
                              will still be reconciled.
                            type: boolean
                          vcn:
                            description: VCN configuration.
                            properties:
                              cidr:
                                description: VCN CIDR.
                                type: string
                              id:
                                description: VCN OCID.
                                type: string
                              internetGateway:
                                description: Configuration for Internet Gateway.
                                properties:
                                  id:
                                    description: ID of Internet Gateway.
                                    type: string
                                  skip:
                                    description: Skip specifies whether to skip creating
                                      internet gateway even if any one Subnet is public.
                                    type: boolean
                                type: object
                              name:
                                description: VCN Name.
                                type: string
                              natGateway:
                                description: Configuration for NAT Gateway.
                                properties:
                                  id:
                                    description: ID of Nat Gateway.
                                    type: string
                                  skip:
                                    description: Skip specifies whether to skip creating
                                      NAT gateway even if any one Subnet is private.
                                    type: boolean
                                type: object
                              networkSecurityGroup:
                                description: Configuration for NSG management.
                                properties:
                                  list:
                                    description: NetworkSecurityGroup is the configuration
                                      for the Network Security Groups required in
                                      the VCN.
                                    items:
                                      description: NSG defines configuration for a
                                        Network Security Group. https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/networksecuritygroups.htm
                                      properties:
                                        egressRules:
                                          description: EgressRules on the NSG.
                                          items:
                                            description: EgressSecurityRuleForNSG
                                              is EgressSecurityRule for NSG.
                                            properties:
                                              egressRule:
                                                description: EgressSecurityRule A
                                                  rule for allowing outbound IP packets.
                                                properties:
                                                  description:
                                                    description: An optional description
                                                      of your choice for the rule.
                                                    type: string
                                                  destination:
                                                    description: 'Conceptually, this
                                                      is the range of IP addresses
                                                      that a packet originating from
                                                      the instance can go to. Allowed
                                                      values: * IP address range in
                                                      CIDR notation. For example:
                                                      `192.168.1.0/24` or `2001:0db8:0123:45::/56`
                                                      Note that IPv6 addressing is
                                                      currently supported only in
                                                      certain regions. See IPv6 Addresses
                                                      (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                      * The `cidrBlock` value for
                                                      a Service, if you''re setting
                                                      up a security list rule for
                                                      traffic destined for a particular
                                                      `Service` through a service
                                                      gateway. For example: `oci-phx-objectstorage`.'
                                                    type: string
                                                  destinationType:
                                                    description: 'Type of destination
                                                      for the rule. The default is
                                                      `CIDR_BLOCK`. Allowed values:
                                                      * `CIDR_BLOCK`: If the rule''s
                                                      `destination` is an IP address
                                                      range in CIDR notation. * `SERVICE_CIDR_BLOCK`:
                                                      If the rule''s `destination`
                                                      is the `cidrBlock` value for
                                                      a Service (the rule is for traffic
                                                      destined for a particular `Service`
                                                      through a service gateway).'
                                                    type: string
                                                  icmpOptions:
                                                    description: 'IcmpOptions Optional
                                                      and valid only for ICMP and
                                                      ICMPv6. Use to specify a particular
                                                      ICMP type and code as defined
                                                      in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                      - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                      If you specify ICMP or ICMPv6
                                                      as the protocol but omit this
                                                      object, then all ICMP types
                                                      and codes are allowed. If you
                                                      do provide this object, the
                                                      type is required and the code
                                                      is optional. To enable MTU negotiation
                                                      for ingress internet traffic
                                                      via IPv4, make sure to allow
                                                      type 3 ("Destination Unreachable")
                                                      code 4 ("Fragmentation Needed
                                                      and Don''t Fragment was Set").
                                                      If you need to specify multiple
                                                      codes for a single type, create
                                                      a separate security list rule
                                                      for each.'
                                                    properties:
                                                      code:
                                                        description: The ICMP code
                                                          (optional).
                                                        type: integer
                                                      type:
                                                        description: The ICMP type.
                                                        type: integer
                                                    type: object
                                                  isStateless:
                                                    description: A stateless rule
                                                      allows traffic in one direction.
                                                      Remember to add a corresponding
                                                      stateless rule in the other
                                                      direction if you need to support
                                                      bidirectional traffic. For example,
                                                      if egress traffic allows TCP
                                                      destination port 80, there should
                                                      be an ingress rule to allow
                                                      TCP source port 80. Defaults
                                                      to false, which means the rule
                                                      is stateful and a corresponding
                                                      rule is not necessary for bidirectional
                                                      traffic.
                                                    type: boolean
                                                  protocol:
                                                    description: The transport protocol.
                                                      Specify either `all` or an IPv4
                                                      protocol number as defined in
                                                      Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                      Options are supported only for
                                                      ICMP ("1"), TCP ("6"), UDP ("17"),
                                                      and ICMPv6 ("58").
                                                    type: string
                                                  tcpOptions:
                                                    description: TcpOptions Optional
                                                      and valid only for TCP. Use
                                                      to specify particular destination
                                                      ports for TCP rules. If you
                                                      specify TCP as the protocol
                                                      but omit this object, then all
                                                      destination ports are allowed.
                                                    properties:
                                                      destinationPortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                      sourcePortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                    type: object
                                                  udpOptions:
                                                    description: UdpOptions Optional
                                                      and valid only for UDP. Use
                                                      to specify particular destination
                                                      ports for UDP rules. If you
                                                      specify UDP as the protocol
                                                      but omit this object, then all
                                                      destination ports are allowed.
                                                    properties:
                                                      destinationPortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                      sourcePortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                    type: object
                                                type: object
                                            type: object
                                          type: array
                                        id:
                                          description: NSG OCID.
                                          type: string
                                        ingressRules:
                                          description: IngressRules on the NSG.
                                          items:
                                            description: IngressSecurityRuleForNSG
                                              is IngressSecurityRule for NSG
                                            properties:
                                              ingressRule:
                                                description: IngressSecurityRule A
                                                  rule for allowing inbound IP packets.
                                                properties:
                                                  description:
                                                    description: An optional description
                                                      of your choice for the rule.
                                                    type: string
                                                  icmpOptions:
                                                    description: 'IcmpOptions Optional
                                                      and valid only for ICMP and
                                                      ICMPv6. Use to specify a particular
                                                      ICMP type and code as defined
                                                      in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                      - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                      If you specify ICMP or ICMPv6
                                                      as the protocol but omit this
                                                      object, then all ICMP types
                                                      and codes are allowed. If you
                                                      do provide this object, the
                                                      type is required and the code
                                                      is optional. To enable MTU negotiation
                                                      for ingress internet traffic
                                                      via IPv4, make sure to allow
                                                      type 3 ("Destination Unreachable")
                                                      code 4 ("Fragmentation Needed
                                                      and Don''t Fragment was Set").
                                                      If you need to specify multiple
                                                      codes for a single type, create
                                                      a separate security list rule
                                                      for each.'
                                                    properties:
                                                      code:
                                                        description: The ICMP code
                                                          (optional).
                                                        type: integer
                                                      type:
                                                        description: The ICMP type.
                                                        type: integer
                                                    type: object
                                                  isStateless:
                                                    description: A stateless rule
                                                      allows traffic in one direction.
                                                      Remember to add a corresponding
                                                      stateless rule in the other
                                                      direction if you need to support
                                                      bidirectional traffic. For example,
                                                      if ingress traffic allows TCP
                                                      destination port 80, there should
                                                      be an egress rule to allow TCP
                                                      source port 80. Defaults to
                                                      false, which means the rule
                                                      is stateful and a corresponding
                                                      rule is not necessary for bidirectional
                                                      traffic.
                                                    type: boolean
                                                  protocol:
                                                    description: The transport protocol.
                                                      Specify either `all` or an IPv4
                                                      protocol number as defined in
                                                      Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                      Options are supported only for
                                                      ICMP ("1"), TCP ("6"), UDP ("17"),
                                                      and ICMPv6 ("58").
                                                    type: string
                                                  source:
                                                    description: 'Conceptually, this
                                                      is the range of IP addresses
                                                      that a packet coming into the
                                                      instance can come from. Allowed
                                                      values: * IP address range in
                                                      CIDR notation. For example:
                                                      `192.168.1.0/24` or `2001:0db8:0123:45::/56`.
                                                      IPv6 addressing is supported
                                                      for all commercial and government
                                                      regions. See IPv6 Addresses
                                                      (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                      * The `cidrBlock` value for
                                                      a Service, if you''re setting
                                                      up a security list rule for
                                                      traffic coming from a particular
                                                      `Service` through a service
                                                      gateway. For example: `oci-phx-objectstorage`.'
                                                    type: string
                                                  sourceType:
                                                    description: 'Type of source for
                                                      the rule. The default is `CIDR_BLOCK`.
                                                      * `CIDR_BLOCK`: If the rule''s
                                                      `source` is an IP address range
                                                      in CIDR notation. * `SERVICE_CIDR_BLOCK`:
                                                      If the rule''s `source` is the
                                                      `cidrBlock` value for a Service
                                                      (the rule is for traffic coming
                                                      from a particular `Service`
                                                      through a service gateway).'
                                                    type: string
                                                  tcpOptions:
                                                    description: TcpOptions Optional
                                                      and valid only for TCP. Use
                                                      to specify particular destination
                                                      ports for TCP rules. If you
                                                      specify TCP as the protocol
                                                      but omit this object, then all
                                                      destination ports are allowed.
                                                    properties:
                                                      destinationPortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                      sourcePortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                    type: object
                                                  udpOptions:
                                                    description: UdpOptions Optional
                                                      and valid only for UDP. Use
                                                      to specify particular destination
                                                      ports for UDP rules. If you
                                                      specify UDP as the protocol
                                                      but omit this object, then all
                                                      destination ports are allowed.
                                                    properties:
                                                      destinationPortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                      sourcePortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                    type: object
                                                type: object
                                            type: object
                                          type: array
                                        name:
                                          description: NSG Name.
                                          type: string
                                        role:
                                          description: Role defines the NSG role (eg.
                                            control-plane, control-plane-endpoint,
                                            service-lb, worker).
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  skip:
                                    description: Skip specifies whether to skip creating
                                      network security groups.
                                    type: boolean
                                type: object
                              routeTable:
                                description: Configuration for Route table.
                                properties:
                                  privateRouteTableId:
                                    description: ID of Private Route Table.
                                    type: string
                                  publicRouteTableId:
                                    description: ID of Public Route Table.
                                    type: string
                                  skip:
                                    description: Skip specifies whether to skip creating
                                      Route table.
                                    type: boolean
                                type: object
                              serviceGateway:
                                description: Configuration for Service Gateway.
                                properties:
                                  id:
                                    description: ID of Service Gateway.
                                    type: string
                                  skip:
                                    description: Skip specifies whether to skip creating
                                      Service gateway.
                                    type: boolean
                                type: object
                              subnets:
                                description: Subnets is the configuration for subnets
                                  required in the VCN.
                                items:
                                  description: Subnet defines the configuration for
                                    a network's subnet https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/managingVCNs_topic-Overview_of_VCNs_and_Subnets.htm#Overview
                                  properties:
                                    cidr:
                                      description: Subnet CIDR.
                                      type: string
                                    id:
                                      description: Subnet OCID.
                                      type: string
                                    name:
                                      description: Subnet Name.
                                      type: string
                                    role:
                                      description: Role defines the subnet role (eg.
                                        control-plane, control-plane-endpoint, service-lb,
                                        worker).
                                      type: string
                                    securityList:
                                      description: The security list associated with
                                        Subnet.
                                      properties:
                                        egressRules:
                                          description: EgressRules on the SecurityList.
                                          items:
                                            description: EgressSecurityRule A rule
                                              for allowing outbound IP packets.
                                            properties:
                                              description:
                                                description: An optional description
                                                  of your choice for the rule.
                                                type: string
                                              destination:
                                                description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet originating from the instance
                                                  can go to. Allowed values: * IP
                                                  address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56` Note that
                                                  IPv6 addressing is currently supported
                                                  only in certain regions. See IPv6
                                                  Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                  * The `cidrBlock` value for a Service,
                                                  if you''re setting up a security
                                                  list rule for traffic destined for
                                                  a particular `Service` through a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                type: string
                                              destinationType:
                                                description: 'Type of destination
                                                  for the rule. The default is `CIDR_BLOCK`.
                                                  Allowed values: * `CIDR_BLOCK`:
                                                  If the rule''s `destination` is
                                                  an IP address range in CIDR notation.
                                                  * `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `destination` is the `cidrBlock`
                                                  value for a Service (the rule is
                                                  for traffic destined for a particular
                                                  `Service` through a service gateway).'
                                                type: string
                                              icmpOptions:
                                                description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                properties:
                                                  code:
                                                    description: The ICMP code (optional).
                                                    type: integer
                                                  type:
                                                    description: The ICMP type.
                                                    type: integer
                                                type: object
                                              isStateless:
                                                description: A stateless rule allows
                                                  traffic in one direction. Remember
                                                  to add a corresponding stateless
                                                  rule in the other direction if you
                                                  need to support bidirectional traffic.
                                                  For example, if egress traffic allows
                                                  TCP destination port 80, there should
                                                  be an ingress rule to allow TCP
                                                  source port 80. Defaults to false,
                                                  which means the rule is stateful
                                                  and a corresponding rule is not
                                                  necessary for bidirectional traffic.
                                                type: boolean
                                              protocol:
                                                description: The transport protocol.
                                                  Specify either `all` or an IPv4
                                                  protocol number as defined in Protocol
                                                  Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                  Options are supported only for ICMP
                                                  ("1"), TCP ("6"), UDP ("17"), and
                                                  ICMPv6 ("58").
                                                type: string
                                              tcpOptions:
                                                description: TcpOptions Optional and
                                                  valid only for TCP. Use to specify
                                                  particular destination ports for
                                                  TCP rules. If you specify TCP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                              udpOptions:
                                                description: UdpOptions Optional and
                                                  valid only for UDP. Use to specify
                                                  particular destination ports for
                                                  UDP rules. If you specify UDP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                            type: object
                                          type: array
                                        id:
                                          description: ID of the SecurityList.
                                          type: string
                                        ingressRules:
                                          description: IngressRules on the SecurityList.
                                          items:
                                            description: IngressSecurityRule A rule
                                              for allowing inbound IP packets.
                                            properties:
                                              description:
                                                description: An optional description
                                                  of your choice for the rule.
                                                type: string
                                              icmpOptions:
                                                description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                properties:
                                                  code:
                                                    description: The ICMP code (optional).
                                                    type: integer
                                                  type:
                                                    description: The ICMP type.
                                                    type: integer
                                                type: object
                                              isStateless:
                                                description: A stateless rule allows
                                                  traffic in one direction. Remember
                                                  to add a corresponding stateless
                                                  rule in the other direction if you
                                                  need to support bidirectional traffic.
                                                  For example, if ingress traffic
                                                  allows TCP destination port 80,
                                                  there should be an egress rule to
                                                  allow TCP source port 80. Defaults
                                                  to false, which means the rule is
                                                  stateful and a corresponding rule
                                                  is not necessary for bidirectional
                                                  traffic.
                                                type: boolean
                                              protocol:
                                                description: The transport protocol.
                                                  Specify either `all` or an IPv4
                                                  protocol number as defined in Protocol
                                                  Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                  Options are supported only for ICMP
                                                  ("1"), TCP ("6"), UDP ("17"), and
                                                  ICMPv6 ("58").
                                                type: string
                                              source:
                                                description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet coming into the instance
                                                  can come from. Allowed values: *
                                                  IP address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56`. IPv6 addressing
                                                  is supported for all commercial
                                                  and government regions. See IPv6
                                                  Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                  * The `cidrBlock` value for a Service,
                                                  if you''re setting up a security
                                                  list rule for traffic coming from
                                                  a particular `Service` through a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                type: string
                                              sourceType:
                                                description: 'Type of source for the
                                                  rule. The default is `CIDR_BLOCK`.
                                                  * `CIDR_BLOCK`: If the rule''s `source`
                                                  is an IP address range in CIDR notation.
                                                  * `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `source` is the `cidrBlock` value
                                                  for a Service (the rule is for traffic
                                                  coming from a particular `Service`
                                                  through a service gateway).'
                                                type: string
                                              tcpOptions:
                                                description: TcpOptions Optional and
                                                  valid only for TCP. Use to specify
                                                  particular destination ports for
                                                  TCP rules. If you specify TCP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                              udpOptions:
                                                description: UdpOptions Optional and
                                                  valid only for UDP. Use to specify
                                                  particular destination ports for
                                                  UDP rules. If you specify UDP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                            type: object
                                          type: array
                                        name:
                                          description: SecurityList Name.
                                          type: string
                                      type: object
                                    type:
                                      description: Type defines the subnet type (e.g.
                                        public, private).
                                      type: string
                                  required:
                                  - name
                                  - role
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          vcnPeering:
                            description: VCNPeering configuration.
                            properties:
                              drg:
                                description: DRG configuration refers to the DRG which
                                  has to be created if required. If management cluster
                                  and workload cluster shares the same DRG, this fields
                                  is not required to be specified.
                                properties:
                                  id:
                                    description: ID is the OCID for the created DRG.
                                    type: string
                                  manage:
                                    description: Manage defines whether the DRG has
                                      to be managed(including create). If set to false(the
                                      default) the ID has to be specified by the user
                                      to a valid DRG ID to which the VCN has to be
                                      attached.
                                    type: boolean
                                  name:
                                    description: Name is the name of the created DRG.
                                    type: string
                                  vcnAttachmentId:
                                    description: VcnAttachmentId is the ID of the
                                      VCN attachment of the DRG. The workload cluster
                                      VCN can be attached to either the management
                                      cluster VCN if they are sharing the same DRG
                                      or to the workload cluster DRG.
                                    type: string
                                type: object
                              peerRouteRules:
                                description: PeerRouteRules defines the routing rules
                                  which will be added to the private route tables
                                  of the workload cluster VCN. The routes defined
                                  here will be directed to DRG.
                                items:
                                  description: PeerRouteRule defines a Route Rule
                                    to be routed via a DRG.
                                  properties:
                                    vcnCIDRRange:
                                      description: VCNCIDRRange is the CIDR Range
                                        of peer VCN to which the workload cluster
                                        VCN will be peered. The CIDR range is required
                                        to add the route rule in the workload cluster
                                        VCN, the route rule will forward any traffic
                                        to the CIDR to the DRG.
                                      type: string
                                  type: object
                                type: array
                              remotePeeringConnections:
                                description: RemotePeeringConnections defines the
                                  RPC connections which be established with the workload
                                  cluster DRG.
                                items:
                                  description: RemotePeeringConnection is used to
                                    peer VCNs residing in different regions(typically).
                                    Remote VCN Peering is explained here - https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/remoteVCNpeering.htm
                                  properties:
                                    managePeerRPC:
                                      description: ManagePeerRPC will define if the
                                        Peer VCN needs to be managed. If set to true
                                        a Remote Peering Connection will be created
                                        in the Peer DRG and the connection will be
                                        created between local and peer RPC.
                                      type: boolean
                                    peerDRGId:
                                      description: PeerDRGId defines the DRG ID of
                                        the peer.
                                      type: string
                                    peerRPCConnectionId:
                                      description: PeerRPCConnectionId defines the
                                        RPC ID of peer. If ManagePeerRPC is set to
                                        true this will be created by Cluster API Provider
                                        for OCI, otherwise this has be defined by
                                        the user.
                                      type: string
                                    peerRegionName:
                                      description: PeerRegionName defined the region
                                        name of Peer VCN.
                                      type: string
                                    rpcConnectionId:
                                      description: RPCConnectionId is the connection
                                        ID of the connection between peer and local
                                        RPC.
                                      type: string
                                  type: object
                                type: array
                            type: object
                        type: object
                      ociResourceIdentifier:
                        description: The unique ID which will be used to tag all the
                          resources created by this Cluster. The tag will be used
                          to identify resources belonging to this cluster. this will
                          be auto-generated and should not be set by the user.
                        type: string
                      region:
                        description: Region the cluster operates in. It must be one
                          of available regions in Region Identifier format. See https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-oci-system/capoci-serving-cert
    controller-gen.kubebuilder.io/version: v0.10.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ocimachinepools.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: capoci-webhook-service
          namespace: cluster-api-provider-oci-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: OCIMachinePool
    listKind: OCIMachinePoolList
    plural: ocimachinepools
    singular: ocimachinepool
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIMachinePoolSpec defines the desired state of OCIMachinePool
            properties:
              instanceConfiguration:
                description: InstanceConfiguration defines the configuration of the
                  instance pool instances.
                properties:
                  agentConfig:
                    description: AgentConfig defines the options for the Oracle Cloud
                      Agent software running on the instance.
                    properties:
                      areAllPluginsDisabled:
                        description: AreAllPluginsDisabled defines whether Oracle
                          Cloud Agent can run all the available plugins. This includes
                          the management and monitoring plugins. To get a list of
                          available plugins, use the ListInstanceagentAvailablePlugins
                          operation in the Oracle Cloud Agent API. For more information
                          about the available plugins, see Managing Plugins with Oracle
                          Cloud Agent (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
                        type: boolean
                      isManagementDisabled:
                        description: 'IsManagementDisabled defines whether Oracle
                          Cloud Agent can run all the available management plugins.
                          Default value is false (management plugins are enabled).
                          These are the management plugins: OS Management Service
                          Agent and Compute Instance Run Command. The management plugins
                          are controlled by this parameter and by the per-plugin configuration
                          in the `pluginsConfig` object. - If `isManagementDisabled`
                          is true, all of the management plugins are disabled, regardless
                          of the per-plugin configuration. - If `isManagementDisabled`
                          is false, all of the management plugins are enabled. You
                          can optionally disable individual management plugins by
                          providing a value in the `pluginsConfig` object.'
                        type: boolean
                      isMonitoringDisabled:
                        description: 'IsMonitoringDisabled defines whether Oracle
                          Cloud Agent can gather performance metrics and monitor the
                          instance using the monitoring plugins. Default value is
                          false (monitoring plugins are enabled). These are the monitoring
                          plugins: Compute Instance Monitoring and Custom Logs Monitoring.
                          The monitoring plugins are controlled by this parameter
                          and by the per-plugin configuration in the `pluginsConfig`
                          object. - If `isMonitoringDisabled` is true, all of the
                          monitoring plugins are disabled, regardless of the per-plugin
                          configuration. - If `isMonitoringDisabled` is false, all
                          of the monitoring plugins are enabled. You can optionally
                          disable individual monitoring plugins by providing a value
                          in the `pluginsConfig` object.'
                        type: boolean
                      pluginsConfigs:
                        description: PluginsConfig defines the configuration of plugins
                          associated with this instance.
                        items:
                          description: InstanceAgentPluginConfig defines the configuration
                            of plugins associated with this instance.
                          properties:
                            desiredState:
                              description: 'DesiredState defines whether the plugin
                                should be enabled or disabled. To enable the monitoring
                                and management plugins, the `isMonitoringDisabled`
                                and `isManagementDisabled` attributes must also be
                                set to false. The following values are supported:
                                * `ENABLED` * `DISABLED`'
                              type: string
                            name:
                              description: Name defines the name of the plugin. To
                                get a list of available plugins, use the ListInstanceagentAvailablePlugins
                                operation in the Oracle Cloud Agent API. For more
                                information about the available plugins, see Managing
                                Plugins with Oracle Cloud Agent (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
                              type: string
                          type: object
                        type: array
                    type: object
                  availabilityConfig:
                    description: LaunchInstanceAvailabilityConfig defines the options
                      for VM migration during infrastructure maintenance events and
                      for defining the availability of a VM instance after a maintenance
                      event that impacts the underlying hardware.
                    properties:
                      isLiveMigrationPreferred:
                        description: IsLiveMigrationPreferred defines whether to live
                          migrate supported VM instances to a healthy physical VM
                          host without disrupting running instances during infrastructure
                          maintenance events. If null, Oracle chooses the best option
                          for migrating the VM during infrastructure maintenance events.
                        type: boolean
                      recoveryAction:
                        description: RecoveryAction defines the lifecycle state for
                          an instance when it is recovered after infrastructure maintenance.
                          * `RESTORE_INSTANCE` - The instance is restored to the lifecycle
                          state it was in before the maintenance event. If the instance
                          was running, it is automatically rebooted. This is the default
                          action when a value is not set. * `STOP_INSTANCE` - The
                          instance is recovered in the stopped state.
                        type: string
                    type: object
                  capacityReservationId:
                    description: CapacityReservationId defines the OCID of the compute
                      capacity reservation this instance is launched under. You can
                      opt out of all default reservations by specifying an empty string
                      as input for this field. For more information, see Capacity
                      Reservations (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm#default).
                    type: string
                  dedicatedVmHostId:
                    description: DedicatedVmHostId defines the OCID of the dedicated
                      VM host.
                    type: string
                  instanceConfigurationId:
                    type: string
                  instanceOptions:
                    description: InstanceOptions defines the instance options
                    properties:
                      areLegacyImdsEndpointsDisabled:
                        description: Whether to disable the legacy (/v1) instance
                          metadata service endpoints. Customers who have migrated
                          to /v2 should set this to true for added security. Default
                          is false.
                        type: boolean
                    type: object
                  instanceSourceViaImageConfig:
                    description: InstanceSourceViaImageConfig defines the options
                      for booting up instances via images
                    properties:
                      bootVolumeSizeInGBs:
                        description: The size of boot volume. Please see https://docs.oracle.com/en-us/iaas/Content/Block/Tasks/extendingbootpartition.htm
                          to extend the boot volume size.
                        format: int64
                        type: integer
                      bootVolumeVpusPerGB:
                        description: 'BootVolumeVpusPerGB defines the number of volume
                          performance units (VPUs) that will be applied to this volume
                          per GB, representing the Block Volume service''s elastic
                          performance options. See Block Volume Performance Levels
                          (https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels)
                          for more information. Allowed values: * `10`: Represents
                          Balanced option. * `20`: Represents Higher Performance option.
                          * `30`-`120`: Represents the Ultra High Performance option.
                          For volumes with the auto-tuned performance feature enabled,
                          this is set to the default (minimum) VPUs/GB.'
                        format: int64
                        type: integer
                      imageId:
                        description: OCID of the image to be used to launch the instance.
                        type: string
                      kmsKeyId:
                        description: KmsKeyId defines the OCID of the Key Management
                          key to assign as the master encryption key for the boot
                          volume.
                        type: string
                    type: object
                  instanceVnicConfiguration:
                    description: NetworkDetails defines the configuration options
                      for the network
                    properties:
                      assignPrivateDnsRecord:
                        description: AssignPrivateDnsRecord defines whether the VNIC
                          should be assigned a DNS record.
                        type: boolean
                      assignPublicIp:
                        description: AssignPublicIp defines whether the instance should
                          have a public IP address
                        type: boolean
                      displayName:
                        description: DisplayName defines a user-friendly name. Does
                          not have to be unique, and it's changeable. Avoid entering
                          confidential information.
                        type: string
                      hostnameLabel:
                        description: HostnameLabel defines the hostname for the VNIC's
                          primary private IP. Used for DNS.
                        type: string
                      nsgId:
                        description: "Deprecated, use \tNsgNames parameter to define
                          the NSGs"
                        type: string
                      nsgNames:
                        description: NsgNames defines a list of the nsg names of the
                          network security groups (NSGs) to add the VNIC to.
                        items:
                          type: string
                        type: array
                      skipSourceDestCheck:
                        description: SkipSourceDestCheck defines whether the source/destination
                          check is disabled on the VNIC.
                        type: boolean
                      subnetId:
                        description: SubnetId defines the ID of the subnet to use.
                          Deprecated, use SubnetName parameter
                        type: string
                      subnetName:
                        description: SubnetName defines the subnet name to use for
                          the VNIC
                        type: string
                    type: object
                  isPvEncryptionInTransitEnabled:
                    default: true
                    description: Is in transit encryption of volumes required.
                    type: boolean
                  launchOptions:
                    description: LaunchOptions defines the options for tuning the
                      compatibility and performance of VM shapes
                    properties:
                      bootVolumeType:
                        description: BootVolumeType defines Emulation type for the
                          boot volume. * `ISCSI` - ISCSI attached block storage device.
                          * `SCSI` - Emulated SCSI disk. * `IDE` - Emulated IDE disk.
                          * `VFIO` - Direct attached Virtual Function storage. This
                          is the default option for local data volumes on platform
                          images. * `PARAVIRTUALIZED` - Paravirtualized disk. This
                          is the default for boot volumes and remote block storage
                          volumes on platform images.
                        type: string
                      firmware:
                        description: Firmware defines the firmware used to boot VM.
                          Select the option that matches your operating system. *
                          `BIOS` - Boot VM using BIOS style firmware. This is compatible
                          with both 32 bit and 64 bit operating systems that boot
                          using MBR style bootloaders. * `UEFI_64` - Boot VM using
                          UEFI style firmware compatible with 64 bit operating systems.
                          This is the default for platform images.
                        type: string
                      isConsistentVolumeNamingEnabled:
                        description: IsConsistentVolumeNamingEnabled defines whether
                          to enable consistent volume naming feature. Defaults to
                          false.
                        type: boolean
                      networkType:
                        description: NetworkType defines the emulation type for the
                          physical network interface card (NIC). * `E1000` - Emulated
                          Gigabit ethernet controller. Compatible with Linux e1000
                          network driver. * `VFIO` - Direct attached Virtual Function
                          network controller. This is the networking type when you
                          launch an instance using hardware-assisted (SR-IOV) networking.
                          * `PARAVIRTUALIZED` - VM instances launch with paravirtualized
                          devices using VirtIO drivers.
                        type: string
                      remoteDataVolumeType:
                        description: RemoteDataVolumeType defines the emulation type
                          for volume. * `ISCSI` - ISCSI attached block storage device.
                          * `SCSI` - Emulated SCSI disk. * `IDE` - Emulated IDE disk.
                          * `VFIO` - Direct attached Virtual Function storage. This
                          is the default option for local data volumes on platform
                          images. * `PARAVIRTUALIZED` - Paravirtualized disk. This
                          is the default for boot volumes and remote block storage
                          volumes on platform images.
                        type: string
                    type: object
                  metadata:
                    additionalProperties:
                      type: string
                    description: Custom metadata key/value pairs that you provide,
                      such as the SSH public key required to connect to the instance.
                    type: object
                  platformConfig:
                    description: PlatformConfig defines the platform config parameters
                    properties:
                      amdMilanBmPlatformConfig:
                        description: AmdMilanBmPlatformConfig describe AMD Milan BM
                          platform configuration
                        properties:
                          areVirtualInstructionsEnabled:
                            description: Whether virtualization instructions are available.
                              For example, Secure Virtual Machine for AMD shapes or
                              VT-x for Intel shapes.
                            type: boolean
                          isAccessControlServiceEnabled:
                            description: Whether the Access Control Service is enabled
                              on the instance. When enabled, the platform can enforce
                              PCIe device isolation, required for VFIO device pass-through.
                            type: boolean
                          isInputOutputMemoryManagementUnitEnabled:
                            description: Whether the input-output memory management
                              unit is enabled.
                            type: boolean
                          isMeasuredBootEnabled:
                            description: Whether the Measured Boot feature is enabled
                              on the instance.
                            type: boolean
                          isMemoryEncryptionEnabled:
                            description: Whether the instance is a confidential instance.
                              If this value is `true`, the instance is a confidential
                              instance. The default value is `false`.
                            type: boolean
                          isSecureBootEnabled:
                            description: Whether Secure Boot is enabled on the instance.
                            type: boolean
                          isSymmetricMultiThreadingEnabled:
                            description: Whether symmetric multithreading is enabled
                              on the instance. Symmetric multithreading is also called
                              simultaneous multithreading (SMT) or Intel Hyper-Threading.
                              Intel and AMD processors have two hardware execution
                              threads per core (OCPU). SMT permits multiple independent
                              threads of execution, to better use the resources and
                              increase the efficiency of the CPU. When multithreading
                              is disabled, only one thread is permitted to run on
                              each core, which can provide higher or more predictable
                              performance for some workloads.
                            type: boolean
                          isTrustedPlatformModuleEnabled:
                            description: Whether the Trusted Platform Module (TPM)
                              is enabled on the instance.
                            type: boolean
                          numaNodesPerSocket:
                            description: 'The number of NUMA nodes per socket (NPS).
                              The following values are supported: * `NPS0` * `NPS1`
                              * `NPS2` * `NPS4`'
                            type: string
                          percentageOfCoresEnabled:
                            description: The percentage of cores enabled. Value must
                              be a multiple of 25%. If the requested percentage results
                              in a fractional number of cores, the system rounds up
                              the number of cores across processors and provisions
                              an instance with a whole number of cores. If the applications
                              that you run on the instance use a core-based licensing
                              model and need fewer cores than the full size of the
                              shape, you can disable cores to reduce your licensing
                              costs. The instance itself is billed for the full shape,
                              regardless of whether all cores are enabled.
                            type: integer
                        type: object
                      amdRomeBmGpuPlatformConfig:
                        description: AmdMilanBmPlatformConfig describe AMD Rome BM
                          platform configuration
                        properties:
                          areVirtualInstructionsEnabled:
                            description: Whether virtualization instructions are available.
                              For example, Secure Virtual Machine for AMD shapes or
                              VT-x for Intel shapes.
                            type: boolean
                          isAccessControlServiceEnabled:
                            description: Whether the Access Control Service is enabled
                              on the instance. When enabled, the platform can enforce
                              PCIe device isolation, required for VFIO device pass-through.
                            type: boolean
                          isInputOutputMemoryManagementUnitEnabled:
                            description: Whether the input-output memory management
                              unit is enabled.
                            type: boolean
                          isMeasuredBootEnabled:
                            description: Whether the Measured Boot feature is enabled
                              on the instance.
                            type: boolean
                          isMemoryEncryptionEnabled:
                            description: Whether the instance is a confidential instance.
                              If this value is `true`, the instance is a confidential
                              instance. The default value is `false`.
                            type: boolean
                          isSecureBootEnabled:
                            description: Whether Secure Boot is enabled on the instance.
                            type: boolean
                          isSymmetricMultiThreadingEnabled:
                            description: Whether symmetric multithreading is enabled
                              on the instance. Symmetric multithreading is also called
                              simultaneous multithreading (SMT) or Intel Hyper-Threading.
                              Intel and AMD processors have two hardware execution
                              threads per core (OCPU). SMT permits multiple independent
                              threads of execution, to better use the resources and
                              increase the efficiency of the CPU. When multithreading
                              is disabled, only one thread is permitted to run on
                              each core, which can provide higher or more predictable
                              performance for some workloads.
                            type: boolean
                          isTrustedPlatformModuleEnabled:
                            description: Whether the Trusted Platform Module (TPM)
                              is enabled on the instance.
                            type: boolean
                          numaNodesPerSocket:
                            description: 'The number of NUMA nodes per socket (NPS).
                              The following values are supported: * `NPS0` * `NPS1`
                              * `NPS2` * `NPS4`'
                            type: string
                        type: object
                      amdRomeBmPlatformConfig:
                        description: AmdMilanBmPlatformConfig describe AMD Rome BM
                          platform configuration
                        properties:
                          areVirtualInstructionsEnabled:
                            description: Whether virtualization instructions are available.
                              For example, Secure Virtual Machine for AMD shapes or
                              VT-x for Intel shapes.
                            type: boolean
                          isAccessControlServiceEnabled:
                            description: Whether the Access Control Service is enabled
                              on the instance. When enabled, the platform can enforce
                              PCIe device isolation, required for VFIO device pass-through.
                            type: boolean
                          isInputOutputMemoryManagementUnitEnabled:
                            description: Whether the input-output memory management
                              unit is enabled.
                            type: boolean
                          isMeasuredBootEnabled:
                            description: Whether the Measured Boot feature is enabled
                              on the instance.
                            type: boolean
                          isMemoryEncryptionEnabled:
                            description: Whether the instance is a confidential instance.
                              If this value is `true`, the instance is a confidential
                              instance. The default value is `false`.
                            type: boolean
                          isSecureBootEnabled:
                            description: Whether Secure Boot is enabled on the instance.
                            type: boolean
                          isSymmetricMultiThreadingEnabled:
                            description: Whether symmetric multithreading is enabled
                              on the instance. Symmetric multithreading is also called
                              simultaneous multithreading (SMT) or Intel Hyper-Threading.
                              Intel and AMD processors have two hardware execution
                              threads per core (OCPU). SMT permits multiple independent
                              threads of execution, to better use the resources and
                              increase the efficiency of the CPU. When multithreading
                              is disabled, only one thread is permitted to run on
                              each core, which can provide higher or more predictable
                              performance for some workloads.
                            type: boolean
                          isTrustedPlatformModuleEnabled:
                            description: Whether the Trusted Platform Module (TPM)
                              is enabled on the instance.
                            type: boolean
                          numaNodesPerSocket:
                            description: 'The number of NUMA nodes per socket (NPS).
                              The following values are supported: * `NPS0` * `NPS1`
                              * `NPS2` * `NPS4`'
                            type: string
                          percentageOfCoresEnabled:
                            description: The percentage of cores enabled. Value must
                              be a multiple of 25%. If the requested percentage results
                              in a fractional number of cores, the system rounds up
                              the number of cores across processors and provisions
                              an instance with a whole number of cores. If the applications
                              that you run on the instance use a core-based licensing
                              model and need fewer cores than the full size of the
                              shape, you can disable cores to reduce your licensing
                              costs. The instance itself is billed for the full shape,
                              regardless of whether all cores are enabled.
                            type: integer
                        type: object
                      amdVmPlatformConfig:
                        description: AmdMilanBmPlatformConfig describe AMD VM platform
                          configuration
                        properties:
                          isMeasuredBootEnabled:
                            description: Whether the Measured Boot feature is enabled
                              on the instance.
                            type: boolean
                          isMemoryEncryptionEnabled:
                            description: Whether the instance is a confidential instance.
                              If this value is `true`, the instance is a confidential
                              instance. The default value is `false`.
                            type: boolean
                          isSecureBootEnabled:
                            description: Whether Secure Boot is enabled on the instance.
                            type: boolean
                          isTrustedPlatformModuleEnabled:
                            description: Whether the Trusted Platform Module (TPM)
                              is enabled on the instance.
                            type: boolean
                        type: object
                      intelIcelakeBmPlatformConfig:
                        description: AmdMilanBmPlatformConfig describe Intel Skylke
                          BM platform configuration
                        properties:
                          isInputOutputMemoryManagementUnitEnabled:
                            description: Whether the input-output memory management
                              unit is enabled.
                            type: boolean
                          isMeasuredBootEnabled:
                            description: Whether the Measured Boot feature is enabled
                              on the instance.
                            type: boolean
                          isMemoryEncryptionEnabled:
                            description: Whether the instance is a confidential instance.
                              If this value is `true`, the instance is a confidential
                              instance. The default value is `false`.
                            type: boolean
                          isSecureBootEnabled:
                            description: Whether Secure Boot is enabled on the instance.
                            type: boolean
                          isSymmetricMultiThreadingEnabled:
                            description: Whether symmetric multithreading is enabled
                              on the instance. Symmetric multithreading is also called
                              simultaneous multithreading (SMT) or Intel Hyper-Threading.
                              Intel and AMD processors have two hardware execution
                              threads per core (OCPU). SMT permits multiple independent
                              threads of execution, to better use the resources and
                              increase the efficiency of the CPU. When multithreading
                              is disabled, only one thread is permitted to run on
                              each core, which can provide higher or more predictable
                              performance for some workloads.
                            type: boolean
                          isTrustedPlatformModuleEnabled:
                            description: Whether the Trusted Platform Module (TPM)
                              is enabled on the instance.
                            type: boolean
                          numaNodesPerSocket:
                            description: 'The number of NUMA nodes per socket (NPS).
                              The following values are supported: * `NPS1` * `NPS2`'
                            type: string
                          percentageOfCoresEnabled:
                            description: The percentage of cores enabled. Value must
                              be a multiple of 25%. If the requested percentage results
                              in a fractional number of cores, the system rounds up
                              the number of cores across processors and provisions
                              an instance with a whole number of cores. If the applications
                              that you run on the instance use a core-based licensing
                              model and need fewer cores than the full size of the
                              shape, you can disable cores to reduce your licensing
                              costs. The instance itself is billed for the full shape,
                              regardless of whether all cores are enabled.
                            type: integer
                        type: object
                      intelSkylakeBmPlatformConfig:
                        description: AmdMilanBmPlatformConfig describe Intel Skylke
                          BM platform configuration
                        properties:
                          isMeasuredBootEnabled:
                            description: Whether the Measured Boot feature is enabled
                              on the instance.
                            type: boolean
                          isMemoryEncryptionEnabled:
                            description: Whether the instance is a confidential instance.
                              If this value is `true`, the instance is a confidential
                              instance. The default value is `false`.
                            type: boolean
                          isSecureBootEnabled:
                            description: Whether Secure Boot is enabled on the instance.
                            type: boolean
                          isTrustedPlatformModuleEnabled:
                            description: Whether the Trusted Platform Module (TPM)
                              is enabled on the instance.
                            type: boolean
                        type: object
                      intelVmPlatformConfig:
                        description: AmdMilanBmPlatformConfig describe Intel VM platform
                          configuration
                        properties:
                          isMeasuredBootEnabled:
                            description: Whether the Measured Boot feature is enabled
                              on the instance.
                            type: boolean
                          isMemoryEncryptionEnabled:
                            description: Whether the instance is a confidential instance.
                              If this value is `true`, the instance is a confidential
                              instance. The default value is `false`.
                            type: boolean
                          isSecureBootEnabled:
                            description: Whether Secure Boot is enabled on the instance.
                            type: boolean
                          isTrustedPlatformModuleEnabled:
                            description: Whether the Trusted Platform Module (TPM)
                              is enabled on the instance.
                            type: boolean
                        type: object
                      platformConfigType:
                        description: The type of platform configuration. Valid values
                          are * `AMD_ROME_BM_GPU` * `AMD_ROME_BM` * `INTEL_ICELAKE_BM`
                          * `AMD_VM` * `INTEL_VM` * `INTEL_SKYLAKE_BM` * `AMD_MILAN_BM`
                          Based on the enum, exactly one of the specific configuration
                          types must be set
                        type: string
                    type: object
                  preemptibleInstanceConfig:
                    description: PreemptibleInstanceConfig Configuration options for
                      preemptible instances.
                    properties:
                      terminatePreemptionAction:
                        description: TerminatePreemptionAction terminates the preemptible
                          instance when it is interrupted for eviction.
                        properties:
                          preserveBootVolume:
                            description: PreserveBootVolume defines whether to preserve
                              the boot volume that was used to launch the preemptible
                              instance when the instance is terminated. Defaults to
                              false if not specified.
                            type: boolean
                        type: object
                    type: object
                  shape:
                    type: string
                  shapeConfig:
                    description: The shape configuration of the instance, applicable
                      for flex instances.
                    properties:
                      baselineOcpuUtilization:
                        description: 'The baseline OCPU utilization for a subcore
                          burstable VM instance. Leave this attribute blank for a
                          non-burstable instance, or explicitly specify non-burstable
                          with `BASELINE_1_1`. The following values are supported:
                          - `BASELINE_1_8` - baseline usage is 1/8 of an OCPU. - `BASELINE_1_2`
                          - baseline usage is 1/2 of an OCPU. - `BASELINE_1_1` - baseline
                          usage is an entire OCPU. This represents a non-burstable
                          instance.'
                        type: string
                      memoryInGBs:
                        description: The total amount of memory available to the instance,
                          in gigabytes.
                        type: string
                      nvmes:
                        description: Nvmes defines the number of NVMe drives to be
                          used for storage. A single drive has 6.8 TB available.
                        type: integer
                      ocpus:
                        description: The total number of OCPUs available to the instance.
                        type: string
                    type: object
                type: object
              ocid:
                description: OCID is the OCID of the associated InstancePool
                type: string
              placementDetails:
                description: PlacementDetails defines the placement details of the
                  instance pool.
                items:
                  properties:
                    availabilityDomain:
                      description: The availability domain to place instances.
                      type: integer
                  required:
                  - availabilityDomain
                  type: object
                type: array
              providerID:
                description: ProviderID is the OCID of the associated InstancePool
                  in a provider format
                type: string
              providerIDList:
                description: ProviderIDList are the identification IDs of machine
                  instances provided by the provider. This field must match the provider
                  IDs as seen on the node objects corresponding to a machine pool's
                  machine instances.
                items:
                  type: string
                type: array
            type: object
          status:
            description: OCIMachinePoolStatus defines the observed state of OCIMachinePool
            properties:
              conditions:
                description: Conditions defines current service state of the OCIMachinePool.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                type: string
              failureReason:
                description: MachineStatusError defines errors states for Machine
                  objects.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta2
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIMachinePoolSpec defines the desired state of OCIMachinePool
            properties:
              instanceConfiguration:
                description: InstanceConfiguration defines the configuration of the
                  instance pool instances.
                properties:
                  agentConfig:
                    description: AgentConfig defines the options for the Oracle Cloud
                      Agent software running on the instance.
                    properties:
                      areAllPluginsDisabled:
                        description: AreAllPluginsDisabled defines whether Oracle
                          Cloud Agent can run all the available plugins. This includes
                          the management and monitoring plugins. To get a list of
                          available plugins, use the ListInstanceagentAvailablePlugins
                          operation in the Oracle Cloud Agent API. For more information
                          about the available plugins, see Managing Plugins with Oracle
                          Cloud Agent (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
                        type: boolean
                      isManagementDisabled:
                        description: 'IsManagementDisabled defines whether Oracle
                          Cloud Agent can run all the available management plugins.
                          Default value is false (management plugins are enabled).
                          These are the management plugins: OS Management Service
                          Agent and Compute Instance Run Command. The management plugins
                          are controlled by this parameter and by the per-plugin configuration
                          in the `pluginsConfig` object. - If `isManagementDisabled`
                          is true, all of the management plugins are disabled, regardless
                          of the per-plugin configuration. - If `isManagementDisabled`
                          is false, all of the management plugins are enabled. You
                          can optionally disable individual management plugins by
                          providing a value in the `pluginsConfig` object.'
                        type: boolean
                      isMonitoringDisabled:
                        description: 'IsMonitoringDisabled defines whether Oracle
                          Cloud Agent can gather performance metrics and monitor the
                          instance using the monitoring plugins. Default value is
                          false (monitoring plugins are enabled). These are the monitoring
                          plugins: Compute Instance Monitoring and Custom Logs Monitoring.
                          The monitoring plugins are controlled by this parameter
                          and by the per-plugin configuration in the `pluginsConfig`
                          object. - If `isMonitoringDisabled` is true, all of the
                          monitoring plugins are disabled, regardless of the per-plugin
                          configuration. - If `isMonitoringDisabled` is false, all
                          of the monitoring plugins are enabled. You can optionally
                          disable individual monitoring plugins by providing a value
                          in the `pluginsConfig` object.'
                        type: boolean
                      pluginsConfigs:
                        description: PluginsConfig defines the configuration of plugins
                          associated with this instance.
                        items:
                          description: InstanceAgentPluginConfig defines the configuration
                            of plugins associated with this instance.
                          properties:
                            desiredState:
                              description: 'DesiredState defines whether the plugin
                                should be enabled or disabled. To enable the monitoring
                                and management plugins, the `isMonitoringDisabled`
                                and `isManagementDisabled` attributes must also be
                                set to false. The following values are supported:
                                * `ENABLED` * `DISABLED`'
                              type: string
                            name:
                              description: Name defines the name of the plugin. To
                                get a list of available plugins, use the ListInstanceagentAvailablePlugins
                                operation in the Oracle Cloud Agent API. For more
                                information about the available plugins, see Managing
                                Plugins with Oracle Cloud Agent (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
                              type: string
                          type: object
                        type: array
                    type: object
                  availabilityConfig:
                    description: LaunchInstanceAvailabilityConfig defines the options
                      for VM migration during infrastructure maintenance events and
                      for defining the availability of a VM instance after a maintenance
                      event that impacts the underlying hardware.
                    properties:
                      isLiveMigrationPreferred:
                        description: IsLiveMigrationPreferred defines whether to live
                          migrate supported VM instances to a healthy physical VM
                          host without disrupting running instances during infrastructure
                          maintenance events. If null, Oracle chooses the best option
                          for migrating the VM during infrastructure maintenance events.
                        type: boolean
                      recoveryAction:
                        description: RecoveryAction defines the lifecycle state for
                          an instance when it is recovered after infrastructure maintenance.
                          * `RESTORE_INSTANCE` - The instance is restored to the lifecycle
                          state it was in before the maintenance event. If the instance
                          was running, it is automatically rebooted. This is the default
                          action when a value is not set. * `STOP_INSTANCE` - The
                          instance is recovered in the stopped state.
                        type: string
                    type: object
                  capacityReservationId:
                    description: CapacityReservationId defines the OCID of the compute
                      capacity reservation this instance is launched under. You can
                      opt out of all default reservations by specifying an empty string
                      as input for this field. For more information, see Capacity
                      Reservations (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm#default).
                    type: string
                  dedicatedVmHostId:
                    description: DedicatedVmHostId defines the OCID of the dedicated
                      VM host.
                    type: string
                  instanceConfigurationId:
                    type: string
                  instanceOptions:
                    description: InstanceOptions defines the instance options
                    properties:
                      areLegacyImdsEndpointsDisabled:
                        description: Whether to disable the legacy (/v1) instance
                          metadata service endpoints. Customers who have migrated
                          to /v2 should set this to true for added security. Default
                          is false.
                        type: boolean
                    type: object
                  instanceSourceViaImageConfig:
                    description: InstanceSourceViaImageConfig defines the options
                      for booting up instances via images
                    properties:
                      bootVolumeSizeInGBs:
                        description: The size of boot volume. Please see https://docs.oracle.com/en-us/iaas/Content/Block/Tasks/extendingbootpartition.htm
                          to extend the boot volume size.
                        format: int64
                        type: integer
                      bootVolumeVpusPerGB:
                        description: 'BootVolumeVpusPerGB defines the number of volume
                          performance units (VPUs) that will be applied to this volume
                          per GB, representing the Block Volume service''s elastic
                          performance options. See Block Volume Performance Levels
                          (https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels)
                          for more information. Allowed values: * `10`: Represents
                          Balanced option. * `20`: Represents Higher Performance option.
                          * `30`-`120`: Represents the Ultra High Performance option.
                          For volumes with the auto-tuned performance feature enabled,
                          this is set to the default (minimum) VPUs/GB.'
                        format: int64
                        type: integer
                      imageId:
                        description: OCID of the image to be used to launch the instance.
                        type: string
                      kmsKeyId:
                        description: KmsKeyId defines the OCID of the Key Management
                          key to assign as the master encryption key for the boot
                          volume.
                        type: string
                    type: object
                  instanceVnicConfiguration:
                    description: NetworkDetails defines the configuration options
                      for the network
                    properties:
                      assignPrivateDnsRecord:
                        description: AssignPrivateDnsRecord defines whether the VNIC
                          should be assigned a DNS record.
                        type: boolean
                      assignPublicIp:
                        description: AssignPublicIp defines whether the instance should
                          have a public IP address
                        type: boolean
                      displayName:
                        description: DisplayName defines a user-friendly name. Does
                          not have to be unique, and it's changeable. Avoid entering
                          confidential information.
                        type: string
                      hostnameLabel:
                        description: HostnameLabel defines the hostname for the VNIC's
                          primary private IP. Used for DNS.
                        type: string
                      nsgNames:
                        description: NsgNames defines a list of the nsg names of the
                          network security groups (NSGs) to add the VNIC to.
                        items:
                          type: string
                        type: array
                      skipSourceDestCheck:
                        description: SkipSourceDestCheck defines whether the source/destination
                          check is disabled on the VNIC.
                        type: boolean
                      subnetName:
                        description: SubnetName defines the subnet name to use for
                          the VNIC
                        type: string
                    type: object
                  isPvEncryptionInTransitEnabled:
                    description: Is in transit encryption of volumes required.
                    type: boolean
                  launchOptions:
                    description: LaunchOptions defines the options for tuning the
                      compatibility and performance of VM shapes
                    properties:
                      bootVolumeType:
                        description: BootVolumeType defines Emulation type for the
                          boot volume. * `ISCSI` - ISCSI attached block storage device.
                          * `SCSI` - Emulated SCSI disk. * `IDE` - Emulated IDE disk.
                          * `VFIO` - Direct attached Virtual Function storage. This
                          is the default option for local data volumes on platform
                          images. * `PARAVIRTUALIZED` - Paravirtualized disk. This
                          is the default for boot volumes and remote block storage
                          volumes on platform images.
                        type: string
                      firmware:
                        description: Firmware defines the firmware used to boot VM.
                          Select the option that matches your operating system. *
                          `BIOS` - Boot VM using BIOS style firmware. This is compatible
                          with both 32 bit and 64 bit operating systems that boot
                          using MBR style bootloaders. * `UEFI_64` - Boot VM using
                          UEFI style firmware compatible with 64 bit operating systems.
                          This is the default for platform images.
                        type: string
                      isConsistentVolumeNamingEnabled:
                        description: IsConsistentVolumeNamingEnabled defines whether
                          to enable consistent volume naming feature. Defaults to
                          false.
                        type: boolean
                      networkType:
                        description: NetworkType defines the emulation type for the
                          physical network interface card (NIC). * `E1000` - Emulated
                          Gigabit ethernet controller. Compatible with Linux e1000
                          network driver. * `VFIO` - Direct attached Virtual Function
                          network controller. This is the networking type when you
                          launch an instance using hardware-assisted (SR-IOV) networking.
                          * `PARAVIRTUALIZED` - VM instances launch with paravirtualized
                          devices using VirtIO drivers.
                        type: string
                      remoteDataVolumeType:
                        description: RemoteDataVolumeType defines the emulation type
                          for volume. * `ISCSI` - ISCSI attached block storage device.
                          * `SCSI` - Emulated SCSI disk. * `IDE` - Emulated IDE disk.
                          * `VFIO` - Direct attached Virtual Function storage. This
                          is the default option for local data volumes on platform
                          images. * `PARAVIRTUALIZED` - Paravirtualized disk. This
                          is the default for boot volumes and remote block storage
                          volumes on platform images.
                        type: string
                    type: object
                  metadata:
                    additionalProperties:
                      type: string
                    description: Custom metadata key/value pairs that you provide,
                      such as the SSH public key required to connect to the instance.
                    type: object
                  platformConfig:
                    description: PlatformConfig defines the platform config parameters
                    properties:
                      amdMilanBmPlatformConfig:
                        description: AmdMilanBmPlatformConfig describe AMD Milan BM
                          platform configuration
                        properties:
                          areVirtualInstructionsEnabled:
                            description: Whether virtualization instructions are available.
                              For example, Secure Virtual Machine for AMD shapes or
                              VT-x for Intel shapes.
                            type: boolean
                          isAccessControlServiceEnabled:
                            description: Whether the Access Control Service is enabled
                              on the instance. When enabled, the platform can enforce
                              PCIe device isolation, required for VFIO device pass-through.
                            type: boolean
                          isInputOutputMemoryManagementUnitEnabled:
                            description: Whether the input-output memory management
                              unit is enabled.
                            type: boolean
                          isMeasuredBootEnabled:
                            description: Whether the Measured Boot feature is enabled
                              on the instance.
                            type: boolean
                          isMemoryEncryptionEnabled:
                            description: Whether the instance is a confidential instance.
                              If this value is `true`, the instance is a confidential
                              instance. The default value is `false`.
                            type: boolean
                          isSecureBootEnabled:
                            description: Whether Secure Boot is enabled on the instance.
                            type: boolean
                          isSymmetricMultiThreadingEnabled:
                            description: Whether symmetric multithreading is enabled
                              on the instance. Symmetric multithreading is also called
                              simultaneous multithreading (SMT) or Intel Hyper-Threading.
                              Intel and AMD processors have two hardware execution
                              threads per core (OCPU). SMT permits multiple independent
                              threads of execution, to better use the resources and
                              increase the efficiency of the CPU. When multithreading
                              is disabled, only one thread is permitted to run on
                              each core, which can provide higher or more predictable
                              performance for some workloads.
                            type: boolean
                          isTrustedPlatformModuleEnabled:
                            description: Whether the Trusted Platform Module (TPM)
                              is enabled on the instance.
                            type: boolean
                          numaNodesPerSocket:
                            description: 'The number of NUMA nodes per socket (NPS).
                              The following values are supported: * `NPS0` * `NPS1`
                              * `NPS2` * `NPS4`'
                            type: string
                          percentageOfCoresEnabled:
                            description: The percentage of cores enabled. Value must
                              be a multiple of 25%. If the requested percentage results
                              in a fractional number of cores, the system rounds up
                              the number of cores across processors and provisions
                              an instance with a whole number of cores. If the applications
                              that you run on the instance use a core-based licensing
                              model and need fewer cores than the full size of the
                              shape, you can disable cores to reduce your licensing
                              costs. The instance itself is billed for the full shape,
                              regardless of whether all cores are enabled.
                            type: integer
                        type: object
                      amdRomeBmGpuPlatformConfig:
                        description: AmdMilanBmPlatformConfig describe AMD Rome BM
                          platform configuration
                        properties:
                          areVirtualInstructionsEnabled:
                            description: Whether virtualization instructions are available.
                              For example, Secure Virtual Machine for AMD shapes or
                              VT-x for Intel shapes.
                            type: boolean
                          isAccessControlServiceEnabled:
                            description: Whether the Access Control Service is enabled
                              on the instance. When enabled, the platform can enforce
                              PCIe device isolation, required for VFIO device pass-through.
                            type: boolean
                          isInputOutputMemoryManagementUnitEnabled:
                            description: Whether the input-output memory management
                              unit is enabled.
                            type: boolean
                          isMeasuredBootEnabled:
                            description: Whether the Measured Boot feature is enabled
                              on the instance.
                            type: boolean
                          isMemoryEncryptionEnabled:
                            description: Whether the instance is a confidential instance.
                              If this value is `true`, the instance is a confidential
                              instance. The default value is `false`.
                            type: boolean
                          isSecureBootEnabled:
                            description: Whether Secure Boot is enabled on the instance.
                            type: boolean
                          isSymmetricMultiThreadingEnabled:
                            description: Whether symmetric multithreading is enabled
                              on the instance. Symmetric multithreading is also called
                              simultaneous multithreading (SMT) or Intel Hyper-Threading.
                              Intel and AMD processors have two hardware execution
                              threads per core (OCPU). SMT permits multiple independent
                              threads of execution, to better use the resources and
                              increase the efficiency of the CPU. When multithreading
                              is disabled, only one thread is permitted to run on
                              each core, which can provide higher or more predictable
                              performance for some workloads.
                            type: boolean
                          isTrustedPlatformModuleEnabled:
                            description: Whether the Trusted Platform Module (TPM)
                              is enabled on the instance.
                            type: boolean
                          numaNodesPerSocket:
                            description: 'The number of NUMA nodes per socket (NPS).
                              The following values are supported: * `NPS0` * `NPS1`
                              * `NPS2` * `NPS4`'
                            type: string
                        type: object
                      amdRomeBmPlatformConfig:
                        description: AmdMilanBmPlatformConfig describe AMD Rome BM
                          platform configuration
                        properties:
                          areVirtualInstructionsEnabled:
                            description: Whether virtualization instructions are available.
                              For example, Secure Virtual Machine for AMD shapes or
                              VT-x for Intel shapes.
                            type: boolean
                          isAccessControlServiceEnabled:
                            description: Whether the Access Control Service is enabled
                              on the instance. When enabled, the platform can enforce
                              PCIe device isolation, required for VFIO device pass-through.
                            type: boolean
                          isInputOutputMemoryManagementUnitEnabled:
                            description: Whether the input-output memory management
                              unit is enabled.
                            type: boolean
                          isMeasuredBootEnabled:
                            description: Whether the Measured Boot feature is enabled
                              on the instance.
                            type: boolean
                          isMemoryEncryptionEnabled:
                            description: Whether the instance is a confidential instance.
                              If this value is `true`, the instance is a confidential
                              instance. The default value is `false`.
                            type: boolean
                          isSecureBootEnabled:
                            description: Whether Secure Boot is enabled on the instance.
                            type: boolean
                          isSymmetricMultiThreadingEnabled:
                            description: Whether symmetric multithreading is enabled
                              on the instance. Symmetric multithreading is also called
                              simultaneous multithreading (SMT) or Intel Hyper-Threading.
                              Intel and AMD processors have two hardware execution
                              threads per core (OCPU). SMT permits multiple independent
                              threads of execution, to better use the resources and
                              increase the efficiency of the CPU. When multithreading
                              is disabled, only one thread is permitted to run on
                              each core, which can provide higher or more predictable
                              performance for some workloads.
                            type: boolean
                          isTrustedPlatformModuleEnabled:
                            description: Whether the Trusted Platform Module (TPM)
                              is enabled on the instance.
                            type: boolean
                          numaNodesPerSocket:
                            description: 'The number of NUMA nodes per socket (NPS).
                              The following values are supported: * `NPS0` * `NPS1`
                              * `NPS2` * `NPS4`'
                            type: string
                          percentageOfCoresEnabled:
                            description: The percentage of cores enabled. Value must
                              be a multiple of 25%. If the requested percentage results
                              in a fractional number of cores, the system rounds up
                              the number of cores across processors and provisions
                              an instance with a whole number of cores. If the applications
                              that you run on the instance use a core-based licensing
                              model and need fewer cores than the full size of the
                              shape, you can disable cores to reduce your licensing
                              costs. The instance itself is billed for the full shape,
                              regardless of whether all cores are enabled.
                            type: integer
                        type: object
                      amdVmPlatformConfig:
                        description: AmdMilanBmPlatformConfig describe AMD VM platform
                          configuration
                        properties:
                          isMeasuredBootEnabled:
                            description: Whether the Measured Boot feature is enabled
                              on the instance.
                            type: boolean
                          isMemoryEncryptionEnabled:
                            description: Whether the instance is a confidential instance.
                              If this value is `true`, the instance is a confidential
                              instance. The default value is `false`.
                            type: boolean
                          isSecureBootEnabled:
                            description: Whether Secure Boot is enabled on the instance.
                            type: boolean
                          isTrustedPlatformModuleEnabled:
                            description: Whether the Trusted Platform Module (TPM)
                              is enabled on the instance.
                            type: boolean
                        type: object
                      intelIcelakeBmPlatformConfig:
                        description: AmdMilanBmPlatformConfig describe Intel Skylke
                          BM platform configuration
                        properties:
                          isInputOutputMemoryManagementUnitEnabled:
                            description: Whether the input-output memory management
                              unit is enabled.
                            type: boolean
                          isMeasuredBootEnabled:
                            description: Whether the Measured Boot feature is enabled
                              on the instance.
                            type: boolean
                          isMemoryEncryptionEnabled:
                            description: Whether the instance is a confidential instance.
                              If this value is `true`, the instance is a confidential
                              instance. The default value is `false`.
                            type: boolean
                          isSecureBootEnabled:
                            description: Whether Secure Boot is enabled on the instance.
                            type: boolean
                          isSymmetricMultiThreadingEnabled:
                            description: Whether symmetric multithreading is enabled
                              on the instance. Symmetric multithreading is also called
                              simultaneous multithreading (SMT) or Intel Hyper-Threading.
                              Intel and AMD processors have two hardware execution
                              threads per core (OCPU). SMT permits multiple independent
                              threads of execution, to better use the resources and
                              increase the efficiency of the CPU. When multithreading
                              is disabled, only one thread is permitted to run on
                              each core, which can provide higher or more predictable
                              performance for some workloads.
                            type: boolean
                          isTrustedPlatformModuleEnabled:
                            description: Whether the Trusted Platform Module (TPM)
                              is enabled on the instance.
                            type: boolean
                          numaNodesPerSocket:
                            description: 'The number of NUMA nodes per socket (NPS).
                              The following values are supported: * `NPS1` * `NPS2`'
                            type: string
                          percentageOfCoresEnabled:
                            description: The percentage of cores enabled. Value must
                              be a multiple of 25%. If the requested percentage results
                              in a fractional number of cores, the system rounds up
                              the number of cores across processors and provisions
                              an instance with a whole number of cores. If the applications
                              that you run on the instance use a core-based licensing
                              model and need fewer cores than the full size of the
                              shape, you can disable cores to reduce your licensing
                              costs. The instance itself is billed for the full shape,
                              regardless of whether all cores are enabled.
                            type: integer
                        type: object
                      intelSkylakeBmPlatformConfig:
                        description: AmdMilanBmPlatformConfig describe Intel Skylke
                          BM platform configuration
                        properties:
                          isMeasuredBootEnabled:
                            description: Whether the Measured Boot feature is enabled
                              on the instance.
                            type: boolean
                          isMemoryEncryptionEnabled:
                            description: Whether the instance is a confidential instance.
                              If this value is `true`, the instance is a confidential
                              instance. The default value is `false`.
                            type: boolean
                          isSecureBootEnabled:
                            description: Whether Secure Boot is enabled on the instance.
                            type: boolean
                          isTrustedPlatformModuleEnabled:
                            description: Whether the Trusted Platform Module (TPM)
                              is enabled on the instance.
                            type: boolean
                        type: object
                      intelVmPlatformConfig:
                        description: AmdMilanBmPlatformConfig describe Intel VM platform
                          configuration
                        properties:
                          isMeasuredBootEnabled:
                            description: Whether the Measured Boot feature is enabled
                              on the instance.
                            type: boolean
                          isMemoryEncryptionEnabled:
                            description: Whether the instance is a confidential instance.
                              If this value is `true`, the instance is a confidential
                              instance. The default value is `false`.
                            type: boolean
                          isSecureBootEnabled:
                            description: Whether Secure Boot is enabled on the instance.
                            type: boolean
                          isTrustedPlatformModuleEnabled:
                            description: Whether the Trusted Platform Module (TPM)
                              is enabled on the instance.
                            type: boolean
                        type: object
                      platformConfigType:
                        description: The type of platform configuration. Valid values
                          are * `AMD_ROME_BM_GPU` * `AMD_ROME_BM` * `INTEL_ICELAKE_BM`
                          * `AMD_VM` * `INTEL_VM` * `INTEL_SKYLAKE_BM` * `AMD_MILAN_BM`
                          Based on the enum, exactly one of the specific configuration
                          types must be set
                        type: string
                    type: object
                  preemptibleInstanceConfig:
                    description: PreemptibleInstanceConfig Configuration options for
                      preemptible instances.
                    properties:
                      terminatePreemptionAction:
                        description: TerminatePreemptionAction terminates the preemptible
                          instance when it is interrupted for eviction.
                        properties:
                          preserveBootVolume:
                            description: PreserveBootVolume defines whether to preserve
                              the boot volume that was used to launch the preemptible
                              instance when the instance is terminated. Defaults to
                              false if not specified.
                            type: boolean
                        type: object
                    type: object
                  shape:
                    type: string
                  shapeConfig:
                    description: The shape configuration of the instance, applicable
                      for flex instances.
                    properties:
                      baselineOcpuUtilization:
                        description: 'The baseline OCPU utilization for a subcore
                          burstable VM instance. Leave this attribute blank for a
                          non-burstable instance, or explicitly specify non-burstable
                          with `BASELINE_1_1`. The following values are supported:
                          - `BASELINE_1_8` - baseline usage is 1/8 of an OCPU. - `BASELINE_1_2`
                          - baseline usage is 1/2 of an OCPU. - `BASELINE_1_1` - baseline
                          usage is an entire OCPU. This represents a non-burstable
                          instance.'
                        type: string
                      memoryInGBs:
                        description: The total amount of memory available to the instance,
                          in gigabytes.
                        type: string
                      nvmes:
                        description: Nvmes defines the number of NVMe drives to be
                          used for storage. A single drive has 6.8 TB available.
                        type: integer
                      ocpus:
                        description: The total number of OCPUs available to the instance.
                        type: string
                    type: object
                type: object
              ocid:
                description: OCID is the OCID of the associated InstancePool
                type: string
              placementDetails:
                description: PlacementDetails defines the placement details of the
                  instance pool.
                items:
                  properties:
                    availabilityDomain:
                      description: The availability domain to place instances.
                      type: integer
                  required:
                  - availabilityDomain
                  type: object
                type: array
              providerID:
                description: ProviderID is the OCID of the associated InstancePool
                  in a provider format
                type: string
              providerIDList:
                description: ProviderIDList are the identification IDs of machine
                  instances provided by the provider. This field must match the provider
                  IDs as seen on the node objects corresponding to a machine pool's
                  machine instances.
                items:
                  type: string
                type: array
            type: object
          status:
            description: OCIMachinePoolStatus defines the observed state of OCIMachinePool
            properties:
              conditions:
                description: Conditions defines current service state of the OCIMachinePool.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                type: string
              failureReason:
                description: MachineStatusError defines errors states for Machine
                  objects.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-oci-system/capoci-serving-cert
    controller-gen.kubebuilder.io/version: v0.10.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ocimachines.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: capoci-webhook-service
          namespace: cluster-api-provider-oci-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: OCIMachine
    listKind: OCIMachineList
    plural: ocimachines
    singular: ocimachine
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: OCIMachine is the Schema for the ocimachines API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIMachineSpec defines the desired state of OCIMachine Please
              read the API https://docs.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Instance/LaunchInstance
              for more information about the parameters below
            properties:
              agentConfig:
                description: AgentConfig defines the options for the Oracle Cloud
                  Agent software running on the instance.
                properties:
                  areAllPluginsDisabled:
                    description: AreAllPluginsDisabled defines whether Oracle Cloud
                      Agent can run all the available plugins. This includes the management
                      and monitoring plugins. To get a list of available plugins,
                      use the ListInstanceagentAvailablePlugins operation in the Oracle
                      Cloud Agent API. For more information about the available plugins,
                      see Managing Plugins with Oracle Cloud Agent (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
                    type: boolean
                  isManagementDisabled:
                    description: 'IsManagementDisabled defines whether Oracle Cloud
                      Agent can run all the available management plugins. Default
                      value is false (management plugins are enabled). These are the
                      management plugins: OS Management Service Agent and Compute
                      Instance Run Command. The management plugins are controlled
                      by this parameter and by the per-plugin configuration in the
                      `pluginsConfig` object. - If `isManagementDisabled` is true,
                      all of the management plugins are disabled, regardless of the
                      per-plugin configuration. - If `isManagementDisabled` is false,
                      all of the management plugins are enabled. You can optionally
                      disable individual management plugins by providing a value in
                      the `pluginsConfig` object.'
                    type: boolean
                  isMonitoringDisabled:
                    description: 'IsMonitoringDisabled defines whether Oracle Cloud
                      Agent can gather performance metrics and monitor the instance
                      using the monitoring plugins. Default value is false (monitoring
                      plugins are enabled). These are the monitoring plugins: Compute
                      Instance Monitoring and Custom Logs Monitoring. The monitoring
                      plugins are controlled by this parameter and by the per-plugin
                      configuration in the `pluginsConfig` object. - If `isMonitoringDisabled`
                      is true, all of the monitoring plugins are disabled, regardless
                      of the per-plugin configuration. - If `isMonitoringDisabled`
                      is false, all of the monitoring plugins are enabled. You can
                      optionally disable individual monitoring plugins by providing
                      a value in the `pluginsConfig` object.'
                    type: boolean
                  pluginsConfigs:
                    description: PluginsConfig defines the configuration of plugins
                      associated with this instance.
                    items:
                      description: InstanceAgentPluginConfig defines the configuration
                        of plugins associated with this instance.
                      properties:
                        desiredState:
                          description: 'DesiredState defines whether the plugin should
                            be enabled or disabled. To enable the monitoring and management
                            plugins, the `isMonitoringDisabled` and `isManagementDisabled`
                            attributes must also be set to false. The following values
                            are supported: * `ENABLED` * `DISABLED`'
                          type: string
                        name:
                          description: Name defines the name of the plugin. To get
                            a list of available plugins, use the ListInstanceagentAvailablePlugins
                            operation in the Oracle Cloud Agent API. For more information
                            about the available plugins, see Managing Plugins with
                            Oracle Cloud Agent (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
                          type: string
                      type: object
                    type: array
                type: object
              availabilityConfig:
                description: LaunchInstanceAvailabilityConfig defines the options
                  for VM migration during infrastructure maintenance events and for
                  defining the availability of a VM instance after a maintenance event
                  that impacts the underlying hardware.
                properties:
                  isLiveMigrationPreferred:
                    description: IsLiveMigrationPreferred defines whether to live
                      migrate supported VM instances to a healthy physical VM host
                      without disrupting running instances during infrastructure maintenance
                      events. If null, Oracle chooses the best option for migrating
                      the VM during infrastructure maintenance events.
                    type: boolean
                  recoveryAction:
                    description: RecoveryAction defines the lifecycle state for an
                      instance when it is recovered after infrastructure maintenance.
                      * `RESTORE_INSTANCE` - The instance is restored to the lifecycle
                      state it was in before the maintenance event. If the instance
                      was running, it is automatically rebooted. This is the default
                      action when a value is not set. * `STOP_INSTANCE` - The instance
                      is recovered in the stopped state.
                    type: string
                type: object
              bootVolumeSizeInGBs:
                description: The size of boot volume. Please see https://docs.oracle.com/en-us/iaas/Content/Block/Tasks/extendingbootpartition.htm
                  to extend the boot volume size.
                type: string
              capacityReservationId:
                description: CapacityReservationId defines the OCID of the compute
                  capacity reservation this instance is launched under. You can opt
                  out of all default reservations by specifying an empty string as
                  input for this field. For more information, see Capacity Reservations
                  (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm#default).
                type: string
              compartmentId:
                description: Compartment to launch the instance in.
                type: string
              dedicatedVmHostId:
                description: DedicatedVmHostId defines the OCID of the dedicated VM
                  host.
                type: string
              definedTags:
                additionalProperties:
                  additionalProperties:
                    type: string
                  type: object
                description: 'Defined tags for this resource. Each key is predefined
                  and scoped to a namespace. For more information, see Resource Tags
                  (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                  Example: `{"Operations": {"CostCenter": "42"}}`'
                type: object
              freeformTags:
                additionalProperties:
                  type: string
                description: Free-form tags for this resource.
                type: object
              imageId:
                description: OCID of the image to be used to launch the instance.
                type: string
              instanceId:
                description: OCID of launched compute instance.
                type: string
              instanceOptions:
                description: InstanceOptions defines the instance options
                properties:
                  areLegacyImdsEndpointsDisabled:
                    description: Whether to disable the legacy (/v1) instance metadata
                      service endpoints. Customers who have migrated to /v2 should
                      set this to true for added security. Default is false.
                    type: boolean
                type: object
              instanceSourceViaImageConfig:
                description: InstanceSourceViaImageConfig defines the options for
                  booting up instances via images
                properties:
                  bootVolumeVpusPerGB:
                    description: 'BootVolumeVpusPerGB defines the number of volume
                      performance units (VPUs) that will be applied to this volume
                      per GB, representing the Block Volume service''s elastic performance
                      options. See Block Volume Performance Levels (https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels)
                      for more information. Allowed values: * `10`: Represents Balanced
                      option. * `20`: Represents Higher Performance option. * `30`-`120`:
                      Represents the Ultra High Performance option. For volumes with
                      the auto-tuned performance feature enabled, this is set to the
                      default (minimum) VPUs/GB.'
                    format: int64
                    type: integer
                  kmsKeyId:
                    description: KmsKeyId defines the OCID of the Key Management key
                      to assign as the master encryption key for the boot volume.
                    type: string
                type: object
              ipxeScript:
                type: string
              isPvEncryptionInTransitEnabled:
                description: Is in transit encryption of volumes required.
                type: boolean
              launchOptions:
                description: LaunchOptions defines the options for tuning the compatibility
                  and performance of VM shapes
                properties:
                  bootVolumeType:
                    description: BootVolumeType defines Emulation type for the boot
                      volume. * `ISCSI` - ISCSI attached block storage device. * `SCSI`
                      - Emulated SCSI disk. * `IDE` - Emulated IDE disk. * `VFIO`
                      - Direct attached Virtual Function storage. This is the default
                      option for local data volumes on platform images. * `PARAVIRTUALIZED`
                      - Paravirtualized disk. This is the default for boot volumes
                      and remote block storage volumes on platform images.
                    type: string
                  firmware:
                    description: Firmware defines the firmware used to boot VM. Select
                      the option that matches your operating system. * `BIOS` - Boot
                      VM using BIOS style firmware. This is compatible with both 32
                      bit and 64 bit operating systems that boot using MBR style bootloaders.
                      * `UEFI_64` - Boot VM using UEFI style firmware compatible with
                      64 bit operating systems. This is the default for platform images.
                    type: string
                  isConsistentVolumeNamingEnabled:
                    description: IsConsistentVolumeNamingEnabled defines whether to
                      enable consistent volume naming feature. Defaults to false.
                    type: boolean
                  networkType:
                    description: NetworkType defines the emulation type for the physical
                      network interface card (NIC). * `E1000` - Emulated Gigabit ethernet
                      controller. Compatible with Linux e1000 network driver. * `VFIO`
                      - Direct attached Virtual Function network controller. This
                      is the networking type when you launch an instance using hardware-assisted
                      (SR-IOV) networking. * `PARAVIRTUALIZED` - VM instances launch
                      with paravirtualized devices using VirtIO drivers.
                    type: string
                  remoteDataVolumeType:
                    description: RemoteDataVolumeType defines the emulation type for
                      volume. * `ISCSI` - ISCSI attached block storage device. * `SCSI`
                      - Emulated SCSI disk. * `IDE` - Emulated IDE disk. * `VFIO`
                      - Direct attached Virtual Function storage. This is the default
                      option for local data volumes on platform images. * `PARAVIRTUALIZED`
                      - Paravirtualized disk. This is the default for boot volumes
                      and remote block storage volumes on platform images.
                    type: string
                type: object
              metadata:
                additionalProperties:
                  type: string
                description: Custom metadata key/value pairs that you provide, such
                  as the SSH public key required to connect to the instance.
                type: object
              networkDetails:
                description: NetworkDetails defines the configuration options for
                  the network
                properties:
                  assignPrivateDnsRecord:
                    description: AssignPrivateDnsRecord defines whether the VNIC should
                      be assigned a DNS record.
                    type: boolean
                  assignPublicIp:
                    description: AssignPublicIp defines whether the instance should
                      have a public IP address
                    type: boolean
                  displayName:
                    description: DisplayName defines a user-friendly name. Does not
                      have to be unique, and it's changeable. Avoid entering confidential
                      information.
                    type: string
                  hostnameLabel:
                    description: HostnameLabel defines the hostname for the VNIC's
                      primary private IP. Used for DNS.
                    type: string
                  nsgId:
                    description: "Deprecated, use \tNsgNames parameter to define the
                      NSGs"
                    type: string
                  nsgNames:
                    description: NsgNames defines a list of the nsg names of the network
                      security groups (NSGs) to add the VNIC to.
                    items:
                      type: string
                    type: array
                  skipSourceDestCheck:
                    description: SkipSourceDestCheck defines whether the source/destination
                      check is disabled on the VNIC.
                    type: boolean
                  subnetId:
                    description: SubnetId defines the ID of the subnet to use. Deprecated,
                      use SubnetName parameter
                    type: string
                  subnetName:
                    description: SubnetName defines the subnet name to use for the
                      VNIC
                    type: string
                type: object
              nsgName:
                description: The name of NSG to use. The name here refers to the NSGs
                  defined in the OCICluster Spec. Optional, only if multiple NSGs
                  of a type is defined, else the first element is used. Deprecated,
                  please use NetworkDetails.NSGNames
                type: string
              platformConfig:
                description: PlatformConfig defines the platform config parameters
                properties:
                  amdMilanBmPlatformConfig:
                    description: AmdMilanBmPlatformConfig describe AMD Milan BM platform
                      configuration
                    properties:
                      areVirtualInstructionsEnabled:
                        description: Whether virtualization instructions are available.
                          For example, Secure Virtual Machine for AMD shapes or VT-x
                          for Intel shapes.
                        type: boolean
                      isAccessControlServiceEnabled:
                        description: Whether the Access Control Service is enabled
                          on the instance. When enabled, the platform can enforce
                          PCIe device isolation, required for VFIO device pass-through.
                        type: boolean
                      isInputOutputMemoryManagementUnitEnabled:
                        description: Whether the input-output memory management unit
                          is enabled.
                        type: boolean
                      isMeasuredBootEnabled:
                        description: Whether the Measured Boot feature is enabled
                          on the instance.
                        type: boolean
                      isMemoryEncryptionEnabled:
                        description: Whether the instance is a confidential instance.
                          If this value is `true`, the instance is a confidential
                          instance. The default value is `false`.
                        type: boolean
                      isSecureBootEnabled:
                        description: Whether Secure Boot is enabled on the instance.
                        type: boolean
                      isSymmetricMultiThreadingEnabled:
                        description: Whether symmetric multithreading is enabled on
                          the instance. Symmetric multithreading is also called simultaneous
                          multithreading (SMT) or Intel Hyper-Threading. Intel and
                          AMD processors have two hardware execution threads per core
                          (OCPU). SMT permits multiple independent threads of execution,
                          to better use the resources and increase the efficiency
                          of the CPU. When multithreading is disabled, only one thread
                          is permitted to run on each core, which can provide higher
                          or more predictable performance for some workloads.
                        type: boolean
                      isTrustedPlatformModuleEnabled:
                        description: Whether the Trusted Platform Module (TPM) is
                          enabled on the instance.
                        type: boolean
                      numaNodesPerSocket:
                        description: 'The number of NUMA nodes per socket (NPS). The
                          following values are supported: * `NPS0` * `NPS1` * `NPS2`
                          * `NPS4`'
                        type: string
                      percentageOfCoresEnabled:
                        description: The percentage of cores enabled. Value must be
                          a multiple of 25%. If the requested percentage results in
                          a fractional number of cores, the system rounds up the number
                          of cores across processors and provisions an instance with
                          a whole number of cores. If the applications that you run
                          on the instance use a core-based licensing model and need
                          fewer cores than the full size of the shape, you can disable
                          cores to reduce your licensing costs. The instance itself
                          is billed for the full shape, regardless of whether all
                          cores are enabled.
                        type: integer
                    type: object
                  amdRomeBmGpuPlatformConfig:
                    description: AmdMilanBmPlatformConfig describe AMD Rome BM platform
                      configuration
                    properties:
                      areVirtualInstructionsEnabled:
                        description: Whether virtualization instructions are available.
                          For example, Secure Virtual Machine for AMD shapes or VT-x
                          for Intel shapes.
                        type: boolean
                      isAccessControlServiceEnabled:
                        description: Whether the Access Control Service is enabled
                          on the instance. When enabled, the platform can enforce
                          PCIe device isolation, required for VFIO device pass-through.
                        type: boolean
                      isInputOutputMemoryManagementUnitEnabled:
                        description: Whether the input-output memory management unit
                          is enabled.
                        type: boolean
                      isMeasuredBootEnabled:
                        description: Whether the Measured Boot feature is enabled
                          on the instance.
                        type: boolean
                      isMemoryEncryptionEnabled:
                        description: Whether the instance is a confidential instance.
                          If this value is `true`, the instance is a confidential
                          instance. The default value is `false`.
                        type: boolean
                      isSecureBootEnabled:
                        description: Whether Secure Boot is enabled on the instance.
                        type: boolean
                      isSymmetricMultiThreadingEnabled:
                        description: Whether symmetric multithreading is enabled on
                          the instance. Symmetric multithreading is also called simultaneous
                          multithreading (SMT) or Intel Hyper-Threading. Intel and
                          AMD processors have two hardware execution threads per core
                          (OCPU). SMT permits multiple independent threads of execution,
                          to better use the resources and increase the efficiency
                          of the CPU. When multithreading is disabled, only one thread
                          is permitted to run on each core, which can provide higher
                          or more predictable performance for some workloads.
                        type: boolean
                      isTrustedPlatformModuleEnabled:
                        description: Whether the Trusted Platform Module (TPM) is
                          enabled on the instance.
                        type: boolean
                      numaNodesPerSocket:
                        description: 'The number of NUMA nodes per socket (NPS). The
                          following values are supported: * `NPS0` * `NPS1` * `NPS2`
                          * `NPS4`'
                        type: string
                    type: object
                  amdRomeBmPlatformConfig:
                    description: AmdMilanBmPlatformConfig describe AMD Rome BM platform
                      configuration
                    properties:
                      areVirtualInstructionsEnabled:
                        description: Whether virtualization instructions are available.
                          For example, Secure Virtual Machine for AMD shapes or VT-x
                          for Intel shapes.
                        type: boolean
                      isAccessControlServiceEnabled:
                        description: Whether the Access Control Service is enabled
                          on the instance. When enabled, the platform can enforce
                          PCIe device isolation, required for VFIO device pass-through.
                        type: boolean
                      isInputOutputMemoryManagementUnitEnabled:
                        description: Whether the input-output memory management unit
                          is enabled.
                        type: boolean
                      isMeasuredBootEnabled:
                        description: Whether the Measured Boot feature is enabled
                          on the instance.
                        type: boolean
                      isMemoryEncryptionEnabled:
                        description: Whether the instance is a confidential instance.
                          If this value is `true`, the instance is a confidential
                          instance. The default value is `false`.
                        type: boolean
                      isSecureBootEnabled:
                        description: Whether Secure Boot is enabled on the instance.
                        type: boolean
                      isSymmetricMultiThreadingEnabled:
                        description: Whether symmetric multithreading is enabled on
                          the instance. Symmetric multithreading is also called simultaneous
                          multithreading (SMT) or Intel Hyper-Threading. Intel and
                          AMD processors have two hardware execution threads per core
                          (OCPU). SMT permits multiple independent threads of execution,
                          to better use the resources and increase the efficiency
                          of the CPU. When multithreading is disabled, only one thread
                          is permitted to run on each core, which can provide higher
                          or more predictable performance for some workloads.
                        type: boolean
                      isTrustedPlatformModuleEnabled:
                        description: Whether the Trusted Platform Module (TPM) is
                          enabled on the instance.
                        type: boolean
                      numaNodesPerSocket:
                        description: 'The number of NUMA nodes per socket (NPS). The
                          following values are supported: * `NPS0` * `NPS1` * `NPS2`
                          * `NPS4`'
                        type: string
                      percentageOfCoresEnabled:
                        description: The percentage of cores enabled. Value must be
                          a multiple of 25%. If the requested percentage results in
                          a fractional number of cores, the system rounds up the number
                          of cores across processors and provisions an instance with
                          a whole number of cores. If the applications that you run
                          on the instance use a core-based licensing model and need
                          fewer cores than the full size of the shape, you can disable
                          cores to reduce your licensing costs. The instance itself
                          is billed for the full shape, regardless of whether all
                          cores are enabled.
                        type: integer
                    type: object
                  amdVmPlatformConfig:
                    description: AmdMilanBmPlatformConfig describe AMD VM platform
                      configuration
                    properties:
                      isMeasuredBootEnabled:
                        description: Whether the Measured Boot feature is enabled
                          on the instance.
                        type: boolean
                      isMemoryEncryptionEnabled:
                        description: Whether the instance is a confidential instance.
                          If this value is `true`, the instance is a confidential
                          instance. The default value is `false`.
                        type: boolean
                      isSecureBootEnabled:
                        description: Whether Secure Boot is enabled on the instance.
                        type: boolean
                      isTrustedPlatformModuleEnabled:
                        description: Whether the Trusted Platform Module (TPM) is
                          enabled on the instance.
                        type: boolean
                    type: object
                  intelIcelakeBmPlatformConfig:
                    description: AmdMilanBmPlatformConfig describe Intel Skylke BM
                      platform configuration
                    properties:
                      isInputOutputMemoryManagementUnitEnabled:
                        description: Whether the input-output memory management unit
                          is enabled.
                        type: boolean
                      isMeasuredBootEnabled:
                        description: Whether the Measured Boot feature is enabled
                          on the instance.
                        type: boolean
                      isMemoryEncryptionEnabled:
                        description: Whether the instance is a confidential instance.
                          If this value is `true`, the instance is a confidential
                          instance. The default value is `false`.
                        type: boolean
                      isSecureBootEnabled:
                        description: Whether Secure Boot is enabled on the instance.
                        type: boolean
                      isSymmetricMultiThreadingEnabled:
                        description: Whether symmetric multithreading is enabled on
                          the instance. Symmetric multithreading is also called simultaneous
                          multithreading (SMT) or Intel Hyper-Threading. Intel and
                          AMD processors have two hardware execution threads per core
                          (OCPU). SMT permits multiple independent threads of execution,
                          to better use the resources and increase the efficiency
                          of the CPU. When multithreading is disabled, only one thread
                          is permitted to run on each core, which can provide higher
                          or more predictable performance for some workloads.
                        type: boolean
                      isTrustedPlatformModuleEnabled:
                        description: Whether the Trusted Platform Module (TPM) is
                          enabled on the instance.
                        type: boolean
                      numaNodesPerSocket:
                        description: 'The number of NUMA nodes per socket (NPS). The
                          following values are supported: * `NPS1` * `NPS2`'
                        type: string
                      percentageOfCoresEnabled:
                        description: The percentage of cores enabled. Value must be
                          a multiple of 25%. If the requested percentage results in
                          a fractional number of cores, the system rounds up the number
                          of cores across processors and provisions an instance with
                          a whole number of cores. If the applications that you run
                          on the instance use a core-based licensing model and need
                          fewer cores than the full size of the shape, you can disable
                          cores to reduce your licensing costs. The instance itself
                          is billed for the full shape, regardless of whether all
                          cores are enabled.
                        type: integer
                    type: object
                  intelSkylakeBmPlatformConfig:
                    description: AmdMilanBmPlatformConfig describe Intel Skylke BM
                      platform configuration
                    properties:
                      isMeasuredBootEnabled:
                        description: Whether the Measured Boot feature is enabled
                          on the instance.
                        type: boolean
                      isMemoryEncryptionEnabled:
                        description: Whether the instance is a confidential instance.
                          If this value is `true`, the instance is a confidential
                          instance. The default value is `false`.
                        type: boolean
                      isSecureBootEnabled:
                        description: Whether Secure Boot is enabled on the instance.
                        type: boolean
                      isTrustedPlatformModuleEnabled:
                        description: Whether the Trusted Platform Module (TPM) is
                          enabled on the instance.
                        type: boolean
                    type: object
                  intelVmPlatformConfig:
                    description: AmdMilanBmPlatformConfig describe Intel VM platform
                      configuration
                    properties:
                      isMeasuredBootEnabled:
                        description: Whether the Measured Boot feature is enabled
                          on the instance.
                        type: boolean
                      isMemoryEncryptionEnabled:
                        description: Whether the instance is a confidential instance.
                          If this value is `true`, the instance is a confidential
                          instance. The default value is `false`.
                        type: boolean
                      isSecureBootEnabled:
                        description: Whether Secure Boot is enabled on the instance.
                        type: boolean
                      isTrustedPlatformModuleEnabled:
                        description: Whether the Trusted Platform Module (TPM) is
                          enabled on the instance.
                        type: boolean
                    type: object
                  platformConfigType:
                    description: The type of platform configuration. Valid values
                      are * `AMD_ROME_BM_GPU` * `AMD_ROME_BM` * `INTEL_ICELAKE_BM`
                      * `AMD_VM` * `INTEL_VM` * `INTEL_SKYLAKE_BM` * `AMD_MILAN_BM`
                      Based on the enum, exactly one of the specific configuration
                      types must be set
                    type: string
                type: object
              preemptibleInstanceConfig:
                description: PreemptibleInstanceConfig Configuration options for preemptible
                  instances.
                properties:
                  terminatePreemptionAction:
                    description: TerminatePreemptionAction terminates the preemptible
                      instance when it is interrupted for eviction.
                    properties:
                      preserveBootVolume:
                        description: PreserveBootVolume defines whether to preserve
                          the boot volume that was used to launch the preemptible
                          instance when the instance is terminated. Defaults to false
                          if not specified.
                        type: boolean
                    type: object
                type: object
              providerID:
                description: Provider ID of the instance, this will be set by Cluster
                  API provider itself, users should not set this parameter.
                type: string
              shape:
                description: Shape of the instance.
                type: string
              shapeConfig:
                description: The shape configuration of rhe instance, applicable for
                  flex instances.
                properties:
                  baselineOcpuUtilization:
                    description: 'The baseline OCPU utilization for a subcore burstable
                      VM instance. Leave this attribute blank for a non-burstable
                      instance, or explicitly specify non-burstable with `BASELINE_1_1`.
                      The following values are supported: - `BASELINE_1_8` - baseline
                      usage is 1/8 of an OCPU. - `BASELINE_1_2` - baseline usage is
                      1/2 of an OCPU. - `BASELINE_1_1` - baseline usage is an entire
                      OCPU. This represents a non-burstable instance.'
                    type: string
                  memoryInGBs:
                    description: The total amount of memory available to the instance,
                      in gigabytes.
                    type: string
                  nvmes:
                    description: Nvmes defines the number of NVMe drives to be used
                      for storage. A single drive has 6.8 TB available.
                    type: integer
                  ocpus:
                    description: The total number of OCPUs available to the instance.
                    type: string
                type: object
              subnetName:
                description: The name of the subnet to use. The name here refers to
                  the subnets defined in the OCICluster Spec. Optional, only if multiple
                  subnets of a type is defined, else the first element is used.
                type: string
              vnicAttachments:
                description: VnicAttachments defines the configuration options for
                  the vnic(s) attached to the machine The network bandwidth and number
                  of VNICs scale proportionately with the number of OCPUs.
                items:
                  properties:
                    assignPublicIp:
                      description: AssignPublicIp defines whether the vnic should
                        have a public IP address
                      type: boolean
                    displayName:
                      description: DisplayName defines a user-friendly name. Does
                        not have to be unique. Avoid entering confidential information.
                      type: string
                    nicIndex:
                      description: NicIndex defines which physical Network Interface
                        Card (NIC) to use You can determine which NICs are active
                        for a shape by reviewing the https://docs.oracle.com/en-us/iaas/Content/Compute/References/computeshapes.htm
                      type: integer
                    subnetName:
                      description: SubnetName defines the subnet name to use for the
                        VNIC Defaults to the "worker" subnet if not provided
                      type: string
                    vnicAttachmentId:
                      description: VnicAttachmentId defines the ID of the VnicAttachment
                      type: string
                  required:
                  - displayName
                  type: object
                type: array
            type: object
          status:
            description: OCIMachineStatus defines the observed state of OCIMachine.
            properties:
              addresses:
                description: Addresses contains the addresses of the associated OCI
                  instance.
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP,
                        InternalIP, ExternalDNS or InternalDNS.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the OCIMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              createBackendWorkRequestId:
                description: Create Backend OPC work request ID for the machine backend.
                type: string
              deleteBackendWorkRequestId:
                description: Delete Backend OPC work request ID for the machine backend.
                type: string
              failureMessage:
                description: The error message corresponding to the error on the machine.
                type: string
              failureReason:
                description: Error status on the machine.
                type: string
              launchInstanceWorkRequestId:
                description: Launch instance work request ID.
                type: string
              ready:
                description: Flag set to true when machine is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: OCIMachine is the Schema for the ocimachines API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIMachineSpec defines the desired state of OCIMachine Please
              read the API https://docs.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Instance/LaunchInstance
              for more information about the parameters below
            properties:
              agentConfig:
                description: AgentConfig defines the options for the Oracle Cloud
                  Agent software running on the instance.
                properties:
                  areAllPluginsDisabled:
                    description: AreAllPluginsDisabled defines whether Oracle Cloud
                      Agent can run all the available plugins. This includes the management
                      and monitoring plugins. To get a list of available plugins,
                      use the ListInstanceagentAvailablePlugins operation in the Oracle
                      Cloud Agent API. For more information about the available plugins,
                      see Managing Plugins with Oracle Cloud Agent (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
                    type: boolean
                  isManagementDisabled:
                    description: 'IsManagementDisabled defines whether Oracle Cloud
                      Agent can run all the available management plugins. Default
                      value is false (management plugins are enabled). These are the
                      management plugins: OS Management Service Agent and Compute
                      Instance Run Command. The management plugins are controlled
                      by this parameter and by the per-plugin configuration in the
                      `pluginsConfig` object. - If `isManagementDisabled` is true,
                      all of the management plugins are disabled, regardless of the
                      per-plugin configuration. - If `isManagementDisabled` is false,
                      all of the management plugins are enabled. You can optionally
                      disable individual management plugins by providing a value in
                      the `pluginsConfig` object.'
                    type: boolean
                  isMonitoringDisabled:
                    description: 'IsMonitoringDisabled defines whether Oracle Cloud
                      Agent can gather performance metrics and monitor the instance
                      using the monitoring plugins. Default value is false (monitoring
                      plugins are enabled). These are the monitoring plugins: Compute
                      Instance Monitoring and Custom Logs Monitoring. The monitoring
                      plugins are controlled by this parameter and by the per-plugin
                      configuration in the `pluginsConfig` object. - If `isMonitoringDisabled`
                      is true, all of the monitoring plugins are disabled, regardless
                      of the per-plugin configuration. - If `isMonitoringDisabled`
                      is false, all of the monitoring plugins are enabled. You can
                      optionally disable individual monitoring plugins by providing
                      a value in the `pluginsConfig` object.'
                    type: boolean
                  pluginsConfigs:
                    description: PluginsConfig defines the configuration of plugins
                      associated with this instance.
                    items:
                      description: InstanceAgentPluginConfig defines the configuration
                        of plugins associated with this instance.
                      properties:
                        desiredState:
                          description: 'DesiredState defines whether the plugin should
                            be enabled or disabled. To enable the monitoring and management
                            plugins, the `isMonitoringDisabled` and `isManagementDisabled`
                            attributes must also be set to false. The following values
                            are supported: * `ENABLED` * `DISABLED`'
                          type: string
                        name:
                          description: Name defines the name of the plugin. To get
                            a list of available plugins, use the ListInstanceagentAvailablePlugins
                            operation in the Oracle Cloud Agent API. For more information
                            about the available plugins, see Managing Plugins with
                            Oracle Cloud Agent (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
                          type: string
                      type: object
                    type: array
                type: object
              availabilityConfig:
                description: LaunchInstanceAvailabilityConfig defines the options
                  for VM migration during infrastructure maintenance events and for
                  defining the availability of a VM instance after a maintenance event
                  that impacts the underlying hardware.
                properties:
                  isLiveMigrationPreferred:
                    description: IsLiveMigrationPreferred defines whether to live
                      migrate supported VM instances to a healthy physical VM host
                      without disrupting running instances during infrastructure maintenance
                      events. If null, Oracle chooses the best option for migrating
                      the VM during infrastructure maintenance events.
                    type: boolean
                  recoveryAction:
                    description: RecoveryAction defines the lifecycle state for an
                      instance when it is recovered after infrastructure maintenance.
                      * `RESTORE_INSTANCE` - The instance is restored to the lifecycle
                      state it was in before the maintenance event. If the instance
                      was running, it is automatically rebooted. This is the default
                      action when a value is not set. * `STOP_INSTANCE` - The instance
                      is recovered in the stopped state.
                    type: string
                type: object
              bootVolumeSizeInGBs:
                description: The size of boot volume. Please see https://docs.oracle.com/en-us/iaas/Content/Block/Tasks/extendingbootpartition.htm
                  to extend the boot volume size.
                type: string
              capacityReservationId:
                description: CapacityReservationId defines the OCID of the compute
                  capacity reservation this instance is launched under. You can opt
                  out of all default reservations by specifying an empty string as
                  input for this field. For more information, see Capacity Reservations
                  (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm#default).
                type: string
              compartmentId:
                description: Compartment to launch the instance in.
                type: string
              dedicatedVmHostId:
                description: DedicatedVmHostId defines the OCID of the dedicated VM
                  host.
                type: string
              definedTags:
                additionalProperties:
                  additionalProperties:
                    type: string
                  type: object
                description: 'Defined tags for this resource. Each key is predefined
                  and scoped to a namespace. For more information, see Resource Tags
                  (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                  Example: `{"Operations": {"CostCenter": "42"}}`'
                type: object
              freeformTags:
                additionalProperties:
                  type: string
                description: Free-form tags for this resource.
                type: object
              imageId:
                description: OCID of the image to be used to launch the instance.
                type: string
              instanceId:
                description: OCID of launched compute instance.
                type: string
              instanceOptions:
                description: InstanceOptions defines the instance options
                properties:
                  areLegacyImdsEndpointsDisabled:
                    description: Whether to disable the legacy (/v1) instance metadata
                      service endpoints. Customers who have migrated to /v2 should
                      set this to true for added security. Default is false.
                    type: boolean
                type: object
              instanceSourceViaImageConfig:
                description: InstanceSourceViaImageConfig defines the options for
                  booting up instances via images
                properties:
                  bootVolumeVpusPerGB:
                    description: 'BootVolumeVpusPerGB defines the number of volume
                      performance units (VPUs) that will be applied to this volume
                      per GB, representing the Block Volume service''s elastic performance
                      options. See Block Volume Performance Levels (https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels)
                      for more information. Allowed values: * `10`: Represents Balanced
                      option. * `20`: Represents Higher Performance option. * `30`-`120`:
                      Represents the Ultra High Performance option. For volumes with
                      the auto-tuned performance feature enabled, this is set to the
                      default (minimum) VPUs/GB.'
                    format: int64
                    type: integer
                  kmsKeyId:
                    description: KmsKeyId defines the OCID of the Key Management key
                      to assign as the master encryption key for the boot volume.
                    type: string
                type: object
              ipxeScript:
                type: string
              isPvEncryptionInTransitEnabled:
                description: Is in transit encryption of volumes required.
                type: boolean
              launchOptions:
                description: LaunchOptions defines the options for tuning the compatibility
                  and performance of VM shapes
                properties:
                  bootVolumeType:
                    description: BootVolumeType defines Emulation type for the boot
                      volume. * `ISCSI` - ISCSI attached block storage device. * `SCSI`
                      - Emulated SCSI disk. * `IDE` - Emulated IDE disk. * `VFIO`
                      - Direct attached Virtual Function storage. This is the default
                      option for local data volumes on platform images. * `PARAVIRTUALIZED`
                      - Paravirtualized disk. This is the default for boot volumes
                      and remote block storage volumes on platform images.
                    type: string
                  firmware:
                    description: Firmware defines the firmware used to boot VM. Select
                      the option that matches your operating system. * `BIOS` - Boot
                      VM using BIOS style firmware. This is compatible with both 32
                      bit and 64 bit operating systems that boot using MBR style bootloaders.
                      * `UEFI_64` - Boot VM using UEFI style firmware compatible with
                      64 bit operating systems. This is the default for platform images.
                    type: string
                  isConsistentVolumeNamingEnabled:
                    description: IsConsistentVolumeNamingEnabled defines whether to
                      enable consistent volume naming feature. Defaults to false.
                    type: boolean
                  networkType:
                    description: NetworkType defines the emulation type for the physical
                      network interface card (NIC). * `E1000` - Emulated Gigabit ethernet
                      controller. Compatible with Linux e1000 network driver. * `VFIO`
                      - Direct attached Virtual Function network controller. This
                      is the networking type when you launch an instance using hardware-assisted
                      (SR-IOV) networking. * `PARAVIRTUALIZED` - VM instances launch
                      with paravirtualized devices using VirtIO drivers.
                    type: string
                  remoteDataVolumeType:
                    description: RemoteDataVolumeType defines the emulation type for
                      volume. * `ISCSI` - ISCSI attached block storage device. * `SCSI`
                      - Emulated SCSI disk. * `IDE` - Emulated IDE disk. * `VFIO`
                      - Direct attached Virtual Function storage. This is the default
                      option for local data volumes on platform images. * `PARAVIRTUALIZED`
                      - Paravirtualized disk. This is the default for boot volumes
                      and remote block storage volumes on platform images.
                    type: string
                type: object
              metadata:
                additionalProperties:
                  type: string
                description: Custom metadata key/value pairs that you provide, such
                  as the SSH public key required to connect to the instance.
                type: object
              networkDetails:
                description: NetworkDetails defines the configuration options for
                  the network
                properties:
                  assignPrivateDnsRecord:
                    description: AssignPrivateDnsRecord defines whether the VNIC should
                      be assigned a DNS record.
                    type: boolean
                  assignPublicIp:
                    description: AssignPublicIp defines whether the instance should
                      have a public IP address
                    type: boolean
                  displayName:
                    description: DisplayName defines a user-friendly name. Does not
                      have to be unique, and it's changeable. Avoid entering confidential
                      information.
                    type: string
                  hostnameLabel:
                    description: HostnameLabel defines the hostname for the VNIC's
                      primary private IP. Used for DNS.
                    type: string
                  nsgNames:
                    description: NsgNames defines a list of the nsg names of the network
                      security groups (NSGs) to add the VNIC to.
                    items:
                      type: string
                    type: array
                  skipSourceDestCheck:
                    description: SkipSourceDestCheck defines whether the source/destination
                      check is disabled on the VNIC.
                    type: boolean
                  subnetName:
                    description: SubnetName defines the subnet name to use for the
                      VNIC
                    type: string
                type: object
              platformConfig:
                description: PlatformConfig defines the platform config parameters
                properties:
                  amdMilanBmPlatformConfig:
                    description: AmdMilanBmPlatformConfig describe AMD Milan BM platform
                      configuration
                    properties:
                      areVirtualInstructionsEnabled:
                        description: Whether virtualization instructions are available.
                          For example, Secure Virtual Machine for AMD shapes or VT-x
                          for Intel shapes.
                        type: boolean
                      isAccessControlServiceEnabled:
                        description: Whether the Access Control Service is enabled
                          on the instance. When enabled, the platform can enforce
                          PCIe device isolation, required for VFIO device pass-through.
                        type: boolean
                      isInputOutputMemoryManagementUnitEnabled:
                        description: Whether the input-output memory management unit
                          is enabled.
                        type: boolean
                      isMeasuredBootEnabled:
                        description: Whether the Measured Boot feature is enabled
                          on the instance.
                        type: boolean
                      isMemoryEncryptionEnabled:
                        description: Whether the instance is a confidential instance.
                          If this value is `true`, the instance is a confidential
                          instance. The default value is `false`.
                        type: boolean
                      isSecureBootEnabled:
                        description: Whether Secure Boot is enabled on the instance.
                        type: boolean
                      isSymmetricMultiThreadingEnabled:
                        description: Whether symmetric multithreading is enabled on
                          the instance. Symmetric multithreading is also called simultaneous
                          multithreading (SMT) or Intel Hyper-Threading. Intel and
                          AMD processors have two hardware execution threads per core
                          (OCPU). SMT permits multiple independent threads of execution,
                          to better use the resources and increase the efficiency
                          of the CPU. When multithreading is disabled, only one thread
                          is permitted to run on each core, which can provide higher
                          or more predictable performance for some workloads.
                        type: boolean
                      isTrustedPlatformModuleEnabled:
                        description: Whether the Trusted Platform Module (TPM) is
                          enabled on the instance.
                        type: boolean
                      numaNodesPerSocket:
                        description: 'The number of NUMA nodes per socket (NPS). The
                          following values are supported: * `NPS0` * `NPS1` * `NPS2`
                          * `NPS4`'
                        type: string
                      percentageOfCoresEnabled:
                        description: The percentage of cores enabled. Value must be
                          a multiple of 25%. If the requested percentage results in
                          a fractional number of cores, the system rounds up the number
                          of cores across processors and provisions an instance with
                          a whole number of cores. If the applications that you run
                          on the instance use a core-based licensing model and need
                          fewer cores than the full size of the shape, you can disable
                          cores to reduce your licensing costs. The instance itself
                          is billed for the full shape, regardless of whether all
                          cores are enabled.
                        type: integer
                    type: object
                  amdRomeBmGpuPlatformConfig:
                    description: AmdMilanBmPlatformConfig describe AMD Rome BM platform
                      configuration
                    properties:
                      areVirtualInstructionsEnabled:
                        description: Whether virtualization instructions are available.
                          For example, Secure Virtual Machine for AMD shapes or VT-x
                          for Intel shapes.
                        type: boolean
                      isAccessControlServiceEnabled:
                        description: Whether the Access Control Service is enabled
                          on the instance. When enabled, the platform can enforce
                          PCIe device isolation, required for VFIO device pass-through.
                        type: boolean
                      isInputOutputMemoryManagementUnitEnabled:
                        description: Whether the input-output memory management unit
                          is enabled.
                        type: boolean
                      isMeasuredBootEnabled:
                        description: Whether the Measured Boot feature is enabled
                          on the instance.
                        type: boolean
                      isMemoryEncryptionEnabled:
                        description: Whether the instance is a confidential instance.
                          If this value is `true`, the instance is a confidential
                          instance. The default value is `false`.
                        type: boolean
                      isSecureBootEnabled:
                        description: Whether Secure Boot is enabled on the instance.
                        type: boolean
                      isSymmetricMultiThreadingEnabled:
                        description: Whether symmetric multithreading is enabled on
                          the instance. Symmetric multithreading is also called simultaneous
                          multithreading (SMT) or Intel Hyper-Threading. Intel and
                          AMD processors have two hardware execution threads per core
                          (OCPU). SMT permits multiple independent threads of execution,
                          to better use the resources and increase the efficiency
                          of the CPU. When multithreading is disabled, only one thread
                          is permitted to run on each core, which can provide higher
                          or more predictable performance for some workloads.
                        type: boolean
                      isTrustedPlatformModuleEnabled:
                        description: Whether the Trusted Platform Module (TPM) is
                          enabled on the instance.
                        type: boolean
                      numaNodesPerSocket:
                        description: 'The number of NUMA nodes per socket (NPS). The
                          following values are supported: * `NPS0` * `NPS1` * `NPS2`
                          * `NPS4`'
                        type: string
                    type: object
                  amdRomeBmPlatformConfig:
                    description: AmdMilanBmPlatformConfig describe AMD Rome BM platform
                      configuration
                    properties:
                      areVirtualInstructionsEnabled:
                        description: Whether virtualization instructions are available.
                          For example, Secure Virtual Machine for AMD shapes or VT-x
                          for Intel shapes.
                        type: boolean
                      isAccessControlServiceEnabled:
                        description: Whether the Access Control Service is enabled
                          on the instance. When enabled, the platform can enforce
                          PCIe device isolation, required for VFIO device pass-through.
                        type: boolean
                      isInputOutputMemoryManagementUnitEnabled:
                        description: Whether the input-output memory management unit
                          is enabled.
                        type: boolean
                      isMeasuredBootEnabled:
                        description: Whether the Measured Boot feature is enabled
                          on the instance.
                        type: boolean
                      isMemoryEncryptionEnabled:
                        description: Whether the instance is a confidential instance.
                          If this value is `true`, the instance is a confidential
                          instance. The default value is `false`.
                        type: boolean
                      isSecureBootEnabled:
                        description: Whether Secure Boot is enabled on the instance.
                        type: boolean
                      isSymmetricMultiThreadingEnabled:
                        description: Whether symmetric multithreading is enabled on
                          the instance. Symmetric multithreading is also called simultaneous
                          multithreading (SMT) or Intel Hyper-Threading. Intel and
                          AMD processors have two hardware execution threads per core
                          (OCPU). SMT permits multiple independent threads of execution,
                          to better use the resources and increase the efficiency
                          of the CPU. When multithreading is disabled, only one thread
                          is permitted to run on each core, which can provide higher
                          or more predictable performance for some workloads.
                        type: boolean
                      isTrustedPlatformModuleEnabled:
                        description: Whether the Trusted Platform Module (TPM) is
                          enabled on the instance.
                        type: boolean
                      numaNodesPerSocket:
                        description: 'The number of NUMA nodes per socket (NPS). The
                          following values are supported: * `NPS0` * `NPS1` * `NPS2`
                          * `NPS4`'
                        type: string
                      percentageOfCoresEnabled:
                        description: The percentage of cores enabled. Value must be
                          a multiple of 25%. If the requested percentage results in
                          a fractional number of cores, the system rounds up the number
                          of cores across processors and provisions an instance with
                          a whole number of cores. If the applications that you run
                          on the instance use a core-based licensing model and need
                          fewer cores than the full size of the shape, you can disable
                          cores to reduce your licensing costs. The instance itself
                          is billed for the full shape, regardless of whether all
                          cores are enabled.
                        type: integer
                    type: object
                  amdVmPlatformConfig:
                    description: AmdMilanBmPlatformConfig describe AMD VM platform
                      configuration
                    properties:
                      isMeasuredBootEnabled:
                        description: Whether the Measured Boot feature is enabled
                          on the instance.
                        type: boolean
                      isMemoryEncryptionEnabled:
                        description: Whether the instance is a confidential instance.
                          If this value is `true`, the instance is a confidential
                          instance. The default value is `false`.
                        type: boolean
                      isSecureBootEnabled:
                        description: Whether Secure Boot is enabled on the instance.
                        type: boolean
                      isTrustedPlatformModuleEnabled:
                        description: Whether the Trusted Platform Module (TPM) is
                          enabled on the instance.
                        type: boolean
                    type: object
                  intelIcelakeBmPlatformConfig:
                    description: AmdMilanBmPlatformConfig describe Intel Skylke BM
                      platform configuration
                    properties:
                      isInputOutputMemoryManagementUnitEnabled:
                        description: Whether the input-output memory management unit
                          is enabled.
                        type: boolean
                      isMeasuredBootEnabled:
                        description: Whether the Measured Boot feature is enabled
                          on the instance.
                        type: boolean
                      isMemoryEncryptionEnabled:
                        description: Whether the instance is a confidential instance.
                          If this value is `true`, the instance is a confidential
                          instance. The default value is `false`.
                        type: boolean
                      isSecureBootEnabled:
                        description: Whether Secure Boot is enabled on the instance.
                        type: boolean
                      isSymmetricMultiThreadingEnabled:
                        description: Whether symmetric multithreading is enabled on
                          the instance. Symmetric multithreading is also called simultaneous
                          multithreading (SMT) or Intel Hyper-Threading. Intel and
                          AMD processors have two hardware execution threads per core
                          (OCPU). SMT permits multiple independent threads of execution,
                          to better use the resources and increase the efficiency
                          of the CPU. When multithreading is disabled, only one thread
                          is permitted to run on each core, which can provide higher
                          or more predictable performance for some workloads.
                        type: boolean
                      isTrustedPlatformModuleEnabled:
                        description: Whether the Trusted Platform Module (TPM) is
                          enabled on the instance.
                        type: boolean
                      numaNodesPerSocket:
                        description: 'The number of NUMA nodes per socket (NPS). The
                          following values are supported: * `NPS1` * `NPS2`'
                        type: string
                      percentageOfCoresEnabled:
                        description: The percentage of cores enabled. Value must be
                          a multiple of 25%. If the requested percentage results in
                          a fractional number of cores, the system rounds up the number
                          of cores across processors and provisions an instance with
                          a whole number of cores. If the applications that you run
                          on the instance use a core-based licensing model and need
                          fewer cores than the full size of the shape, you can disable
                          cores to reduce your licensing costs. The instance itself
                          is billed for the full shape, regardless of whether all
                          cores are enabled.
                        type: integer
                    type: object
                  intelSkylakeBmPlatformConfig:
                    description: AmdMilanBmPlatformConfig describe Intel Skylke BM
                      platform configuration
                    properties:
                      isMeasuredBootEnabled:
                        description: Whether the Measured Boot feature is enabled
                          on the instance.
                        type: boolean
                      isMemoryEncryptionEnabled:
                        description: Whether the instance is a confidential instance.
                          If this value is `true`, the instance is a confidential
                          instance. The default value is `false`.
                        type: boolean
                      isSecureBootEnabled:
                        description: Whether Secure Boot is enabled on the instance.
                        type: boolean
                      isTrustedPlatformModuleEnabled:
                        description: Whether the Trusted Platform Module (TPM) is
                          enabled on the instance.
                        type: boolean
                    type: object
                  intelVmPlatformConfig:
                    description: AmdMilanBmPlatformConfig describe Intel VM platform
                      configuration
                    properties:
                      isMeasuredBootEnabled:
                        description: Whether the Measured Boot feature is enabled
                          on the instance.
                        type: boolean
                      isMemoryEncryptionEnabled:
                        description: Whether the instance is a confidential instance.
                          If this value is `true`, the instance is a confidential
                          instance. The default value is `false`.
                        type: boolean
                      isSecureBootEnabled:
                        description: Whether Secure Boot is enabled on the instance.
                        type: boolean
                      isTrustedPlatformModuleEnabled:
                        description: Whether the Trusted Platform Module (TPM) is
                          enabled on the instance.
                        type: boolean
                    type: object
                  platformConfigType:
                    description: The type of platform configuration. Valid values
                      are * `AMD_ROME_BM_GPU` * `AMD_ROME_BM` * `INTEL_ICELAKE_BM`
                      * `AMD_VM` * `INTEL_VM` * `INTEL_SKYLAKE_BM` * `AMD_MILAN_BM`
                      Based on the enum, exactly one of the specific configuration
                      types must be set
                    type: string
                type: object
              preemptibleInstanceConfig:
                description: PreemptibleInstanceConfig Configuration options for preemptible
                  instances.
                properties:
                  terminatePreemptionAction:
                    description: TerminatePreemptionAction terminates the preemptible
                      instance when it is interrupted for eviction.
                    properties:
                      preserveBootVolume:
                        description: PreserveBootVolume defines whether to preserve
                          the boot volume that was used to launch the preemptible
                          instance when the instance is terminated. Defaults to false
                          if not specified.
                        type: boolean
                    type: object
                type: object
              providerID:
                description: Provider ID of the instance, this will be set by Cluster
                  API provider itself, users should not set this parameter.
                type: string
              shape:
                description: Shape of the instance.
                type: string
              shapeConfig:
                description: The shape configuration of rhe instance, applicable for
                  flex instances.
                properties:
                  baselineOcpuUtilization:
                    description: 'The baseline OCPU utilization for a subcore burstable
                      VM instance. Leave this attribute blank for a non-burstable
                      instance, or explicitly specify non-burstable with `BASELINE_1_1`.
                      The following values are supported: - `BASELINE_1_8` - baseline
                      usage is 1/8 of an OCPU. - `BASELINE_1_2` - baseline usage is
                      1/2 of an OCPU. - `BASELINE_1_1` - baseline usage is an entire
                      OCPU. This represents a non-burstable instance.'
                    type: string
                  memoryInGBs:
                    description: The total amount of memory available to the instance,
                      in gigabytes.
                    type: string
                  nvmes:
                    description: Nvmes defines the number of NVMe drives to be used
                      for storage. A single drive has 6.8 TB available.
                    type: integer
                  ocpus:
                    description: The total number of OCPUs available to the instance.
                    type: string
                type: object
              subnetName:
                description: The name of the subnet to use. The name here refers to
                  the subnets defined in the OCICluster Spec. Optional, only if multiple
                  subnets of a type is defined, else the first element is used.
                type: string
              vnicAttachments:
                description: VnicAttachments defines the configuration options for
                  the vnic(s) attached to the machine The network bandwidth and number
                  of VNICs scale proportionately with the number of OCPUs.
                items:
                  properties:
                    assignPublicIp:
                      description: AssignPublicIp defines whether the vnic should
                        have a public IP address
                      type: boolean
                    displayName:
                      description: DisplayName defines a user-friendly name. Does
                        not have to be unique. Avoid entering confidential information.
                      type: string
                    nicIndex:
                      description: NicIndex defines which physical Network Interface
                        Card (NIC) to use You can determine which NICs are active
                        for a shape by reviewing the https://docs.oracle.com/en-us/iaas/Content/Compute/References/computeshapes.htm
                      type: integer
                    subnetName:
                      description: SubnetName defines the subnet name to use for the
                        VNIC Defaults to the "worker" subnet if not provided
                      type: string
                    vnicAttachmentId:
                      description: VnicAttachmentId defines the ID of the VnicAttachment
                      type: string
                  required:
                  - displayName
                  type: object
                type: array
            type: object
          status:
            description: OCIMachineStatus defines the observed state of OCIMachine.
            properties:
              addresses:
                description: Addresses contains the addresses of the associated OCI
                  instance.
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP,
                        InternalIP, ExternalDNS or InternalDNS.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the OCIMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              createBackendWorkRequestId:
                description: Create Backend OPC work request ID for the machine backend.
                type: string
              deleteBackendWorkRequestId:
                description: Delete Backend OPC work request ID for the machine backend.
                type: string
              failureMessage:
                description: The error message corresponding to the error on the machine.
                type: string
              failureReason:
                description: Error status on the machine.
                type: string
              launchInstanceWorkRequestId:
                description: Launch instance work request ID.
                type: string
              ready:
                description: Flag set to true when machine is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ocimachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: OCIMachineTemplate
    listKind: OCIMachineTemplateList
    plural: ocimachinetemplates
    singular: ocimachinetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: OCIMachineTemplate is the schema for the OCI compute instance
          machine template.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIMachineTemplateSpec defines the desired state of OCIMachineTemplate.
            properties:
              template:
                description: OCIMachineTemplateResource describes the data needed
                  to create an OCIMachine from a template.
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      agentConfig:
                        description: AgentConfig defines the options for the Oracle
                          Cloud Agent software running on the instance.
                        properties:
                          areAllPluginsDisabled:
                            description: AreAllPluginsDisabled defines whether Oracle
                              Cloud Agent can run all the available plugins. This
                              includes the management and monitoring plugins. To get
                              a list of available plugins, use the ListInstanceagentAvailablePlugins
                              operation in the Oracle Cloud Agent API. For more information
                              about the available plugins, see Managing Plugins with
                              Oracle Cloud Agent (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
                            type: boolean
                          isManagementDisabled:
                            description: 'IsManagementDisabled defines whether Oracle
                              Cloud Agent can run all the available management plugins.
                              Default value is false (management plugins are enabled).
                              These are the management plugins: OS Management Service
                              Agent and Compute Instance Run Command. The management
                              plugins are controlled by this parameter and by the
                              per-plugin configuration in the `pluginsConfig` object.
                              - If `isManagementDisabled` is true, all of the management
                              plugins are disabled, regardless of the per-plugin configuration.
                              - If `isManagementDisabled` is false, all of the management
                              plugins are enabled. You can optionally disable individual
                              management plugins by providing a value in the `pluginsConfig`
                              object.'
                            type: boolean
                          isMonitoringDisabled:
                            description: 'IsMonitoringDisabled defines whether Oracle
                              Cloud Agent can gather performance metrics and monitor
                              the instance using the monitoring plugins. Default value
                              is false (monitoring plugins are enabled). These are
                              the monitoring plugins: Compute Instance Monitoring
                              and Custom Logs Monitoring. The monitoring plugins are
                              controlled by this parameter and by the per-plugin configuration
                              in the `pluginsConfig` object. - If `isMonitoringDisabled`
                              is true, all of the monitoring plugins are disabled,
                              regardless of the per-plugin configuration. - If `isMonitoringDisabled`
                              is false, all of the monitoring plugins are enabled.
                              You can optionally disable individual monitoring plugins
                              by providing a value in the `pluginsConfig` object.'
                            type: boolean
                          pluginsConfigs:
                            description: PluginsConfig defines the configuration of
                              plugins associated with this instance.
                            items:
                              description: InstanceAgentPluginConfig defines the configuration
                                of plugins associated with this instance.
                              properties:
                                desiredState:
                                  description: 'DesiredState defines whether the plugin
                                    should be enabled or disabled. To enable the monitoring
                                    and management plugins, the `isMonitoringDisabled`
                                    and `isManagementDisabled` attributes must also
                                    be set to false. The following values are supported:
                                    * `ENABLED` * `DISABLED`'
                                  type: string
                                name:
                                  description: Name defines the name of the plugin.
                                    To get a list of available plugins, use the ListInstanceagentAvailablePlugins
                                    operation in the Oracle Cloud Agent API. For more
                                    information about the available plugins, see Managing
                                    Plugins with Oracle Cloud Agent (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
                                  type: string
                              type: object
                            type: array
                        type: object
                      availabilityConfig:
                        description: LaunchInstanceAvailabilityConfig defines the
                          options for VM migration during infrastructure maintenance
                          events and for defining the availability of a VM instance
                          after a maintenance event that impacts the underlying hardware.
                        properties:
                          isLiveMigrationPreferred:
                            description: IsLiveMigrationPreferred defines whether
                              to live migrate supported VM instances to a healthy
                              physical VM host without disrupting running instances
                              during infrastructure maintenance events. If null, Oracle
                              chooses the best option for migrating the VM during
                              infrastructure maintenance events.
                            type: boolean
                          recoveryAction:
                            description: RecoveryAction defines the lifecycle state
                              for an instance when it is recovered after infrastructure
                              maintenance. * `RESTORE_INSTANCE` - The instance is
                              restored to the lifecycle state it was in before the
                              maintenance event. If the instance was running, it is
                              automatically rebooted. This is the default action when
                              a value is not set. * `STOP_INSTANCE` - The instance
                              is recovered in the stopped state.
                            type: string
                        type: object
                      bootVolumeSizeInGBs:
                        description: The size of boot volume. Please see https://docs.oracle.com/en-us/iaas/Content/Block/Tasks/extendingbootpartition.htm
                          to extend the boot volume size.
                        type: string
                      capacityReservationId:
                        description: CapacityReservationId defines the OCID of the
                          compute capacity reservation this instance is launched under.
                          You can opt out of all default reservations by specifying
                          an empty string as input for this field. For more information,
                          see Capacity Reservations (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm#default).
                        type: string
                      compartmentId:
                        description: Compartment to launch the instance in.
                        type: string
                      dedicatedVmHostId:
                        description: DedicatedVmHostId defines the OCID of the dedicated
                          VM host.
                        type: string
                      definedTags:
                        additionalProperties:
                          additionalProperties:
                            type: string
                          type: object
                        description: 'Defined tags for this resource. Each key is
                          predefined and scoped to a namespace. For more information,
                          see Resource Tags (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                          Example: `{"Operations": {"CostCenter": "42"}}`'
                        type: object
                      freeformTags:
                        additionalProperties:
                          type: string
                        description: Free-form tags for this resource.
                        type: object
                      imageId:
                        description: OCID of the image to be used to launch the instance.
                        type: string
                      instanceId:
                        description: OCID of launched compute instance.
                        type: string
                      instanceOptions:
                        description: InstanceOptions defines the instance options
                        properties:
                          areLegacyImdsEndpointsDisabled:
                            description: Whether to disable the legacy (/v1) instance
                              metadata service endpoints. Customers who have migrated
                              to /v2 should set this to true for added security. Default
                              is false.
                            type: boolean
                        type: object
                      instanceSourceViaImageConfig:
                        description: InstanceSourceViaImageConfig defines the options
                          for booting up instances via images
                        properties:
                          bootVolumeVpusPerGB:
                            description: 'BootVolumeVpusPerGB defines the number of
                              volume performance units (VPUs) that will be applied
                              to this volume per GB, representing the Block Volume
                              service''s elastic performance options. See Block Volume
                              Performance Levels (https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels)
                              for more information. Allowed values: * `10`: Represents
                              Balanced option. * `20`: Represents Higher Performance
                              option. * `30`-`120`: Represents the Ultra High Performance
                              option. For volumes with the auto-tuned performance
                              feature enabled, this is set to the default (minimum)
                              VPUs/GB.'
                            format: int64
                            type: integer
                          kmsKeyId:
                            description: KmsKeyId defines the OCID of the Key Management
                              key to assign as the master encryption key for the boot
                              volume.
                            type: string
                        type: object
                      ipxeScript:
                        type: string
                      isPvEncryptionInTransitEnabled:
                        description: Is in transit encryption of volumes required.
                        type: boolean
                      launchOptions:
                        description: LaunchOptions defines the options for tuning
                          the compatibility and performance of VM shapes
                        properties:
                          bootVolumeType:
                            description: BootVolumeType defines Emulation type for
                              the boot volume. * `ISCSI` - ISCSI attached block storage
                              device. * `SCSI` - Emulated SCSI disk. * `IDE` - Emulated
                              IDE disk. * `VFIO` - Direct attached Virtual Function
                              storage. This is the default option for local data volumes
                              on platform images. * `PARAVIRTUALIZED` - Paravirtualized
                              disk. This is the default for boot volumes and remote
                              block storage volumes on platform images.
                            type: string
                          firmware:
                            description: Firmware defines the firmware used to boot
                              VM. Select the option that matches your operating system.
                              * `BIOS` - Boot VM using BIOS style firmware. This is
                              compatible with both 32 bit and 64 bit operating systems
                              that boot using MBR style bootloaders. * `UEFI_64` -
                              Boot VM using UEFI style firmware compatible with 64
                              bit operating systems. This is the default for platform
                              images.
                            type: string
                          isConsistentVolumeNamingEnabled:
                            description: IsConsistentVolumeNamingEnabled defines whether
                              to enable consistent volume naming feature. Defaults
                              to false.
                            type: boolean
                          networkType:
                            description: NetworkType defines the emulation type for
                              the physical network interface card (NIC). * `E1000`
                              - Emulated Gigabit ethernet controller. Compatible with
                              Linux e1000 network driver. * `VFIO` - Direct attached
                              Virtual Function network controller. This is the networking
                              type when you launch an instance using hardware-assisted
                              (SR-IOV) networking. * `PARAVIRTUALIZED` - VM instances
                              launch with paravirtualized devices using VirtIO drivers.
                            type: string
                          remoteDataVolumeType:
                            description: RemoteDataVolumeType defines the emulation
                              type for volume. * `ISCSI` - ISCSI attached block storage
                              device. * `SCSI` - Emulated SCSI disk. * `IDE` - Emulated
                              IDE disk. * `VFIO` - Direct attached Virtual Function
                              storage. This is the default option for local data volumes
                              on platform images. * `PARAVIRTUALIZED` - Paravirtualized
                              disk. This is the default for boot volumes and remote
                              block storage volumes on platform images.
                            type: string
                        type: object
                      metadata:
                        additionalProperties:
                          type: string
                        description: Custom metadata key/value pairs that you provide,
                          such as the SSH public key required to connect to the instance.
                        type: object
                      networkDetails:
                        description: NetworkDetails defines the configuration options
                          for the network
                        properties:
                          assignPrivateDnsRecord:
                            description: AssignPrivateDnsRecord defines whether the
                              VNIC should be assigned a DNS record.
                            type: boolean
                          assignPublicIp:
                            description: AssignPublicIp defines whether the instance
                              should have a public IP address
                            type: boolean
                          displayName:
                            description: DisplayName defines a user-friendly name.
                              Does not have to be unique, and it's changeable. Avoid
                              entering confidential information.
                            type: string
                          hostnameLabel:
                            description: HostnameLabel defines the hostname for the
                              VNIC's primary private IP. Used for DNS.
                            type: string
                          nsgId:
                            description: "Deprecated, use \tNsgNames parameter to
                              define the NSGs"
                            type: string
                          nsgNames:
                            description: NsgNames defines a list of the nsg names
                              of the network security groups (NSGs) to add the VNIC
                              to.
                            items:
                              type: string
                            type: array
                          skipSourceDestCheck:
                            description: SkipSourceDestCheck defines whether the source/destination
                              check is disabled on the VNIC.
                            type: boolean
                          subnetId:
                            description: SubnetId defines the ID of the subnet to
                              use. Deprecated, use SubnetName parameter
                            type: string
                          subnetName:
                            description: SubnetName defines the subnet name to use
                              for the VNIC
                            type: string
                        type: object
                      nsgName:
                        description: The name of NSG to use. The name here refers
                          to the NSGs defined in the OCICluster Spec. Optional, only
                          if multiple NSGs of a type is defined, else the first element
                          is used. Deprecated, please use NetworkDetails.NSGNames
                        type: string
                      platformConfig:
                        description: PlatformConfig defines the platform config parameters
                        properties:
                          amdMilanBmPlatformConfig:
                            description: AmdMilanBmPlatformConfig describe AMD Milan
                              BM platform configuration
                            properties:
                              areVirtualInstructionsEnabled:
                                description: Whether virtualization instructions are
                                  available. For example, Secure Virtual Machine for
                                  AMD shapes or VT-x for Intel shapes.
                                type: boolean
                              isAccessControlServiceEnabled:
                                description: Whether the Access Control Service is
                                  enabled on the instance. When enabled, the platform
                                  can enforce PCIe device isolation, required for
                                  VFIO device pass-through.
                                type: boolean
                              isInputOutputMemoryManagementUnitEnabled:
                                description: Whether the input-output memory management
                                  unit is enabled.
                                type: boolean
                              isMeasuredBootEnabled:
                                description: Whether the Measured Boot feature is
                                  enabled on the instance.
                                type: boolean
                              isMemoryEncryptionEnabled:
                                description: Whether the instance is a confidential
                                  instance. If this value is `true`, the instance
                                  is a confidential instance. The default value is
                                  `false`.
                                type: boolean
                              isSecureBootEnabled:
                                description: Whether Secure Boot is enabled on the
                                  instance.
                                type: boolean
                              isSymmetricMultiThreadingEnabled:
                                description: Whether symmetric multithreading is enabled
                                  on the instance. Symmetric multithreading is also
                                  called simultaneous multithreading (SMT) or Intel
                                  Hyper-Threading. Intel and AMD processors have two
                                  hardware execution threads per core (OCPU). SMT
                                  permits multiple independent threads of execution,
                                  to better use the resources and increase the efficiency
                                  of the CPU. When multithreading is disabled, only
                                  one thread is permitted to run on each core, which
                                  can provide higher or more predictable performance
                                  for some workloads.
                                type: boolean
                              isTrustedPlatformModuleEnabled:
                                description: Whether the Trusted Platform Module (TPM)
                                  is enabled on the instance.
                                type: boolean
                              numaNodesPerSocket:
                                description: 'The number of NUMA nodes per socket
                                  (NPS). The following values are supported: * `NPS0`
                                  * `NPS1` * `NPS2` * `NPS4`'
                                type: string
                              percentageOfCoresEnabled:
                                description: The percentage of cores enabled. Value
                                  must be a multiple of 25%. If the requested percentage
                                  results in a fractional number of cores, the system
                                  rounds up the number of cores across processors
                                  and provisions an instance with a whole number of
                                  cores. If the applications that you run on the instance
                                  use a core-based licensing model and need fewer
                                  cores than the full size of the shape, you can disable
                                  cores to reduce your licensing costs. The instance
                                  itself is billed for the full shape, regardless
                                  of whether all cores are enabled.
                                type: integer
                            type: object
                          amdRomeBmGpuPlatformConfig:
                            description: AmdMilanBmPlatformConfig describe AMD Rome
                              BM platform configuration
                            properties:
                              areVirtualInstructionsEnabled:
                                description: Whether virtualization instructions are
                                  available. For example, Secure Virtual Machine for
                                  AMD shapes or VT-x for Intel shapes.
                                type: boolean
                              isAccessControlServiceEnabled:
                                description: Whether the Access Control Service is
                                  enabled on the instance. When enabled, the platform
                                  can enforce PCIe device isolation, required for
                                  VFIO device pass-through.
                                type: boolean
                              isInputOutputMemoryManagementUnitEnabled:
                                description: Whether the input-output memory management
                                  unit is enabled.
                                type: boolean
                              isMeasuredBootEnabled:
                                description: Whether the Measured Boot feature is
                                  enabled on the instance.
                                type: boolean
                              isMemoryEncryptionEnabled:
                                description: Whether the instance is a confidential
                                  instance. If this value is `true`, the instance
                                  is a confidential instance. The default value is
                                  `false`.
                                type: boolean
                              isSecureBootEnabled:
                                description: Whether Secure Boot is enabled on the
                                  instance.
                                type: boolean
                              isSymmetricMultiThreadingEnabled:
                                description: Whether symmetric multithreading is enabled
                                  on the instance. Symmetric multithreading is also
                                  called simultaneous multithreading (SMT) or Intel
                                  Hyper-Threading. Intel and AMD processors have two
                                  hardware execution threads per core (OCPU). SMT
                                  permits multiple independent threads of execution,
                                  to better use the resources and increase the efficiency
                                  of the CPU. When multithreading is disabled, only
                                  one thread is permitted to run on each core, which
                                  can provide higher or more predictable performance
                                  for some workloads.
                                type: boolean
                              isTrustedPlatformModuleEnabled:
                                description: Whether the Trusted Platform Module (TPM)
                                  is enabled on the instance.
                                type: boolean
                              numaNodesPerSocket:
                                description: 'The number of NUMA nodes per socket
                                  (NPS). The following values are supported: * `NPS0`
                                  * `NPS1` * `NPS2` * `NPS4`'
                                type: string
                            type: object
                          amdRomeBmPlatformConfig:
                            description: AmdMilanBmPlatformConfig describe AMD Rome
                              BM platform configuration
                            properties:
                              areVirtualInstructionsEnabled:
                                description: Whether virtualization instructions are
                                  available. For example, Secure Virtual Machine for
                                  AMD shapes or VT-x for Intel shapes.
                                type: boolean
                              isAccessControlServiceEnabled:
                                description: Whether the Access Control Service is
                                  enabled on the instance. When enabled, the platform
                                  can enforce PCIe device isolation, required for
                                  VFIO device pass-through.
                                type: boolean
                              isInputOutputMemoryManagementUnitEnabled:
                                description: Whether the input-output memory management
                                  unit is enabled.
                                type: boolean
                              isMeasuredBootEnabled:
                                description: Whether the Measured Boot feature is
                                  enabled on the instance.
                                type: boolean
                              isMemoryEncryptionEnabled:
                                description: Whether the instance is a confidential
                                  instance. If this value is `true`, the instance
                                  is a confidential instance. The default value is
                                  `false`.
                                type: boolean
                              isSecureBootEnabled:
                                description: Whether Secure Boot is enabled on the
                                  instance.
                                type: boolean
                              isSymmetricMultiThreadingEnabled:
                                description: Whether symmetric multithreading is enabled
                                  on the instance. Symmetric multithreading is also
                                  called simultaneous multithreading (SMT) or Intel
                                  Hyper-Threading. Intel and AMD processors have two
                                  hardware execution threads per core (OCPU). SMT
                                  permits multiple independent threads of execution,
                                  to better use the resources and increase the efficiency
                                  of the CPU. When multithreading is disabled, only
                                  one thread is permitted to run on each core, which
                                  can provide higher or more predictable performance
                                  for some workloads.
                                type: boolean
                              isTrustedPlatformModuleEnabled:
                                description: Whether the Trusted Platform Module (TPM)
                                  is enabled on the instance.
                                type: boolean
                              numaNodesPerSocket:
                                description: 'The number of NUMA nodes per socket
                                  (NPS). The following values are supported: * `NPS0`
                                  * `NPS1` * `NPS2` * `NPS4`'
                                type: string
                              percentageOfCoresEnabled:
                                description: The percentage of cores enabled. Value
                                  must be a multiple of 25%. If the requested percentage
                                  results in a fractional number of cores, the system
                                  rounds up the number of cores across processors
                                  and provisions an instance with a whole number of
                                  cores. If the applications that you run on the instance
                                  use a core-based licensing model and need fewer
                                  cores than the full size of the shape, you can disable
                                  cores to reduce your licensing costs. The instance
                                  itself is billed for the full shape, regardless
                                  of whether all cores are enabled.
                                type: integer
                            type: object
                          amdVmPlatformConfig:
                            description: AmdMilanBmPlatformConfig describe AMD VM
                              platform configuration
                            properties:
                              isMeasuredBootEnabled:
                                description: Whether the Measured Boot feature is
                                  enabled on the instance.
                                type: boolean
                              isMemoryEncryptionEnabled:
                                description: Whether the instance is a confidential
                                  instance. If this value is `true`, the instance
                                  is a confidential instance. The default value is
                                  `false`.
                                type: boolean
                              isSecureBootEnabled:
                                description: Whether Secure Boot is enabled on the
                                  instance.
                                type: boolean
                              isTrustedPlatformModuleEnabled:
                                description: Whether the Trusted Platform Module (TPM)
                                  is enabled on the instance.
                                type: boolean
                            type: object
                          intelIcelakeBmPlatformConfig:
                            description: AmdMilanBmPlatformConfig describe Intel Skylke
                              BM platform configuration
                            properties:
                              isInputOutputMemoryManagementUnitEnabled:
                                description: Whether the input-output memory management
                                  unit is enabled.
                                type: boolean
                              isMeasuredBootEnabled:
                                description: Whether the Measured Boot feature is
                                  enabled on the instance.
                                type: boolean
                              isMemoryEncryptionEnabled:
                                description: Whether the instance is a confidential
                                  instance. If this value is `true`, the instance
                                  is a confidential instance. The default value is
                                  `false`.
                                type: boolean
                              isSecureBootEnabled:
                                description: Whether Secure Boot is enabled on the
                                  instance.
                                type: boolean
                              isSymmetricMultiThreadingEnabled:
                                description: Whether symmetric multithreading is enabled
                                  on the instance. Symmetric multithreading is also
                                  called simultaneous multithreading (SMT) or Intel
                                  Hyper-Threading. Intel and AMD processors have two
                                  hardware execution threads per core (OCPU). SMT
                                  permits multiple independent threads of execution,
                                  to better use the resources and increase the efficiency
                                  of the CPU. When multithreading is disabled, only
                                  one thread is permitted to run on each core, which
                                  can provide higher or more predictable performance
                                  for some workloads.
                                type: boolean
                              isTrustedPlatformModuleEnabled:
                                description: Whether the Trusted Platform Module (TPM)
                                  is enabled on the instance.
                                type: boolean
                              numaNodesPerSocket:
                                description: 'The number of NUMA nodes per socket
                                  (NPS). The following values are supported: * `NPS1`
                                  * `NPS2`'
                                type: string
                              percentageOfCoresEnabled:
                                description: The percentage of cores enabled. Value
                                  must be a multiple of 25%. If the requested percentage
                                  results in a fractional number of cores, the system
                                  rounds up the number of cores across processors
                                  and provisions an instance with a whole number of
                                  cores. If the applications that you run on the instance
                                  use a core-based licensing model and need fewer
                                  cores than the full size of the shape, you can disable
                                  cores to reduce your licensing costs. The instance
                                  itself is billed for the full shape, regardless
                                  of whether all cores are enabled.
                                type: integer
                            type: object
                          intelSkylakeBmPlatformConfig:
                            description: AmdMilanBmPlatformConfig describe Intel Skylke
                              BM platform configuration
                            properties:
                              isMeasuredBootEnabled:
                                description: Whether the Measured Boot feature is
                                  enabled on the instance.
                                type: boolean
                              isMemoryEncryptionEnabled:
                                description: Whether the instance is a confidential
                                  instance. If this value is `true`, the instance
                                  is a confidential instance. The default value is
                                  `false`.
                                type: boolean
                              isSecureBootEnabled:
                                description: Whether Secure Boot is enabled on the
                                  instance.
                                type: boolean
                              isTrustedPlatformModuleEnabled:
                                description: Whether the Trusted Platform Module (TPM)
                                  is enabled on the instance.
                                type: boolean
                            type: object
                          intelVmPlatformConfig:
                            description: AmdMilanBmPlatformConfig describe Intel VM
                              platform configuration
                            properties:
                              isMeasuredBootEnabled:
                                description: Whether the Measured Boot feature is
                                  enabled on the instance.
                                type: boolean
                              isMemoryEncryptionEnabled:
                                description: Whether the instance is a confidential
                                  instance. If this value is `true`, the instance
                                  is a confidential instance. The default value is
                                  `false`.
                                type: boolean
                              isSecureBootEnabled:
                                description: Whether Secure Boot is enabled on the
                                  instance.
                                type: boolean
                              isTrustedPlatformModuleEnabled:
                                description: Whether the Trusted Platform Module (TPM)
                                  is enabled on the instance.
                                type: boolean
                            type: object
                          platformConfigType:
                            description: The type of platform configuration. Valid
                              values are * `AMD_ROME_BM_GPU` * `AMD_ROME_BM` * `INTEL_ICELAKE_BM`
                              * `AMD_VM` * `INTEL_VM` * `INTEL_SKYLAKE_BM` * `AMD_MILAN_BM`
                              Based on the enum, exactly one of the specific configuration
                              types must be set
                            type: string
                        type: object
                      preemptibleInstanceConfig:
                        description: PreemptibleInstanceConfig Configuration options
                          for preemptible instances.
                        properties:
                          terminatePreemptionAction:
                            description: TerminatePreemptionAction terminates the
                              preemptible instance when it is interrupted for eviction.
                            properties:
                              preserveBootVolume:
                                description: PreserveBootVolume defines whether to
                                  preserve the boot volume that was used to launch
                                  the preemptible instance when the instance is terminated.
                                  Defaults to false if not specified.
                                type: boolean
                            type: object
                        type: object
                      providerID:
                        description: Provider ID of the instance, this will be set
                          by Cluster API provider itself, users should not set this
                          parameter.
                        type: string
                      shape:
                        description: Shape of the instance.
                        type: string
                      shapeConfig:
                        description: The shape configuration of rhe instance, applicable
                          for flex instances.
                        properties:
                          baselineOcpuUtilization:
                            description: 'The baseline OCPU utilization for a subcore
                              burstable VM instance. Leave this attribute blank for
                              a non-burstable instance, or explicitly specify non-burstable
                              with `BASELINE_1_1`. The following values are supported:
                              - `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
                              - `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
                              - `BASELINE_1_1` - baseline usage is an entire OCPU.
                              This represents a non-burstable instance.'
                            type: string
                          memoryInGBs:
                            description: The total amount of memory available to the
                              instance, in gigabytes.
                            type: string
                          nvmes:
                            description: Nvmes defines the number of NVMe drives to
                              be used for storage. A single drive has 6.8 TB available.
                            type: integer
                          ocpus:
                            description: The total number of OCPUs available to the
                              instance.
                            type: string
                        type: object
                      subnetName:
                        description: The name of the subnet to use. The name here
                          refers to the subnets defined in the OCICluster Spec. Optional,
                          only if multiple subnets of a type is defined, else the
                          first element is used.
                        type: string
                      vnicAttachments:
                        description: VnicAttachments defines the configuration options
                          for the vnic(s) attached to the machine The network bandwidth
                          and number of VNICs scale proportionately with the number
                          of OCPUs.
                        items:
                          properties:
                            assignPublicIp:
                              description: AssignPublicIp defines whether the vnic
                                should have a public IP address
                              type: boolean
                            displayName:
                              description: DisplayName defines a user-friendly name.
                                Does not have to be unique. Avoid entering confidential
                                information.
                              type: string
                            nicIndex:
                              description: NicIndex defines which physical Network
                                Interface Card (NIC) to use You can determine which
                                NICs are active for a shape by reviewing the https://docs.oracle.com/en-us/iaas/Content/Compute/References/computeshapes.htm
                              type: integer
                            subnetName:
                              description: SubnetName defines the subnet name to use
                                for the VNIC Defaults to the "worker" subnet if not
                                provided
                              type: string
                            vnicAttachmentId:
                              description: VnicAttachmentId defines the ID of the
                                VnicAttachment
                              type: string
                          required:
                          - displayName
                          type: object
                        type: array
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: OCIMachineTemplate is the schema for the OCI compute instance
          machine template.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIMachineTemplateSpec defines the desired state of OCIMachineTemplate.
            properties:
              template:
                description: OCIMachineTemplateResource describes the data needed
                  to create an OCIMachine from a template.
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      agentConfig:
                        description: AgentConfig defines the options for the Oracle
                          Cloud Agent software running on the instance.
                        properties:
                          areAllPluginsDisabled:
                            description: AreAllPluginsDisabled defines whether Oracle
                              Cloud Agent can run all the available plugins. This
                              includes the management and monitoring plugins. To get
                              a list of available plugins, use the ListInstanceagentAvailablePlugins
                              operation in the Oracle Cloud Agent API. For more information
                              about the available plugins, see Managing Plugins with
                              Oracle Cloud Agent (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
                            type: boolean
                          isManagementDisabled:
                            description: 'IsManagementDisabled defines whether Oracle
                              Cloud Agent can run all the available management plugins.
                              Default value is false (management plugins are enabled).
                              These are the management plugins: OS Management Service
                              Agent and Compute Instance Run Command. The management
                              plugins are controlled by this parameter and by the
                              per-plugin configuration in the `pluginsConfig` object.
                              - If `isManagementDisabled` is true, all of the management
                              plugins are disabled, regardless of the per-plugin configuration.
                              - If `isManagementDisabled` is false, all of the management
                              plugins are enabled. You can optionally disable individual
                              management plugins by providing a value in the `pluginsConfig`
                              object.'
                            type: boolean
                          isMonitoringDisabled:
                            description: 'IsMonitoringDisabled defines whether Oracle
                              Cloud Agent can gather performance metrics and monitor
                              the instance using the monitoring plugins. Default value
                              is false (monitoring plugins are enabled). These are
                              the monitoring plugins: Compute Instance Monitoring
                              and Custom Logs Monitoring. The monitoring plugins are
                              controlled by this parameter and by the per-plugin configuration
                              in the `pluginsConfig` object. - If `isMonitoringDisabled`
                              is true, all of the monitoring plugins are disabled,
                              regardless of the per-plugin configuration. - If `isMonitoringDisabled`
                              is false, all of the monitoring plugins are enabled.
                              You can optionally disable individual monitoring plugins
                              by providing a value in the `pluginsConfig` object.'
                            type: boolean
                          pluginsConfigs:
                            description: PluginsConfig defines the configuration of
                              plugins associated with this instance.
                            items:
                              description: InstanceAgentPluginConfig defines the configuration
                                of plugins associated with this instance.
                              properties:
                                desiredState:
                                  description: 'DesiredState defines whether the plugin
                                    should be enabled or disabled. To enable the monitoring
                                    and management plugins, the `isMonitoringDisabled`
                                    and `isManagementDisabled` attributes must also
                                    be set to false. The following values are supported:
                                    * `ENABLED` * `DISABLED`'
                                  type: string
                                name:
                                  description: Name defines the name of the plugin.
                                    To get a list of available plugins, use the ListInstanceagentAvailablePlugins
                                    operation in the Oracle Cloud Agent API. For more
                                    information about the available plugins, see Managing
                                    Plugins with Oracle Cloud Agent (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
                                  type: string
                              type: object
                            type: array
                        type: object
                      availabilityConfig:
                        description: LaunchInstanceAvailabilityConfig defines the
                          options for VM migration during infrastructure maintenance
                          events and for defining the availability of a VM instance
                          after a maintenance event that impacts the underlying hardware.
                        properties:
                          isLiveMigrationPreferred:
                            description: IsLiveMigrationPreferred defines whether
                              to live migrate supported VM instances to a healthy
                              physical VM host without disrupting running instances
                              during infrastructure maintenance events. If null, Oracle
                              chooses the best option for migrating the VM during
                              infrastructure maintenance events.
                            type: boolean
                          recoveryAction:
                            description: RecoveryAction defines the lifecycle state
                              for an instance when it is recovered after infrastructure
                              maintenance. * `RESTORE_INSTANCE` - The instance is
                              restored to the lifecycle state it was in before the
                              maintenance event. If the instance was running, it is
                              automatically rebooted. This is the default action when
                              a value is not set. * `STOP_INSTANCE` - The instance
                              is recovered in the stopped state.
                            type: string
                        type: object
                      bootVolumeSizeInGBs:
                        description: The size of boot volume. Please see https://docs.oracle.com/en-us/iaas/Content/Block/Tasks/extendingbootpartition.htm
                          to extend the boot volume size.
                        type: string
                      capacityReservationId:
                        description: CapacityReservationId defines the OCID of the
                          compute capacity reservation this instance is launched under.
                          You can opt out of all default reservations by specifying
                          an empty string as input for this field. For more information,
                          see Capacity Reservations (https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm#default).
                        type: string
                      compartmentId:
                        description: Compartment to launch the instance in.
                        type: string
                      dedicatedVmHostId:
                        description: DedicatedVmHostId defines the OCID of the dedicated
                          VM host.
                        type: string
                      definedTags:
                        additionalProperties:
                          additionalProperties:
                            type: string
                          type: object
                        description: 'Defined tags for this resource. Each key is
                          predefined and scoped to a namespace. For more information,
                          see Resource Tags (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                          Example: `{"Operations": {"CostCenter": "42"}}`'
                        type: object
                      freeformTags:
                        additionalProperties:
                          type: string
                        description: Free-form tags for this resource.
                        type: object
                      imageId:
                        description: OCID of the image to be used to launch the instance.
                        type: string
                      instanceId:
                        description: OCID of launched compute instance.
                        type: string
                      instanceOptions:
                        description: InstanceOptions defines the instance options
                        properties:
                          areLegacyImdsEndpointsDisabled:
                            description: Whether to disable the legacy (/v1) instance
                              metadata service endpoints. Customers who have migrated
                              to /v2 should set this to true for added security. Default
                              is false.
                            type: boolean
                        type: object
                      instanceSourceViaImageConfig:
                        description: InstanceSourceViaImageConfig defines the options
                          for booting up instances via images
                        properties:
                          bootVolumeVpusPerGB:
                            description: 'BootVolumeVpusPerGB defines the number of
                              volume performance units (VPUs) that will be applied
                              to this volume per GB, representing the Block Volume
                              service''s elastic performance options. See Block Volume
                              Performance Levels (https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels)
                              for more information. Allowed values: * `10`: Represents
                              Balanced option. * `20`: Represents Higher Performance
                              option. * `30`-`120`: Represents the Ultra High Performance
                              option. For volumes with the auto-tuned performance
                              feature enabled, this is set to the default (minimum)
                              VPUs/GB.'
                            format: int64
                            type: integer
                          kmsKeyId:
                            description: KmsKeyId defines the OCID of the Key Management
                              key to assign as the master encryption key for the boot
                              volume.
                            type: string
                        type: object
                      ipxeScript:
                        type: string
                      isPvEncryptionInTransitEnabled:
                        description: Is in transit encryption of volumes required.
                        type: boolean
                      launchOptions:
                        description: LaunchOptions defines the options for tuning
                          the compatibility and performance of VM shapes
                        properties:
                          bootVolumeType:
                            description: BootVolumeType defines Emulation type for
                              the boot volume. * `ISCSI` - ISCSI attached block storage
                              device. * `SCSI` - Emulated SCSI disk. * `IDE` - Emulated
                              IDE disk. * `VFIO` - Direct attached Virtual Function
                              storage. This is the default option for local data volumes
                              on platform images. * `PARAVIRTUALIZED` - Paravirtualized
                              disk. This is the default for boot volumes and remote
                              block storage volumes on platform images.
                            type: string
                          firmware:
                            description: Firmware defines the firmware used to boot
                              VM. Select the option that matches your operating system.
                              * `BIOS` - Boot VM using BIOS style firmware. This is
                              compatible with both 32 bit and 64 bit operating systems
                              that boot using MBR style bootloaders. * `UEFI_64` -
                              Boot VM using UEFI style firmware compatible with 64
                              bit operating systems. This is the default for platform
                              images.
                            type: string
                          isConsistentVolumeNamingEnabled:
                            description: IsConsistentVolumeNamingEnabled defines whether
                              to enable consistent volume naming feature. Defaults
                              to false.
                            type: boolean
                          networkType:
                            description: NetworkType defines the emulation type for
                              the physical network interface card (NIC). * `E1000`
                              - Emulated Gigabit ethernet controller. Compatible with
                              Linux e1000 network driver. * `VFIO` - Direct attached
                              Virtual Function network controller. This is the networking
                              type when you launch an instance using hardware-assisted
                              (SR-IOV) networking. * `PARAVIRTUALIZED` - VM instances
                              launch with paravirtualized devices using VirtIO drivers.
                            type: string
                          remoteDataVolumeType:
                            description: RemoteDataVolumeType defines the emulation
                              type for volume. * `ISCSI` - ISCSI attached block storage
                              device. * `SCSI` - Emulated SCSI disk. * `IDE` - Emulated
                              IDE disk. * `VFIO` - Direct attached Virtual Function
                              storage. This is the default option for local data volumes
                              on platform images. * `PARAVIRTUALIZED` - Paravirtualized
                              disk. This is the default for boot volumes and remote
                              block storage volumes on platform images.
                            type: string
                        type: object
                      metadata:
                        additionalProperties:
                          type: string
                        description: Custom metadata key/value pairs that you provide,
                          such as the SSH public key required to connect to the instance.
                        type: object
                      networkDetails:
                        description: NetworkDetails defines the configuration options
                          for the network
                        properties:
                          assignPrivateDnsRecord:
                            description: AssignPrivateDnsRecord defines whether the
                              VNIC should be assigned a DNS record.
                            type: boolean
                          assignPublicIp:
                            description: AssignPublicIp defines whether the instance
                              should have a public IP address
                            type: boolean
                          displayName:
                            description: DisplayName defines a user-friendly name.
                              Does not have to be unique, and it's changeable. Avoid
                              entering confidential information.
                            type: string
                          hostnameLabel:
                            description: HostnameLabel defines the hostname for the
                              VNIC's primary private IP. Used for DNS.
                            type: string
                          nsgNames:
                            description: NsgNames defines a list of the nsg names
                              of the network security groups (NSGs) to add the VNIC
                              to.
                            items:
                              type: string
                            type: array
                          skipSourceDestCheck:
                            description: SkipSourceDestCheck defines whether the source/destination
                              check is disabled on the VNIC.
                            type: boolean
                          subnetName:
                            description: SubnetName defines the subnet name to use
                              for the VNIC
                            type: string
                        type: object
                      platformConfig:
                        description: PlatformConfig defines the platform config parameters
                        properties:
                          amdMilanBmPlatformConfig:
                            description: AmdMilanBmPlatformConfig describe AMD Milan
                              BM platform configuration
                            properties:
                              areVirtualInstructionsEnabled:
                                description: Whether virtualization instructions are
                                  available. For example, Secure Virtual Machine for
                                  AMD shapes or VT-x for Intel shapes.
                                type: boolean
                              isAccessControlServiceEnabled:
                                description: Whether the Access Control Service is
                                  enabled on the instance. When enabled, the platform
                                  can enforce PCIe device isolation, required for
                                  VFIO device pass-through.
                                type: boolean
                              isInputOutputMemoryManagementUnitEnabled:
                                description: Whether the input-output memory management
                                  unit is enabled.
                                type: boolean
                              isMeasuredBootEnabled:
                                description: Whether the Measured Boot feature is
                                  enabled on the instance.
                                type: boolean
                              isMemoryEncryptionEnabled:
                                description: Whether the instance is a confidential
                                  instance. If this value is `true`, the instance
                                  is a confidential instance. The default value is
                                  `false`.
                                type: boolean
                              isSecureBootEnabled:
                                description: Whether Secure Boot is enabled on the
                                  instance.
                                type: boolean
                              isSymmetricMultiThreadingEnabled:
                                description: Whether symmetric multithreading is enabled
                                  on the instance. Symmetric multithreading is also
                                  called simultaneous multithreading (SMT) or Intel
                                  Hyper-Threading. Intel and AMD processors have two
                                  hardware execution threads per core (OCPU). SMT
                                  permits multiple independent threads of execution,
                                  to better use the resources and increase the efficiency
                                  of the CPU. When multithreading is disabled, only
                                  one thread is permitted to run on each core, which
                                  can provide higher or more predictable performance
                                  for some workloads.
                                type: boolean
                              isTrustedPlatformModuleEnabled:
                                description: Whether the Trusted Platform Module (TPM)
                                  is enabled on the instance.
                                type: boolean
                              numaNodesPerSocket:
                                description: 'The number of NUMA nodes per socket
                                  (NPS). The following values are supported: * `NPS0`
                                  * `NPS1` * `NPS2` * `NPS4`'
                                type: string
                              percentageOfCoresEnabled:
                                description: The percentage of cores enabled. Value
                                  must be a multiple of 25%. If the requested percentage
                                  results in a fractional number of cores, the system
                                  rounds up the number of cores across processors
                                  and provisions an instance with a whole number of
                                  cores. If the applications that you run on the instance
                                  use a core-based licensing model and need fewer
                                  cores than the full size of the shape, you can disable
                                  cores to reduce your licensing costs. The instance
                                  itself is billed for the full shape, regardless
                                  of whether all cores are enabled.
                                type: integer
                            type: object
                          amdRomeBmGpuPlatformConfig:
                            description: AmdMilanBmPlatformConfig describe AMD Rome
                              BM platform configuration
                            properties:
                              areVirtualInstructionsEnabled:
                                description: Whether virtualization instructions are
                                  available. For example, Secure Virtual Machine for
                                  AMD shapes or VT-x for Intel shapes.
                                type: boolean
                              isAccessControlServiceEnabled:
                                description: Whether the Access Control Service is
                                  enabled on the instance. When enabled, the platform
                                  can enforce PCIe device isolation, required for
                                  VFIO device pass-through.
                                type: boolean
                              isInputOutputMemoryManagementUnitEnabled:
                                description: Whether the input-output memory management
                                  unit is enabled.
                                type: boolean
                              isMeasuredBootEnabled:
                                description: Whether the Measured Boot feature is
                                  enabled on the instance.
                                type: boolean
                              isMemoryEncryptionEnabled:
                                description: Whether the instance is a confidential
                                  instance. If this value is `true`, the instance
                                  is a confidential instance. The default value is
                                  `false`.
                                type: boolean
                              isSecureBootEnabled:
                                description: Whether Secure Boot is enabled on the
                                  instance.
                                type: boolean
                              isSymmetricMultiThreadingEnabled:
                                description: Whether symmetric multithreading is enabled
                                  on the instance. Symmetric multithreading is also
                                  called simultaneous multithreading (SMT) or Intel
                                  Hyper-Threading. Intel and AMD processors have two
                                  hardware execution threads per core (OCPU). SMT
                                  permits multiple independent threads of execution,
                                  to better use the resources and increase the efficiency
                                  of the CPU. When multithreading is disabled, only
                                  one thread is permitted to run on each core, which
                                  can provide higher or more predictable performance
                                  for some workloads.
                                type: boolean
                              isTrustedPlatformModuleEnabled:
                                description: Whether the Trusted Platform Module (TPM)
                                  is enabled on the instance.
                                type: boolean
                              numaNodesPerSocket:
                                description: 'The number of NUMA nodes per socket
                                  (NPS). The following values are supported: * `NPS0`
                                  * `NPS1` * `NPS2` * `NPS4`'
                                type: string
                            type: object
                          amdRomeBmPlatformConfig:
                            description: AmdMilanBmPlatformConfig describe AMD Rome
                              BM platform configuration
                            properties:
                              areVirtualInstructionsEnabled:
                                description: Whether virtualization instructions are
                                  available. For example, Secure Virtual Machine for
                                  AMD shapes or VT-x for Intel shapes.
                                type: boolean
                              isAccessControlServiceEnabled:
                                description: Whether the Access Control Service is
                                  enabled on the instance. When enabled, the platform
                                  can enforce PCIe device isolation, required for
                                  VFIO device pass-through.
                                type: boolean
                              isInputOutputMemoryManagementUnitEnabled:
                                description: Whether the input-output memory management
                                  unit is enabled.
                                type: boolean
                              isMeasuredBootEnabled:
                                description: Whether the Measured Boot feature is
                                  enabled on the instance.
                                type: boolean
                              isMemoryEncryptionEnabled:
                                description: Whether the instance is a confidential
                                  instance. If this value is `true`, the instance
                                  is a confidential instance. The default value is
                                  `false`.
                                type: boolean
                              isSecureBootEnabled:
                                description: Whether Secure Boot is enabled on the
                                  instance.
                                type: boolean
                              isSymmetricMultiThreadingEnabled:
                                description: Whether symmetric multithreading is enabled
                                  on the instance. Symmetric multithreading is also
                                  called simultaneous multithreading (SMT) or Intel
                                  Hyper-Threading. Intel and AMD processors have two
                                  hardware execution threads per core (OCPU). SMT
                                  permits multiple independent threads of execution,
                                  to better use the resources and increase the efficiency
                                  of the CPU. When multithreading is disabled, only
                                  one thread is permitted to run on each core, which
                                  can provide higher or more predictable performance
                                  for some workloads.
                                type: boolean
                              isTrustedPlatformModuleEnabled:
                                description: Whether the Trusted Platform Module (TPM)
                                  is enabled on the instance.
                                type: boolean
                              numaNodesPerSocket:
                                description: 'The number of NUMA nodes per socket
                                  (NPS). The following values are supported: * `NPS0`
                                  * `NPS1` * `NPS2` * `NPS4`'
                                type: string
                              percentageOfCoresEnabled:
                                description: The percentage of cores enabled. Value
                                  must be a multiple of 25%. If the requested percentage
                                  results in a fractional number of cores, the system
                                  rounds up the number of cores across processors
                                  and provisions an instance with a whole number of
                                  cores. If the applications that you run on the instance
                                  use a core-based licensing model and need fewer
                                  cores than the full size of the shape, you can disable
                                  cores to reduce your licensing costs. The instance
                                  itself is billed for the full shape, regardless
                                  of whether all cores are enabled.
                                type: integer
                            type: object
                          amdVmPlatformConfig:
                            description: AmdMilanBmPlatformConfig describe AMD VM
                              platform configuration
                            properties:
                              isMeasuredBootEnabled:
                                description: Whether the Measured Boot feature is
                                  enabled on the instance.
                                type: boolean
                              isMemoryEncryptionEnabled:
                                description: Whether the instance is a confidential
                                  instance. If this value is `true`, the instance
                                  is a confidential instance. The default value is
                                  `false`.
                                type: boolean
                              isSecureBootEnabled:
                                description: Whether Secure Boot is enabled on the
                                  instance.
                                type: boolean
                              isTrustedPlatformModuleEnabled:
                                description: Whether the Trusted Platform Module (TPM)
                                  is enabled on the instance.
                                type: boolean
                            type: object
                          intelIcelakeBmPlatformConfig:
                            description: AmdMilanBmPlatformConfig describe Intel Skylke
                              BM platform configuration
                            properties:
                              isInputOutputMemoryManagementUnitEnabled:
                                description: Whether the input-output memory management
                                  unit is enabled.
                                type: boolean
                              isMeasuredBootEnabled:
                                description: Whether the Measured Boot feature is
                                  enabled on the instance.
                                type: boolean
                              isMemoryEncryptionEnabled:
                                description: Whether the instance is a confidential
                                  instance. If this value is `true`, the instance
                                  is a confidential instance. The default value is
                                  `false`.
                                type: boolean
                              isSecureBootEnabled:
                                description: Whether Secure Boot is enabled on the
                                  instance.
                                type: boolean
                              isSymmetricMultiThreadingEnabled:
                                description: Whether symmetric multithreading is enabled
                                  on the instance. Symmetric multithreading is also
                                  called simultaneous multithreading (SMT) or Intel
                                  Hyper-Threading. Intel and AMD processors have two
                                  hardware execution threads per core (OCPU). SMT
                                  permits multiple independent threads of execution,
                                  to better use the resources and increase the efficiency
                                  of the CPU. When multithreading is disabled, only
                                  one thread is permitted to run on each core, which
                                  can provide higher or more predictable performance
                                  for some workloads.
                                type: boolean
                              isTrustedPlatformModuleEnabled:
                                description: Whether the Trusted Platform Module (TPM)
                                  is enabled on the instance.
                                type: boolean
                              numaNodesPerSocket:
                                description: 'The number of NUMA nodes per socket
                                  (NPS). The following values are supported: * `NPS1`
                                  * `NPS2`'
                                type: string
                              percentageOfCoresEnabled:
                                description: The percentage of cores enabled. Value
                                  must be a multiple of 25%. If the requested percentage
                                  results in a fractional number of cores, the system
                                  rounds up the number of cores across processors
                                  and provisions an instance with a whole number of
                                  cores. If the applications that you run on the instance
                                  use a core-based licensing model and need fewer
                                  cores than the full size of the shape, you can disable
                                  cores to reduce your licensing costs. The instance
                                  itself is billed for the full shape, regardless
                                  of whether all cores are enabled.
                                type: integer
                            type: object
                          intelSkylakeBmPlatformConfig:
                            description: AmdMilanBmPlatformConfig describe Intel Skylke
                              BM platform configuration
                            properties:
                              isMeasuredBootEnabled:
                                description: Whether the Measured Boot feature is
                                  enabled on the instance.
                                type: boolean
                              isMemoryEncryptionEnabled:
                                description: Whether the instance is a confidential
                                  instance. If this value is `true`, the instance
                                  is a confidential instance. The default value is
                                  `false`.
                                type: boolean
                              isSecureBootEnabled:
                                description: Whether Secure Boot is enabled on the
                                  instance.
                                type: boolean
                              isTrustedPlatformModuleEnabled:
                                description: Whether the Trusted Platform Module (TPM)
                                  is enabled on the instance.
                                type: boolean
                            type: object
                          intelVmPlatformConfig:
                            description: AmdMilanBmPlatformConfig describe Intel VM
                              platform configuration
                            properties:
                              isMeasuredBootEnabled:
                                description: Whether the Measured Boot feature is
                                  enabled on the instance.
                                type: boolean
                              isMemoryEncryptionEnabled:
                                description: Whether the instance is a confidential
                                  instance. If this value is `true`, the instance
                                  is a confidential instance. The default value is
                                  `false`.
                                type: boolean
                              isSecureBootEnabled:
                                description: Whether Secure Boot is enabled on the
                                  instance.
                                type: boolean
                              isTrustedPlatformModuleEnabled:
                                description: Whether the Trusted Platform Module (TPM)
                                  is enabled on the instance.
                                type: boolean
                            type: object
                          platformConfigType:
                            description: The type of platform configuration. Valid
                              values are * `AMD_ROME_BM_GPU` * `AMD_ROME_BM` * `INTEL_ICELAKE_BM`
                              * `AMD_VM` * `INTEL_VM` * `INTEL_SKYLAKE_BM` * `AMD_MILAN_BM`
                              Based on the enum, exactly one of the specific configuration
                              types must be set
                            type: string
                        type: object
                      preemptibleInstanceConfig:
                        description: PreemptibleInstanceConfig Configuration options
                          for preemptible instances.
                        properties:
                          terminatePreemptionAction:
                            description: TerminatePreemptionAction terminates the
                              preemptible instance when it is interrupted for eviction.
                            properties:
                              preserveBootVolume:
                                description: PreserveBootVolume defines whether to
                                  preserve the boot volume that was used to launch
                                  the preemptible instance when the instance is terminated.
                                  Defaults to false if not specified.
                                type: boolean
                            type: object
                        type: object
                      providerID:
                        description: Provider ID of the instance, this will be set
                          by Cluster API provider itself, users should not set this
                          parameter.
                        type: string
                      shape:
                        description: Shape of the instance.
                        type: string
                      shapeConfig:
                        description: The shape configuration of rhe instance, applicable
                          for flex instances.
                        properties:
                          baselineOcpuUtilization:
                            description: 'The baseline OCPU utilization for a subcore
                              burstable VM instance. Leave this attribute blank for
                              a non-burstable instance, or explicitly specify non-burstable
                              with `BASELINE_1_1`. The following values are supported:
                              - `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
                              - `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
                              - `BASELINE_1_1` - baseline usage is an entire OCPU.
                              This represents a non-burstable instance.'
                            type: string
                          memoryInGBs:
                            description: The total amount of memory available to the
                              instance, in gigabytes.
                            type: string
                          nvmes:
                            description: Nvmes defines the number of NVMe drives to
                              be used for storage. A single drive has 6.8 TB available.
                            type: integer
                          ocpus:
                            description: The total number of OCPUs available to the
                              instance.
                            type: string
                        type: object
                      subnetName:
                        description: The name of the subnet to use. The name here
                          refers to the subnets defined in the OCICluster Spec. Optional,
                          only if multiple subnets of a type is defined, else the
                          first element is used.
                        type: string
                      vnicAttachments:
                        description: VnicAttachments defines the configuration options
                          for the vnic(s) attached to the machine The network bandwidth
                          and number of VNICs scale proportionately with the number
                          of OCPUs.
                        items:
                          properties:
                            assignPublicIp:
                              description: AssignPublicIp defines whether the vnic
                                should have a public IP address
                              type: boolean
                            displayName:
                              description: DisplayName defines a user-friendly name.
                                Does not have to be unique. Avoid entering confidential
                                information.
                              type: string
                            nicIndex:
                              description: NicIndex defines which physical Network
                                Interface Card (NIC) to use You can determine which
                                NICs are active for a shape by reviewing the https://docs.oracle.com/en-us/iaas/Content/Compute/References/computeshapes.htm
                              type: integer
                            subnetName:
                              description: SubnetName defines the subnet name to use
                                for the VNIC Defaults to the "worker" subnet if not
                                provided
                              type: string
                            vnicAttachmentId:
                              description: VnicAttachmentId defines the ID of the
                                VnicAttachment
                              type: string
                          required:
                          - displayName
                          type: object
                        type: array
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-oci-system/capoci-serving-cert
    controller-gen.kubebuilder.io/version: v0.10.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ocimanagedclusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: capoci-webhook-service
          namespace: cluster-api-provider-oci-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: OCIManagedCluster
    listKind: OCIManagedClusterList
    plural: ocimanagedclusters
    singular: ocimanagedcluster
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: OCIManagedCluster is the Schema for the ocimanagedclusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIManagedClusterSpec defines the desired state of OCI OKE
              Cluster
            properties:
              compartmentId:
                description: Compartment to create the cluster network.
                type: string
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane. This will not be set by the
                  user, this will be updated by the Cluster Reconciler after OKe cluster
                  has been created and the cluster has an endpoint address
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              definedTags:
                additionalProperties:
                  additionalProperties:
                    type: string
                  type: object
                description: 'Defined tags for this resource. Each key is predefined
                  and scoped to a namespace. For more information, see Resource Tags
                  (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                  Example: `{"Operations": {"CostCenter": "42"}}`'
                type: object
              freeformTags:
                additionalProperties:
                  type: string
                description: Free-form tags for this resource.
                type: object
              identityRef:
                description: IdentityRef is a reference to an identity(principal)
                  to be used when reconciling this cluster
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              networkSpec:
                description: NetworkSpec encapsulates all things related to OCI network.
                properties:
                  apiServerLoadBalancer:
                    description: API Server LB configuration.
                    properties:
                      loadBalancerId:
                        description: ID of Load Balancer.
                        type: string
                      name:
                        description: LoadBalancer Name.
                        type: string
                    type: object
                  skipNetworkManagement:
                    description: SkipNetworkManagement defines if the networking spec(VCN
                      related) specified by the user needs to be reconciled(actioned-upon)
                      or used as it is. APIServerLB will still be reconciled.
                    type: boolean
                  vcn:
                    description: VCN configuration.
                    properties:
                      cidr:
                        description: VCN CIDR.
                        type: string
                      id:
                        description: VCN OCID.
                        type: string
                      internetGatewayId:
                        description: ID of Internet Gateway.
                        type: string
                      name:
                        description: VCN Name.
                        type: string
                      natGatewayId:
                        description: ID of Nat Gateway.
                        type: string
                      networkSecurityGroups:
                        description: NetworkSecurityGroups is the configuration for
                          the Network Security Groups required in the VCN.
                        items:
                          description: NSG defines configuration for a Network Security
                            Group. https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/networksecuritygroups.htm
                          properties:
                            egressRules:
                              description: EgressRules on the NSG.
                              items:
                                description: EgressSecurityRuleForNSG is EgressSecurityRule
                                  for NSG.
                                properties:
                                  egressRule:
                                    description: EgressSecurityRule A rule for allowing
                                      outbound IP packets.
                                    properties:
                                      description:
                                        description: An optional description of your
                                          choice for the rule.
                                        type: string
                                      destination:
                                        description: 'Conceptually, this is the range
                                          of IP addresses that a packet originating
                                          from the instance can go to. Allowed values:
                                          * IP address range in CIDR notation. For
                                          example: `192.168.1.0/24` or `2001:0db8:0123:45::/56`
                                          Note that IPv6 addressing is currently supported
                                          only in certain regions. See IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                          * The `cidrBlock` value for a Service, if
                                          you''re setting up a security list rule
                                          for traffic destined for a particular `Service`
                                          through a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                        type: string
                                      destinationType:
                                        description: 'Type of destination for the
                                          rule. The default is `CIDR_BLOCK`. Allowed
                                          values: * `CIDR_BLOCK`: If the rule''s `destination`
                                          is an IP address range in CIDR notation.
                                          * `SERVICE_CIDR_BLOCK`: If the rule''s `destination`
                                          is the `cidrBlock` value for a Service (the
                                          rule is for traffic destined for a particular
                                          `Service` through a service gateway).'
                                        type: string
                                      icmpOptions:
                                        description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                        properties:
                                          code:
                                            description: The ICMP code (optional).
                                            type: integer
                                          type:
                                            description: The ICMP type.
                                            type: integer
                                        type: object
                                      isStateless:
                                        description: A stateless rule allows traffic
                                          in one direction. Remember to add a corresponding
                                          stateless rule in the other direction if
                                          you need to support bidirectional traffic.
                                          For example, if egress traffic allows TCP
                                          destination port 80, there should be an
                                          ingress rule to allow TCP source port 80.
                                          Defaults to false, which means the rule
                                          is stateful and a corresponding rule is
                                          not necessary for bidirectional traffic.
                                        type: boolean
                                      protocol:
                                        description: The transport protocol. Specify
                                          either `all` or an IPv4 protocol number
                                          as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                          Options are supported only for ICMP ("1"),
                                          TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                        type: string
                                      tcpOptions:
                                        description: TcpOptions Optional and valid
                                          only for TCP. Use to specify particular
                                          destination ports for TCP rules. If you
                                          specify TCP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                      udpOptions:
                                        description: UdpOptions Optional and valid
                                          only for UDP. Use to specify particular
                                          destination ports for UDP rules. If you
                                          specify UDP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                    type: object
                                  id:
                                    description: 'EgressSecurityRule ID for NSG. Deprecated:
                                      this field is not populated and used during
                                      reconciliation'
                                    type: string
                                type: object
                              type: array
                            id:
                              description: NSG OCID.
                              type: string
                            ingressRules:
                              description: IngressRules on the NSG.
                              items:
                                description: IngressSecurityRuleForNSG is IngressSecurityRule
                                  for NSG
                                properties:
                                  id:
                                    description: 'IngressSecurityRule ID for NSG.
                                      Deprecated: this field is not populated and
                                      used during reconciliation'
                                    type: string
                                  ingressRule:
                                    description: IngressSecurityRule A rule for allowing
                                      inbound IP packets.
                                    properties:
                                      description:
                                        description: An optional description of your
                                          choice for the rule.
                                        type: string
                                      icmpOptions:
                                        description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                        properties:
                                          code:
                                            description: The ICMP code (optional).
                                            type: integer
                                          type:
                                            description: The ICMP type.
                                            type: integer
                                        type: object
                                      isStateless:
                                        description: A stateless rule allows traffic
                                          in one direction. Remember to add a corresponding
                                          stateless rule in the other direction if
                                          you need to support bidirectional traffic.
                                          For example, if ingress traffic allows TCP
                                          destination port 80, there should be an
                                          egress rule to allow TCP source port 80.
                                          Defaults to false, which means the rule
                                          is stateful and a corresponding rule is
                                          not necessary for bidirectional traffic.
                                        type: boolean
                                      protocol:
                                        description: The transport protocol. Specify
                                          either `all` or an IPv4 protocol number
                                          as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                          Options are supported only for ICMP ("1"),
                                          TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                        type: string
                                      source:
                                        description: 'Conceptually, this is the range
                                          of IP addresses that a packet coming into
                                          the instance can come from. Allowed values:
                                          * IP address range in CIDR notation. For
                                          example: `192.168.1.0/24` or `2001:0db8:0123:45::/56`.
                                          IPv6 addressing is supported for all commercial
                                          and government regions. See IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                          * The `cidrBlock` value for a Service, if
                                          you''re setting up a security list rule
                                          for traffic coming from a particular `Service`
                                          through a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                        type: string
                                      sourceType:
                                        description: 'Type of source for the rule.
                                          The default is `CIDR_BLOCK`. * `CIDR_BLOCK`:
                                          If the rule''s `source` is an IP address
                                          range in CIDR notation. * `SERVICE_CIDR_BLOCK`:
                                          If the rule''s `source` is the `cidrBlock`
                                          value for a Service (the rule is for traffic
                                          coming from a particular `Service` through
                                          a service gateway).'
                                        type: string
                                      tcpOptions:
                                        description: TcpOptions Optional and valid
                                          only for TCP. Use to specify particular
                                          destination ports for TCP rules. If you
                                          specify TCP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                      udpOptions:
                                        description: UdpOptions Optional and valid
                                          only for UDP. Use to specify particular
                                          destination ports for UDP rules. If you
                                          specify UDP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                    type: object
                                type: object
                              type: array
                            name:
                              description: NSG Name.
                              type: string
                            role:
                              description: Role defines the NSG role (eg. control-plane,
                                control-plane-endpoint, service-lb, worker).
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      privateRouteTableId:
                        description: ID of Private Route Table.
                        type: string
                      publicRouteTableId:
                        description: ID of Public Route Table.
                        type: string
                      serviceGatewayId:
                        description: ID of Service Gateway.
                        type: string
                      subnets:
                        description: Subnets is the configuration for subnets required
                          in the VCN.
                        items:
                          description: Subnet defines the configuration for a network's
                            subnet https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/managingVCNs_topic-Overview_of_VCNs_and_Subnets.htm#Overview
                          properties:
                            cidr:
                              description: Subnet CIDR.
                              type: string
                            id:
                              description: Subnet OCID.
                              type: string
                            name:
                              description: Subnet Name.
                              type: string
                            role:
                              description: Role defines the subnet role (eg. control-plane,
                                control-plane-endpoint, service-lb, worker).
                              type: string
                            securityList:
                              description: The security list associated with Subnet.
                              properties:
                                egressRules:
                                  description: EgressRules on the SecurityList.
                                  items:
                                    description: EgressSecurityRule A rule for allowing
                                      outbound IP packets.
                                    properties:
                                      description:
                                        description: An optional description of your
                                          choice for the rule.
                                        type: string
                                      destination:
                                        description: 'Conceptually, this is the range
                                          of IP addresses that a packet originating
                                          from the instance can go to. Allowed values:
                                          * IP address range in CIDR notation. For
                                          example: `192.168.1.0/24` or `2001:0db8:0123:45::/56`
                                          Note that IPv6 addressing is currently supported
                                          only in certain regions. See IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                          * The `cidrBlock` value for a Service, if
                                          you''re setting up a security list rule
                                          for traffic destined for a particular `Service`
                                          through a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                        type: string
                                      destinationType:
                                        description: 'Type of destination for the
                                          rule. The default is `CIDR_BLOCK`. Allowed
                                          values: * `CIDR_BLOCK`: If the rule''s `destination`
                                          is an IP address range in CIDR notation.
                                          * `SERVICE_CIDR_BLOCK`: If the rule''s `destination`
                                          is the `cidrBlock` value for a Service (the
                                          rule is for traffic destined for a particular
                                          `Service` through a service gateway).'
                                        type: string
                                      icmpOptions:
                                        description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                        properties:
                                          code:
                                            description: The ICMP code (optional).
                                            type: integer
                                          type:
                                            description: The ICMP type.
                                            type: integer
                                        type: object
                                      isStateless:
                                        description: A stateless rule allows traffic
                                          in one direction. Remember to add a corresponding
                                          stateless rule in the other direction if
                                          you need to support bidirectional traffic.
                                          For example, if egress traffic allows TCP
                                          destination port 80, there should be an
                                          ingress rule to allow TCP source port 80.
                                          Defaults to false, which means the rule
                                          is stateful and a corresponding rule is
                                          not necessary for bidirectional traffic.
                                        type: boolean
                                      protocol:
                                        description: The transport protocol. Specify
                                          either `all` or an IPv4 protocol number
                                          as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                          Options are supported only for ICMP ("1"),
                                          TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                        type: string
                                      tcpOptions:
                                        description: TcpOptions Optional and valid
                                          only for TCP. Use to specify particular
                                          destination ports for TCP rules. If you
                                          specify TCP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                      udpOptions:
                                        description: UdpOptions Optional and valid
                                          only for UDP. Use to specify particular
                                          destination ports for UDP rules. If you
                                          specify UDP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                    type: object
                                  type: array
                                id:
                                  description: ID of the SecurityList.
                                  type: string
                                ingressRules:
                                  description: IngressRules on the SecurityList.
                                  items:
                                    description: IngressSecurityRule A rule for allowing
                                      inbound IP packets.
                                    properties:
                                      description:
                                        description: An optional description of your
                                          choice for the rule.
                                        type: string
                                      icmpOptions:
                                        description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                        properties:
                                          code:
                                            description: The ICMP code (optional).
                                            type: integer
                                          type:
                                            description: The ICMP type.
                                            type: integer
                                        type: object
                                      isStateless:
                                        description: A stateless rule allows traffic
                                          in one direction. Remember to add a corresponding
                                          stateless rule in the other direction if
                                          you need to support bidirectional traffic.
                                          For example, if ingress traffic allows TCP
                                          destination port 80, there should be an
                                          egress rule to allow TCP source port 80.
                                          Defaults to false, which means the rule
                                          is stateful and a corresponding rule is
                                          not necessary for bidirectional traffic.
                                        type: boolean
                                      protocol:
                                        description: The transport protocol. Specify
                                          either `all` or an IPv4 protocol number
                                          as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                          Options are supported only for ICMP ("1"),
                                          TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                        type: string
                                      source:
                                        description: 'Conceptually, this is the range
                                          of IP addresses that a packet coming into
                                          the instance can come from. Allowed values:
                                          * IP address range in CIDR notation. For
                                          example: `192.168.1.0/24` or `2001:0db8:0123:45::/56`.
                                          IPv6 addressing is supported for all commercial
                                          and government regions. See IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                          * The `cidrBlock` value for a Service, if
                                          you''re setting up a security list rule
                                          for traffic coming from a particular `Service`
                                          through a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                        type: string
                                      sourceType:
                                        description: 'Type of source for the rule.
                                          The default is `CIDR_BLOCK`. * `CIDR_BLOCK`:
                                          If the rule''s `source` is an IP address
                                          range in CIDR notation. * `SERVICE_CIDR_BLOCK`:
                                          If the rule''s `source` is the `cidrBlock`
                                          value for a Service (the rule is for traffic
                                          coming from a particular `Service` through
                                          a service gateway).'
                                        type: string
                                      tcpOptions:
                                        description: TcpOptions Optional and valid
                                          only for TCP. Use to specify particular
                                          destination ports for TCP rules. If you
                                          specify TCP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                      udpOptions:
                                        description: UdpOptions Optional and valid
                                          only for UDP. Use to specify particular
                                          destination ports for UDP rules. If you
                                          specify UDP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                    type: object
                                  type: array
                                name:
                                  description: SecurityList Name.
                                  type: string
                              type: object
                            type:
                              description: Type defines the subnet type (e.g. public,
                                private).
                              type: string
                          required:
                          - name
                          - role
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    type: object
                  vcnPeering:
                    description: VCNPeering configuration.
                    properties:
                      drg:
                        description: DRG configuration refers to the DRG which has
                          to be created if required. If management cluster and workload
                          cluster shares the same DRG, this fields is not required
                          to be specified.
                        properties:
                          id:
                            description: ID is the OCID for the created DRG.
                            type: string
                          manage:
                            description: Manage defines whether the DRG has to be
                              managed(including create). If set to false(the default)
                              the ID has to be specified by the user to a valid DRG
                              ID to which the VCN has to be attached.
                            type: boolean
                          name:
                            description: Name is the name of the created DRG.
                            type: string
                          vcnAttachmentId:
                            description: VcnAttachmentId is the ID of the VCN attachment
                              of the DRG. The workload cluster VCN can be attached
                              to either the management cluster VCN if they are sharing
                              the same DRG or to the workload cluster DRG.
                            type: string
                        type: object
                      peerRouteRules:
                        description: PeerRouteRules defines the routing rules which
                          will be added to the private route tables of the workload
                          cluster VCN. The routes defined here will be directed to
                          DRG.
                        items:
                          description: PeerRouteRule defines a Route Rule to be routed
                            via a DRG.
                          properties:
                            vcnCIDRRange:
                              description: VCNCIDRRange is the CIDR Range of peer
                                VCN to which the workload cluster VCN will be peered.
                                The CIDR range is required to add the route rule in
                                the workload cluster VCN, the route rule will forward
                                any traffic to the CIDR to the DRG.
                              type: string
                          type: object
                        type: array
                      remotePeeringConnections:
                        description: RemotePeeringConnections defines the RPC connections
                          which be established with the workload cluster DRG.
                        items:
                          description: RemotePeeringConnection is used to peer VCNs
                            residing in different regions(typically). Remote VCN Peering
                            is explained here - https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/remoteVCNpeering.htm
                          properties:
                            managePeerRPC:
                              description: ManagePeerRPC will define if the Peer VCN
                                needs to be managed. If set to true a Remote Peering
                                Connection will be created in the Peer DRG and the
                                connection will be created between local and peer
                                RPC.
                              type: boolean
                            peerDRGId:
                              description: PeerDRGId defines the DRG ID of the peer.
                              type: string
                            peerRPCConnectionId:
                              description: PeerRPCConnectionId defines the RPC ID
                                of peer. If ManagePeerRPC is set to true this will
                                be created by Cluster API Provider for OCI, otherwise
                                this has be defined by the user.
                              type: string
                            peerRegionName:
                              description: PeerRegionName defined the region name
                                of Peer VCN.
                              type: string
                            rpcConnectionId:
                              description: RPCConnectionId is the connection ID of
                                the connection between peer and local RPC.
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              ociResourceIdentifier:
                description: The unique ID which will be used to tag all the resources
                  created by this Cluster. The tag will be used to identify resources
                  belonging to this cluster. this will be auto-generated and should
                  not be set by the user.
                type: string
              region:
                description: Region the cluster operates in. It must be one of available
                  regions in Region Identifier format. See https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
                type: string
            type: object
          status:
            description: OCIManagedClusterStatus defines the observed state of OCICluster
            properties:
              availabilityDomains:
                additionalProperties:
                  description: OCIAvailabilityDomain contains information about an
                    Availability Domain (AD).
                  properties:
                    faultDomains:
                      description: 'FaultDomains a list of fault domain (FD) names.
                        Example: ["FAULT-DOMAIN-1"]'
                      items:
                        type: string
                      type: array
                    name:
                      description: 'Name is the AD''s full name. Example: Uocm:PHX-AD-1'
                      type: string
                  type: object
                description: AvailabilityDomains encapsulates the clusters Availability
                  Domain (AD) information in a map where the map key is the AD name
                  and the struct is details about the AD.
                type: object
              conditions:
                description: NetworkSpec encapsulates all things related to OCI network.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureDomains:
                additionalProperties:
                  description: FailureDomainSpec is the Schema for Cluster API failure
                    domains. It allows controllers to understand how many failure
                    domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: FailureDomains is a slice of FailureDomains.
                type: object
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: OCIManagedCluster is the Schema for the ocimanagedclusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIManagedClusterSpec defines the desired state of OCI OKE
              Cluster
            properties:
              availabilityDomains:
                additionalProperties:
                  description: OCIAvailabilityDomain contains information about an
                    Availability Domain (AD).
                  properties:
                    faultDomains:
                      description: 'FaultDomains a list of fault domain (FD) names.
                        Example: ["FAULT-DOMAIN-1"]'
                      items:
                        type: string
                      type: array
                    name:
                      description: 'Name is the AD''s full name. Example: Uocm:PHX-AD-1'
                      type: string
                  type: object
                description: AvailabilityDomains encapsulates the clusters Availability
                  Domain (AD) information in a map where the map key is the AD name
                  and the struct is details about the AD.
                type: object
              compartmentId:
                description: Compartment to create the cluster network.
                type: string
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane. This will not be set by the
                  user, this will be updated by the Cluster Reconciler after OKe cluster
                  has been created and the cluster has an endpoint address
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              definedTags:
                additionalProperties:
                  additionalProperties:
                    type: string
                  type: object
                description: 'Defined tags for this resource. Each key is predefined
                  and scoped to a namespace. For more information, see Resource Tags
                  (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                  Example: `{"Operations": {"CostCenter": "42"}}`'
                type: object
              freeformTags:
                additionalProperties:
                  type: string
                description: Free-form tags for this resource.
                type: object
              hostUrl:
                description: ClientOverrides allows the default client SDK URLs to
                  be changed.
                nullable: true
                properties:
                  certOverride:
                    description: CertOverride is a secret that contains information
                      about a cert override used by all the OCI SDK clients. The secret
                      must contain data with a `cert`property.
                    nullable: true
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  computeClientUrl:
                    description: ComputeClientUrl allows the default compute SDK client
                      URL to be changed.
                    nullable: true
                    type: string
                  computeManagementClientUrl:
                    description: ComputeManagementClientUrl allows the default compute
                      management SDK client URL to be changed.
                    nullable: true
                    type: string
                  containerEngineClientUrl:
                    description: ContainerEngineClientUrl allows the default container
                      engine SDK client URL to be changed.
                    nullable: true
                    type: string
                  identityClientUrl:
                    description: IdentityClientUrl allows the default identity SDK
                      client URL to be changed.
                    nullable: true
                    type: string
                  loadBalancerClientUrl:
                    description: LoadBalancerClientUrl allows the default load balancer
                      SDK client URL to be changed.
                    nullable: true
                    type: string
                  networkLoadBalancerClientUrl:
                    description: NetworkLoadBalancerClientUrl allows the default NLB
                      SDK client URL to be changed.
                    nullable: true
                    type: string
                  vCNClientUrl:
                    description: VCNClientUrl allows the default vcn SDK client URL
                      to be changed.
                    nullable: true
                    type: string
                type: object
              identityRef:
                description: IdentityRef is a reference to an identity(principal)
                  to be used when reconciling this cluster
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              networkSpec:
                description: NetworkSpec encapsulates all things related to OCI network.
                properties:
                  apiServerLoadBalancer:
                    description: API Server LB configuration.
                    properties:
                      loadBalancerId:
                        description: ID of Load Balancer.
                        type: string
                      loadBalancerType:
                        description: 'Type of Load Balancer: NLB (default) or LBaaS.'
                        type: string
                      name:
                        description: LoadBalancer Name.
                        type: string
                    type: object
                  skipNetworkManagement:
                    description: SkipNetworkManagement defines if the networking spec(VCN
                      related) specified by the user needs to be reconciled(actioned-upon)
                      or used as it is. APIServerLB will still be reconciled.
                    type: boolean
                  vcn:
                    description: VCN configuration.
                    properties:
                      cidr:
                        description: VCN CIDR.
                        type: string
                      id:
                        description: VCN OCID.
                        type: string
                      internetGateway:
                        description: Configuration for Internet Gateway.
                        properties:
                          id:
                            description: ID of Internet Gateway.
                            type: string
                          skip:
                            description: Skip specifies whether to skip creating internet
                              gateway even if any one Subnet is public.
                            type: boolean
                        type: object
                      name:
                        description: VCN Name.
                        type: string
                      natGateway:
                        description: Configuration for NAT Gateway.
                        properties:
                          id:
                            description: ID of Nat Gateway.
                            type: string
                          skip:
                            description: Skip specifies whether to skip creating NAT
                              gateway even if any one Subnet is private.
                            type: boolean
                        type: object
                      networkSecurityGroup:
                        description: Configuration for NSG management.
                        properties:
                          list:
                            description: NetworkSecurityGroup is the configuration
                              for the Network Security Groups required in the VCN.
                            items:
                              description: NSG defines configuration for a Network
                                Security Group. https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/networksecuritygroups.htm
                              properties:
                                egressRules:
                                  description: EgressRules on the NSG.
                                  items:
                                    description: EgressSecurityRuleForNSG is EgressSecurityRule
                                      for NSG.
                                    properties:
                                      egressRule:
                                        description: EgressSecurityRule A rule for
                                          allowing outbound IP packets.
                                        properties:
                                          description:
                                            description: An optional description of
                                              your choice for the rule.
                                            type: string
                                          destination:
                                            description: 'Conceptually, this is the
                                              range of IP addresses that a packet
                                              originating from the instance can go
                                              to. Allowed values: * IP address range
                                              in CIDR notation. For example: `192.168.1.0/24`
                                              or `2001:0db8:0123:45::/56` Note that
                                              IPv6 addressing is currently supported
                                              only in certain regions. See IPv6 Addresses
                                              (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                              * The `cidrBlock` value for a Service,
                                              if you''re setting up a security list
                                              rule for traffic destined for a particular
                                              `Service` through a service gateway.
                                              For example: `oci-phx-objectstorage`.'
                                            type: string
                                          destinationType:
                                            description: 'Type of destination for
                                              the rule. The default is `CIDR_BLOCK`.
                                              Allowed values: * `CIDR_BLOCK`: If the
                                              rule''s `destination` is an IP address
                                              range in CIDR notation. * `SERVICE_CIDR_BLOCK`:
                                              If the rule''s `destination` is the
                                              `cidrBlock` value for a Service (the
                                              rule is for traffic destined for a particular
                                              `Service` through a service gateway).'
                                            type: string
                                          icmpOptions:
                                            description: 'IcmpOptions Optional and
                                              valid only for ICMP and ICMPv6. Use
                                              to specify a particular ICMP type and
                                              code as defined in: - ICMP Parameters
                                              (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                              - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                              If you specify ICMP or ICMPv6 as the
                                              protocol but omit this object, then
                                              all ICMP types and codes are allowed.
                                              If you do provide this object, the type
                                              is required and the code is optional.
                                              To enable MTU negotiation for ingress
                                              internet traffic via IPv4, make sure
                                              to allow type 3 ("Destination Unreachable")
                                              code 4 ("Fragmentation Needed and Don''t
                                              Fragment was Set"). If you need to specify
                                              multiple codes for a single type, create
                                              a separate security list rule for each.'
                                            properties:
                                              code:
                                                description: The ICMP code (optional).
                                                type: integer
                                              type:
                                                description: The ICMP type.
                                                type: integer
                                            type: object
                                          isStateless:
                                            description: A stateless rule allows traffic
                                              in one direction. Remember to add a
                                              corresponding stateless rule in the
                                              other direction if you need to support
                                              bidirectional traffic. For example,
                                              if egress traffic allows TCP destination
                                              port 80, there should be an ingress
                                              rule to allow TCP source port 80. Defaults
                                              to false, which means the rule is stateful
                                              and a corresponding rule is not necessary
                                              for bidirectional traffic.
                                            type: boolean
                                          protocol:
                                            description: The transport protocol. Specify
                                              either `all` or an IPv4 protocol number
                                              as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                              Options are supported only for ICMP
                                              ("1"), TCP ("6"), UDP ("17"), and ICMPv6
                                              ("58").
                                            type: string
                                          tcpOptions:
                                            description: TcpOptions Optional and valid
                                              only for TCP. Use to specify particular
                                              destination ports for TCP rules. If
                                              you specify TCP as the protocol but
                                              omit this object, then all destination
                                              ports are allowed.
                                            properties:
                                              destinationPortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                              sourcePortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                            type: object
                                          udpOptions:
                                            description: UdpOptions Optional and valid
                                              only for UDP. Use to specify particular
                                              destination ports for UDP rules. If
                                              you specify UDP as the protocol but
                                              omit this object, then all destination
                                              ports are allowed.
                                            properties:
                                              destinationPortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                              sourcePortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                            type: object
                                        type: object
                                    type: object
                                  type: array
                                id:
                                  description: NSG OCID.
                                  type: string
                                ingressRules:
                                  description: IngressRules on the NSG.
                                  items:
                                    description: IngressSecurityRuleForNSG is IngressSecurityRule
                                      for NSG
                                    properties:
                                      ingressRule:
                                        description: IngressSecurityRule A rule for
                                          allowing inbound IP packets.
                                        properties:
                                          description:
                                            description: An optional description of
                                              your choice for the rule.
                                            type: string
                                          icmpOptions:
                                            description: 'IcmpOptions Optional and
                                              valid only for ICMP and ICMPv6. Use
                                              to specify a particular ICMP type and
                                              code as defined in: - ICMP Parameters
                                              (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                              - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                              If you specify ICMP or ICMPv6 as the
                                              protocol but omit this object, then
                                              all ICMP types and codes are allowed.
                                              If you do provide this object, the type
                                              is required and the code is optional.
                                              To enable MTU negotiation for ingress
                                              internet traffic via IPv4, make sure
                                              to allow type 3 ("Destination Unreachable")
                                              code 4 ("Fragmentation Needed and Don''t
                                              Fragment was Set"). If you need to specify
                                              multiple codes for a single type, create
                                              a separate security list rule for each.'
                                            properties:
                                              code:
                                                description: The ICMP code (optional).
                                                type: integer
                                              type:
                                                description: The ICMP type.
                                                type: integer
                                            type: object
                                          isStateless:
                                            description: A stateless rule allows traffic
                                              in one direction. Remember to add a
                                              corresponding stateless rule in the
                                              other direction if you need to support
                                              bidirectional traffic. For example,
                                              if ingress traffic allows TCP destination
                                              port 80, there should be an egress rule
                                              to allow TCP source port 80. Defaults
                                              to false, which means the rule is stateful
                                              and a corresponding rule is not necessary
                                              for bidirectional traffic.
                                            type: boolean
                                          protocol:
                                            description: The transport protocol. Specify
                                              either `all` or an IPv4 protocol number
                                              as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                              Options are supported only for ICMP
                                              ("1"), TCP ("6"), UDP ("17"), and ICMPv6
                                              ("58").
                                            type: string
                                          source:
                                            description: 'Conceptually, this is the
                                              range of IP addresses that a packet
                                              coming into the instance can come from.
                                              Allowed values: * IP address range in
                                              CIDR notation. For example: `192.168.1.0/24`
                                              or `2001:0db8:0123:45::/56`. IPv6 addressing
                                              is supported for all commercial and
                                              government regions. See IPv6 Addresses
                                              (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                              * The `cidrBlock` value for a Service,
                                              if you''re setting up a security list
                                              rule for traffic coming from a particular
                                              `Service` through a service gateway.
                                              For example: `oci-phx-objectstorage`.'
                                            type: string
                                          sourceType:
                                            description: 'Type of source for the rule.
                                              The default is `CIDR_BLOCK`. * `CIDR_BLOCK`:
                                              If the rule''s `source` is an IP address
                                              range in CIDR notation. * `SERVICE_CIDR_BLOCK`:
                                              If the rule''s `source` is the `cidrBlock`
                                              value for a Service (the rule is for
                                              traffic coming from a particular `Service`
                                              through a service gateway).'
                                            type: string
                                          tcpOptions:
                                            description: TcpOptions Optional and valid
                                              only for TCP. Use to specify particular
                                              destination ports for TCP rules. If
                                              you specify TCP as the protocol but
                                              omit this object, then all destination
                                              ports are allowed.
                                            properties:
                                              destinationPortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                              sourcePortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                            type: object
                                          udpOptions:
                                            description: UdpOptions Optional and valid
                                              only for UDP. Use to specify particular
                                              destination ports for UDP rules. If
                                              you specify UDP as the protocol but
                                              omit this object, then all destination
                                              ports are allowed.
                                            properties:
                                              destinationPortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                              sourcePortRange:
                                                description: PortRange The representation
                                                  of PortRange.
                                                properties:
                                                  max:
                                                    description: The maximum port
                                                      number, which must not be less
                                                      than the minimum port number.
                                                      To specify a single port number,
                                                      set both the min and max to
                                                      the same value.
                                                    type: integer
                                                  min:
                                                    description: The minimum port
                                                      number, which must not be greater
                                                      than the maximum port number.
                                                    type: integer
                                                type: object
                                            type: object
                                        type: object
                                    type: object
                                  type: array
                                name:
                                  description: NSG Name.
                                  type: string
                                role:
                                  description: Role defines the NSG role (eg. control-plane,
                                    control-plane-endpoint, service-lb, worker).
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          skip:
                            description: Skip specifies whether to skip creating network
                              security groups.
                            type: boolean
                        type: object
                      routeTable:
                        description: Configuration for Route table.
                        properties:
                          privateRouteTableId:
                            description: ID of Private Route Table.
                            type: string
                          publicRouteTableId:
                            description: ID of Public Route Table.
                            type: string
                          skip:
                            description: Skip specifies whether to skip creating Route
                              table.
                            type: boolean
                        type: object
                      serviceGateway:
                        description: Configuration for Service Gateway.
                        properties:
                          id:
                            description: ID of Service Gateway.
                            type: string
                          skip:
                            description: Skip specifies whether to skip creating Service
                              gateway.
                            type: boolean
                        type: object
                      subnets:
                        description: Subnets is the configuration for subnets required
                          in the VCN.
                        items:
                          description: Subnet defines the configuration for a network's
                            subnet https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/managingVCNs_topic-Overview_of_VCNs_and_Subnets.htm#Overview
                          properties:
                            cidr:
                              description: Subnet CIDR.
                              type: string
                            id:
                              description: Subnet OCID.
                              type: string
                            name:
                              description: Subnet Name.
                              type: string
                            role:
                              description: Role defines the subnet role (eg. control-plane,
                                control-plane-endpoint, service-lb, worker).
                              type: string
                            securityList:
                              description: The security list associated with Subnet.
                              properties:
                                egressRules:
                                  description: EgressRules on the SecurityList.
                                  items:
                                    description: EgressSecurityRule A rule for allowing
                                      outbound IP packets.
                                    properties:
                                      description:
                                        description: An optional description of your
                                          choice for the rule.
                                        type: string
                                      destination:
                                        description: 'Conceptually, this is the range
                                          of IP addresses that a packet originating
                                          from the instance can go to. Allowed values:
                                          * IP address range in CIDR notation. For
                                          example: `192.168.1.0/24` or `2001:0db8:0123:45::/56`
                                          Note that IPv6 addressing is currently supported
                                          only in certain regions. See IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                          * The `cidrBlock` value for a Service, if
                                          you''re setting up a security list rule
                                          for traffic destined for a particular `Service`
                                          through a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                        type: string
                                      destinationType:
                                        description: 'Type of destination for the
                                          rule. The default is `CIDR_BLOCK`. Allowed
                                          values: * `CIDR_BLOCK`: If the rule''s `destination`
                                          is an IP address range in CIDR notation.
                                          * `SERVICE_CIDR_BLOCK`: If the rule''s `destination`
                                          is the `cidrBlock` value for a Service (the
                                          rule is for traffic destined for a particular
                                          `Service` through a service gateway).'
                                        type: string
                                      icmpOptions:
                                        description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                        properties:
                                          code:
                                            description: The ICMP code (optional).
                                            type: integer
                                          type:
                                            description: The ICMP type.
                                            type: integer
                                        type: object
                                      isStateless:
                                        description: A stateless rule allows traffic
                                          in one direction. Remember to add a corresponding
                                          stateless rule in the other direction if
                                          you need to support bidirectional traffic.
                                          For example, if egress traffic allows TCP
                                          destination port 80, there should be an
                                          ingress rule to allow TCP source port 80.
                                          Defaults to false, which means the rule
                                          is stateful and a corresponding rule is
                                          not necessary for bidirectional traffic.
                                        type: boolean
                                      protocol:
                                        description: The transport protocol. Specify
                                          either `all` or an IPv4 protocol number
                                          as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                          Options are supported only for ICMP ("1"),
                                          TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                        type: string
                                      tcpOptions:
                                        description: TcpOptions Optional and valid
                                          only for TCP. Use to specify particular
                                          destination ports for TCP rules. If you
                                          specify TCP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                      udpOptions:
                                        description: UdpOptions Optional and valid
                                          only for UDP. Use to specify particular
                                          destination ports for UDP rules. If you
                                          specify UDP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                    type: object
                                  type: array
                                id:
                                  description: ID of the SecurityList.
                                  type: string
                                ingressRules:
                                  description: IngressRules on the SecurityList.
                                  items:
                                    description: IngressSecurityRule A rule for allowing
                                      inbound IP packets.
                                    properties:
                                      description:
                                        description: An optional description of your
                                          choice for the rule.
                                        type: string
                                      icmpOptions:
                                        description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                        properties:
                                          code:
                                            description: The ICMP code (optional).
                                            type: integer
                                          type:
                                            description: The ICMP type.
                                            type: integer
                                        type: object
                                      isStateless:
                                        description: A stateless rule allows traffic
                                          in one direction. Remember to add a corresponding
                                          stateless rule in the other direction if
                                          you need to support bidirectional traffic.
                                          For example, if ingress traffic allows TCP
                                          destination port 80, there should be an
                                          egress rule to allow TCP source port 80.
                                          Defaults to false, which means the rule
                                          is stateful and a corresponding rule is
                                          not necessary for bidirectional traffic.
                                        type: boolean
                                      protocol:
                                        description: The transport protocol. Specify
                                          either `all` or an IPv4 protocol number
                                          as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                          Options are supported only for ICMP ("1"),
                                          TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                        type: string
                                      source:
                                        description: 'Conceptually, this is the range
                                          of IP addresses that a packet coming into
                                          the instance can come from. Allowed values:
                                          * IP address range in CIDR notation. For
                                          example: `192.168.1.0/24` or `2001:0db8:0123:45::/56`.
                                          IPv6 addressing is supported for all commercial
                                          and government regions. See IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                          * The `cidrBlock` value for a Service, if
                                          you''re setting up a security list rule
                                          for traffic coming from a particular `Service`
                                          through a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                        type: string
                                      sourceType:
                                        description: 'Type of source for the rule.
                                          The default is `CIDR_BLOCK`. * `CIDR_BLOCK`:
                                          If the rule''s `source` is an IP address
                                          range in CIDR notation. * `SERVICE_CIDR_BLOCK`:
                                          If the rule''s `source` is the `cidrBlock`
                                          value for a Service (the rule is for traffic
                                          coming from a particular `Service` through
                                          a service gateway).'
                                        type: string
                                      tcpOptions:
                                        description: TcpOptions Optional and valid
                                          only for TCP. Use to specify particular
                                          destination ports for TCP rules. If you
                                          specify TCP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                      udpOptions:
                                        description: UdpOptions Optional and valid
                                          only for UDP. Use to specify particular
                                          destination ports for UDP rules. If you
                                          specify UDP as the protocol but omit this
                                          object, then all destination ports are allowed.
                                        properties:
                                          destinationPortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                          sourcePortRange:
                                            description: PortRange The representation
                                              of PortRange.
                                            properties:
                                              max:
                                                description: The maximum port number,
                                                  which must not be less than the
                                                  minimum port number. To specify
                                                  a single port number, set both the
                                                  min and max to the same value.
                                                type: integer
                                              min:
                                                description: The minimum port number,
                                                  which must not be greater than the
                                                  maximum port number.
                                                type: integer
                                            type: object
                                        type: object
                                    type: object
                                  type: array
                                name:
                                  description: SecurityList Name.
                                  type: string
                              type: object
                            type:
                              description: Type defines the subnet type (e.g. public,
                                private).
                              type: string
                          required:
                          - name
                          - role
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    type: object
                  vcnPeering:
                    description: VCNPeering configuration.
                    properties:
                      drg:
                        description: DRG configuration refers to the DRG which has
                          to be created if required. If management cluster and workload
                          cluster shares the same DRG, this fields is not required
                          to be specified.
                        properties:
                          id:
                            description: ID is the OCID for the created DRG.
                            type: string
                          manage:
                            description: Manage defines whether the DRG has to be
                              managed(including create). If set to false(the default)
                              the ID has to be specified by the user to a valid DRG
                              ID to which the VCN has to be attached.
                            type: boolean
                          name:
                            description: Name is the name of the created DRG.
                            type: string
                          vcnAttachmentId:
                            description: VcnAttachmentId is the ID of the VCN attachment
                              of the DRG. The workload cluster VCN can be attached
                              to either the management cluster VCN if they are sharing
                              the same DRG or to the workload cluster DRG.
                            type: string
                        type: object
                      peerRouteRules:
                        description: PeerRouteRules defines the routing rules which
                          will be added to the private route tables of the workload
                          cluster VCN. The routes defined here will be directed to
                          DRG.
                        items:
                          description: PeerRouteRule defines a Route Rule to be routed
                            via a DRG.
                          properties:
                            vcnCIDRRange:
                              description: VCNCIDRRange is the CIDR Range of peer
                                VCN to which the workload cluster VCN will be peered.
                                The CIDR range is required to add the route rule in
                                the workload cluster VCN, the route rule will forward
                                any traffic to the CIDR to the DRG.
                              type: string
                          type: object
                        type: array
                      remotePeeringConnections:
                        description: RemotePeeringConnections defines the RPC connections
                          which be established with the workload cluster DRG.
                        items:
                          description: RemotePeeringConnection is used to peer VCNs
                            residing in different regions(typically). Remote VCN Peering
                            is explained here - https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/remoteVCNpeering.htm
                          properties:
                            managePeerRPC:
                              description: ManagePeerRPC will define if the Peer VCN
                                needs to be managed. If set to true a Remote Peering
                                Connection will be created in the Peer DRG and the
                                connection will be created between local and peer
                                RPC.
                              type: boolean
                            peerDRGId:
                              description: PeerDRGId defines the DRG ID of the peer.
                              type: string
                            peerRPCConnectionId:
                              description: PeerRPCConnectionId defines the RPC ID
                                of peer. If ManagePeerRPC is set to true this will
                                be created by Cluster API Provider for OCI, otherwise
                                this has be defined by the user.
                              type: string
                            peerRegionName:
                              description: PeerRegionName defined the region name
                                of Peer VCN.
                              type: string
                            rpcConnectionId:
                              description: RPCConnectionId is the connection ID of
                                the connection between peer and local RPC.
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              ociResourceIdentifier:
                description: The unique ID which will be used to tag all the resources
                  created by this Cluster. The tag will be used to identify resources
                  belonging to this cluster. this will be auto-generated and should
                  not be set by the user.
                type: string
              region:
                description: Region the cluster operates in. It must be one of available
                  regions in Region Identifier format. See https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
                type: string
            type: object
          status:
            description: OCIManagedClusterStatus defines the observed state of OCICluster
            properties:
              conditions:
                description: NetworkSpec encapsulates all things related to OCI network.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureDomains:
                additionalProperties:
                  description: FailureDomainSpec is the Schema for Cluster API failure
                    domains. It allows controllers to understand how many failure
                    domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: FailureDomains is a slice of FailureDomains.
                type: object
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ocimanagedclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: OCIManagedClusterTemplate
    listKind: OCIManagedClusterTemplateList
    plural: ocimanagedclustertemplates
    singular: ocimanagedclustertemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: OCIManagedClusterTemplate is the Schema for the ocimanagedclustertemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIManagedClusterTemplateSpec defines the desired state of
              OCIManagedClusterTemplate.
            properties:
              template:
                description: OCIManagedClusterSpec describes the data needed to create
                  an OCIManagedCluster from a template.
                properties:
                  spec:
                    description: OCIManagedClusterSpec defines the desired state of
                      OCI OKE Cluster
                    properties:
                      compartmentId:
                        description: Compartment to create the cluster network.
                        type: string
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane. This will not
                          be set by the user, this will be updated by the Cluster
                          Reconciler after OKe cluster has been created and the cluster
                          has an endpoint address
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      definedTags:
                        additionalProperties:
                          additionalProperties:
                            type: string
                          type: object
                        description: 'Defined tags for this resource. Each key is
                          predefined and scoped to a namespace. For more information,
                          see Resource Tags (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                          Example: `{"Operations": {"CostCenter": "42"}}`'
                        type: object
                      freeformTags:
                        additionalProperties:
                          type: string
                        description: Free-form tags for this resource.
                        type: object
                      identityRef:
                        description: IdentityRef is a reference to an identity(principal)
                          to be used when reconciling this cluster
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      networkSpec:
                        description: NetworkSpec encapsulates all things related to
                          OCI network.
                        properties:
                          apiServerLoadBalancer:
                            description: API Server LB configuration.
                            properties:
                              loadBalancerId:
                                description: ID of Load Balancer.
                                type: string
                              name:
                                description: LoadBalancer Name.
                                type: string
                            type: object
                          skipNetworkManagement:
                            description: SkipNetworkManagement defines if the networking
                              spec(VCN related) specified by the user needs to be
                              reconciled(actioned-upon) or used as it is. APIServerLB
                              will still be reconciled.
                            type: boolean
                          vcn:
                            description: VCN configuration.
                            properties:
                              cidr:
                                description: VCN CIDR.
                                type: string
                              id:
                                description: VCN OCID.
                                type: string
                              internetGatewayId:
                                description: ID of Internet Gateway.
                                type: string
                              name:
                                description: VCN Name.
                                type: string
                              natGatewayId:
                                description: ID of Nat Gateway.
                                type: string
                              networkSecurityGroups:
                                description: NetworkSecurityGroups is the configuration
                                  for the Network Security Groups required in the
                                  VCN.
                                items:
                                  description: NSG defines configuration for a Network
                                    Security Group. https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/networksecuritygroups.htm
                                  properties:
                                    egressRules:
                                      description: EgressRules on the NSG.
                                      items:
                                        description: EgressSecurityRuleForNSG is EgressSecurityRule
                                          for NSG.
                                        properties:
                                          egressRule:
                                            description: EgressSecurityRule A rule
                                              for allowing outbound IP packets.
                                            properties:
                                              description:
                                                description: An optional description
                                                  of your choice for the rule.
                                                type: string
                                              destination:
                                                description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet originating from the instance
                                                  can go to. Allowed values: * IP
                                                  address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56` Note that
                                                  IPv6 addressing is currently supported
                                                  only in certain regions. See IPv6
                                                  Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                  * The `cidrBlock` value for a Service,
                                                  if you''re setting up a security
                                                  list rule for traffic destined for
                                                  a particular `Service` through a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                type: string
                                              destinationType:
                                                description: 'Type of destination
                                                  for the rule. The default is `CIDR_BLOCK`.
                                                  Allowed values: * `CIDR_BLOCK`:
                                                  If the rule''s `destination` is
                                                  an IP address range in CIDR notation.
                                                  * `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `destination` is the `cidrBlock`
                                                  value for a Service (the rule is
                                                  for traffic destined for a particular
                                                  `Service` through a service gateway).'
                                                type: string
                                              icmpOptions:
                                                description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                properties:
                                                  code:
                                                    description: The ICMP code (optional).
                                                    type: integer
                                                  type:
                                                    description: The ICMP type.
                                                    type: integer
                                                type: object
                                              isStateless:
                                                description: A stateless rule allows
                                                  traffic in one direction. Remember
                                                  to add a corresponding stateless
                                                  rule in the other direction if you
                                                  need to support bidirectional traffic.
                                                  For example, if egress traffic allows
                                                  TCP destination port 80, there should
                                                  be an ingress rule to allow TCP
                                                  source port 80. Defaults to false,
                                                  which means the rule is stateful
                                                  and a corresponding rule is not
                                                  necessary for bidirectional traffic.
                                                type: boolean
                                              protocol:
                                                description: The transport protocol.
                                                  Specify either `all` or an IPv4
                                                  protocol number as defined in Protocol
                                                  Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                  Options are supported only for ICMP
                                                  ("1"), TCP ("6"), UDP ("17"), and
                                                  ICMPv6 ("58").
                                                type: string
                                              tcpOptions:
                                                description: TcpOptions Optional and
                                                  valid only for TCP. Use to specify
                                                  particular destination ports for
                                                  TCP rules. If you specify TCP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                              udpOptions:
                                                description: UdpOptions Optional and
                                                  valid only for UDP. Use to specify
                                                  particular destination ports for
                                                  UDP rules. If you specify UDP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                            type: object
                                          id:
                                            description: 'EgressSecurityRule ID for
                                              NSG. Deprecated: this field is not populated
                                              and used during reconciliation'
                                            type: string
                                        type: object
                                      type: array
                                    id:
                                      description: NSG OCID.
                                      type: string
                                    ingressRules:
                                      description: IngressRules on the NSG.
                                      items:
                                        description: IngressSecurityRuleForNSG is
                                          IngressSecurityRule for NSG
                                        properties:
                                          id:
                                            description: 'IngressSecurityRule ID for
                                              NSG. Deprecated: this field is not populated
                                              and used during reconciliation'
                                            type: string
                                          ingressRule:
                                            description: IngressSecurityRule A rule
                                              for allowing inbound IP packets.
                                            properties:
                                              description:
                                                description: An optional description
                                                  of your choice for the rule.
                                                type: string
                                              icmpOptions:
                                                description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                properties:
                                                  code:
                                                    description: The ICMP code (optional).
                                                    type: integer
                                                  type:
                                                    description: The ICMP type.
                                                    type: integer
                                                type: object
                                              isStateless:
                                                description: A stateless rule allows
                                                  traffic in one direction. Remember
                                                  to add a corresponding stateless
                                                  rule in the other direction if you
                                                  need to support bidirectional traffic.
                                                  For example, if ingress traffic
                                                  allows TCP destination port 80,
                                                  there should be an egress rule to
                                                  allow TCP source port 80. Defaults
                                                  to false, which means the rule is
                                                  stateful and a corresponding rule
                                                  is not necessary for bidirectional
                                                  traffic.
                                                type: boolean
                                              protocol:
                                                description: The transport protocol.
                                                  Specify either `all` or an IPv4
                                                  protocol number as defined in Protocol
                                                  Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                  Options are supported only for ICMP
                                                  ("1"), TCP ("6"), UDP ("17"), and
                                                  ICMPv6 ("58").
                                                type: string
                                              source:
                                                description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet coming into the instance
                                                  can come from. Allowed values: *
                                                  IP address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56`. IPv6 addressing
                                                  is supported for all commercial
                                                  and government regions. See IPv6
                                                  Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                  * The `cidrBlock` value for a Service,
                                                  if you''re setting up a security
                                                  list rule for traffic coming from
                                                  a particular `Service` through a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                type: string
                                              sourceType:
                                                description: 'Type of source for the
                                                  rule. The default is `CIDR_BLOCK`.
                                                  * `CIDR_BLOCK`: If the rule''s `source`
                                                  is an IP address range in CIDR notation.
                                                  * `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `source` is the `cidrBlock` value
                                                  for a Service (the rule is for traffic
                                                  coming from a particular `Service`
                                                  through a service gateway).'
                                                type: string
                                              tcpOptions:
                                                description: TcpOptions Optional and
                                                  valid only for TCP. Use to specify
                                                  particular destination ports for
                                                  TCP rules. If you specify TCP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                              udpOptions:
                                                description: UdpOptions Optional and
                                                  valid only for UDP. Use to specify
                                                  particular destination ports for
                                                  UDP rules. If you specify UDP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                            type: object
                                        type: object
                                      type: array
                                    name:
                                      description: NSG Name.
                                      type: string
                                    role:
                                      description: Role defines the NSG role (eg.
                                        control-plane, control-plane-endpoint, service-lb,
                                        worker).
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              privateRouteTableId:
                                description: ID of Private Route Table.
                                type: string
                              publicRouteTableId:
                                description: ID of Public Route Table.
                                type: string
                              serviceGatewayId:
                                description: ID of Service Gateway.
                                type: string
                              subnets:
                                description: Subnets is the configuration for subnets
                                  required in the VCN.
                                items:
                                  description: Subnet defines the configuration for
                                    a network's subnet https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/managingVCNs_topic-Overview_of_VCNs_and_Subnets.htm#Overview
                                  properties:
                                    cidr:
                                      description: Subnet CIDR.
                                      type: string
                                    id:
                                      description: Subnet OCID.
                                      type: string
                                    name:
                                      description: Subnet Name.
                                      type: string
                                    role:
                                      description: Role defines the subnet role (eg.
                                        control-plane, control-plane-endpoint, service-lb,
                                        worker).
                                      type: string
                                    securityList:
                                      description: The security list associated with
                                        Subnet.
                                      properties:
                                        egressRules:
                                          description: EgressRules on the SecurityList.
                                          items:
                                            description: EgressSecurityRule A rule
                                              for allowing outbound IP packets.
                                            properties:
                                              description:
                                                description: An optional description
                                                  of your choice for the rule.
                                                type: string
                                              destination:
                                                description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet originating from the instance
                                                  can go to. Allowed values: * IP
                                                  address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56` Note that
                                                  IPv6 addressing is currently supported
                                                  only in certain regions. See IPv6
                                                  Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                  * The `cidrBlock` value for a Service,
                                                  if you''re setting up a security
                                                  list rule for traffic destined for
                                                  a particular `Service` through a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                type: string
                                              destinationType:
                                                description: 'Type of destination
                                                  for the rule. The default is `CIDR_BLOCK`.
                                                  Allowed values: * `CIDR_BLOCK`:
                                                  If the rule''s `destination` is
                                                  an IP address range in CIDR notation.
                                                  * `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `destination` is the `cidrBlock`
                                                  value for a Service (the rule is
                                                  for traffic destined for a particular
                                                  `Service` through a service gateway).'
                                                type: string
                                              icmpOptions:
                                                description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                properties:
                                                  code:
                                                    description: The ICMP code (optional).
                                                    type: integer
                                                  type:
                                                    description: The ICMP type.
                                                    type: integer
                                                type: object
                                              isStateless:
                                                description: A stateless rule allows
                                                  traffic in one direction. Remember
                                                  to add a corresponding stateless
                                                  rule in the other direction if you
                                                  need to support bidirectional traffic.
                                                  For example, if egress traffic allows
                                                  TCP destination port 80, there should
                                                  be an ingress rule to allow TCP
                                                  source port 80. Defaults to false,
                                                  which means the rule is stateful
                                                  and a corresponding rule is not
                                                  necessary for bidirectional traffic.
                                                type: boolean
                                              protocol:
                                                description: The transport protocol.
                                                  Specify either `all` or an IPv4
                                                  protocol number as defined in Protocol
                                                  Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                  Options are supported only for ICMP
                                                  ("1"), TCP ("6"), UDP ("17"), and
                                                  ICMPv6 ("58").
                                                type: string
                                              tcpOptions:
                                                description: TcpOptions Optional and
                                                  valid only for TCP. Use to specify
                                                  particular destination ports for
                                                  TCP rules. If you specify TCP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                              udpOptions:
                                                description: UdpOptions Optional and
                                                  valid only for UDP. Use to specify
                                                  particular destination ports for
                                                  UDP rules. If you specify UDP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                            type: object
                                          type: array
                                        id:
                                          description: ID of the SecurityList.
                                          type: string
                                        ingressRules:
                                          description: IngressRules on the SecurityList.
                                          items:
                                            description: IngressSecurityRule A rule
                                              for allowing inbound IP packets.
                                            properties:
                                              description:
                                                description: An optional description
                                                  of your choice for the rule.
                                                type: string
                                              icmpOptions:
                                                description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                properties:
                                                  code:
                                                    description: The ICMP code (optional).
                                                    type: integer
                                                  type:
                                                    description: The ICMP type.
                                                    type: integer
                                                type: object
                                              isStateless:
                                                description: A stateless rule allows
                                                  traffic in one direction. Remember
                                                  to add a corresponding stateless
                                                  rule in the other direction if you
                                                  need to support bidirectional traffic.
                                                  For example, if ingress traffic
                                                  allows TCP destination port 80,
                                                  there should be an egress rule to
                                                  allow TCP source port 80. Defaults
                                                  to false, which means the rule is
                                                  stateful and a corresponding rule
                                                  is not necessary for bidirectional
                                                  traffic.
                                                type: boolean
                                              protocol:
                                                description: The transport protocol.
                                                  Specify either `all` or an IPv4
                                                  protocol number as defined in Protocol
                                                  Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                  Options are supported only for ICMP
                                                  ("1"), TCP ("6"), UDP ("17"), and
                                                  ICMPv6 ("58").
                                                type: string
                                              source:
                                                description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet coming into the instance
                                                  can come from. Allowed values: *
                                                  IP address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56`. IPv6 addressing
                                                  is supported for all commercial
                                                  and government regions. See IPv6
                                                  Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                  * The `cidrBlock` value for a Service,
                                                  if you''re setting up a security
                                                  list rule for traffic coming from
                                                  a particular `Service` through a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                type: string
                                              sourceType:
                                                description: 'Type of source for the
                                                  rule. The default is `CIDR_BLOCK`.
                                                  * `CIDR_BLOCK`: If the rule''s `source`
                                                  is an IP address range in CIDR notation.
                                                  * `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `source` is the `cidrBlock` value
                                                  for a Service (the rule is for traffic
                                                  coming from a particular `Service`
                                                  through a service gateway).'
                                                type: string
                                              tcpOptions:
                                                description: TcpOptions Optional and
                                                  valid only for TCP. Use to specify
                                                  particular destination ports for
                                                  TCP rules. If you specify TCP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                              udpOptions:
                                                description: UdpOptions Optional and
                                                  valid only for UDP. Use to specify
                                                  particular destination ports for
                                                  UDP rules. If you specify UDP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                            type: object
                                          type: array
                                        name:
                                          description: SecurityList Name.
                                          type: string
                                      type: object
                                    type:
                                      description: Type defines the subnet type (e.g.
                                        public, private).
                                      type: string
                                  required:
                                  - name
                                  - role
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          vcnPeering:
                            description: VCNPeering configuration.
                            properties:
                              drg:
                                description: DRG configuration refers to the DRG which
                                  has to be created if required. If management cluster
                                  and workload cluster shares the same DRG, this fields
                                  is not required to be specified.
                                properties:
                                  id:
                                    description: ID is the OCID for the created DRG.
                                    type: string
                                  manage:
                                    description: Manage defines whether the DRG has
                                      to be managed(including create). If set to false(the
                                      default) the ID has to be specified by the user
                                      to a valid DRG ID to which the VCN has to be
                                      attached.
                                    type: boolean
                                  name:
                                    description: Name is the name of the created DRG.
                                    type: string
                                  vcnAttachmentId:
                                    description: VcnAttachmentId is the ID of the
                                      VCN attachment of the DRG. The workload cluster
                                      VCN can be attached to either the management
                                      cluster VCN if they are sharing the same DRG
                                      or to the workload cluster DRG.
                                    type: string
                                type: object
                              peerRouteRules:
                                description: PeerRouteRules defines the routing rules
                                  which will be added to the private route tables
                                  of the workload cluster VCN. The routes defined
                                  here will be directed to DRG.
                                items:
                                  description: PeerRouteRule defines a Route Rule
                                    to be routed via a DRG.
                                  properties:
                                    vcnCIDRRange:
                                      description: VCNCIDRRange is the CIDR Range
                                        of peer VCN to which the workload cluster
                                        VCN will be peered. The CIDR range is required
                                        to add the route rule in the workload cluster
                                        VCN, the route rule will forward any traffic
                                        to the CIDR to the DRG.
                                      type: string
                                  type: object
                                type: array
                              remotePeeringConnections:
                                description: RemotePeeringConnections defines the
                                  RPC connections which be established with the workload
                                  cluster DRG.
                                items:
                                  description: RemotePeeringConnection is used to
                                    peer VCNs residing in different regions(typically).
                                    Remote VCN Peering is explained here - https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/remoteVCNpeering.htm
                                  properties:
                                    managePeerRPC:
                                      description: ManagePeerRPC will define if the
                                        Peer VCN needs to be managed. If set to true
                                        a Remote Peering Connection will be created
                                        in the Peer DRG and the connection will be
                                        created between local and peer RPC.
                                      type: boolean
                                    peerDRGId:
                                      description: PeerDRGId defines the DRG ID of
                                        the peer.
                                      type: string
                                    peerRPCConnectionId:
                                      description: PeerRPCConnectionId defines the
                                        RPC ID of peer. If ManagePeerRPC is set to
                                        true this will be created by Cluster API Provider
                                        for OCI, otherwise this has be defined by
                                        the user.
                                      type: string
                                    peerRegionName:
                                      description: PeerRegionName defined the region
                                        name of Peer VCN.
                                      type: string
                                    rpcConnectionId:
                                      description: RPCConnectionId is the connection
                                        ID of the connection between peer and local
                                        RPC.
                                      type: string
                                  type: object
                                type: array
                            type: object
                        type: object
                      ociResourceIdentifier:
                        description: The unique ID which will be used to tag all the
                          resources created by this Cluster. The tag will be used
                          to identify resources belonging to this cluster. this will
                          be auto-generated and should not be set by the user.
                        type: string
                      region:
                        description: Region the cluster operates in. It must be one
                          of available regions in Region Identifier format. See https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: OCIManagedClusterTemplate is the Schema for the ocimanagedclustertemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIManagedClusterTemplateSpec defines the desired state of
              OCIManagedClusterTemplate.
            properties:
              template:
                description: OCIManagedClusterSpec describes the data needed to create
                  an OCIManagedCluster from a template.
                properties:
                  spec:
                    description: OCIManagedClusterSpec defines the desired state of
                      OCI OKE Cluster
                    properties:
                      availabilityDomains:
                        additionalProperties:
                          description: OCIAvailabilityDomain contains information
                            about an Availability Domain (AD).
                          properties:
                            faultDomains:
                              description: 'FaultDomains a list of fault domain (FD)
                                names. Example: ["FAULT-DOMAIN-1"]'
                              items:
                                type: string
                              type: array
                            name:
                              description: 'Name is the AD''s full name. Example:
                                Uocm:PHX-AD-1'
                              type: string
                          type: object
                        description: AvailabilityDomains encapsulates the clusters
                          Availability Domain (AD) information in a map where the
                          map key is the AD name and the struct is details about the
                          AD.
                        type: object
                      compartmentId:
                        description: Compartment to create the cluster network.
                        type: string
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane. This will not
                          be set by the user, this will be updated by the Cluster
                          Reconciler after OKe cluster has been created and the cluster
                          has an endpoint address
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      definedTags:
                        additionalProperties:
                          additionalProperties:
                            type: string
                          type: object
                        description: 'Defined tags for this resource. Each key is
                          predefined and scoped to a namespace. For more information,
                          see Resource Tags (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                          Example: `{"Operations": {"CostCenter": "42"}}`'
                        type: object
                      freeformTags:
                        additionalProperties:
                          type: string
                        description: Free-form tags for this resource.
                        type: object
                      hostUrl:
                        description: ClientOverrides allows the default client SDK
                          URLs to be changed.
                        nullable: true
                        properties:
                          certOverride:
                            description: CertOverride is a secret that contains information
                              about a cert override used by all the OCI SDK clients.
                              The secret must contain data with a `cert`property.
                            nullable: true
                            properties:
                              name:
                                description: name is unique within a namespace to
                                  reference a secret resource.
                                type: string
                              namespace:
                                description: namespace defines the space within which
                                  the secret name must be unique.
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          computeClientUrl:
                            description: ComputeClientUrl allows the default compute
                              SDK client URL to be changed.
                            nullable: true
                            type: string
                          computeManagementClientUrl:
                            description: ComputeManagementClientUrl allows the default
                              compute management SDK client URL to be changed.
                            nullable: true
                            type: string
                          containerEngineClientUrl:
                            description: ContainerEngineClientUrl allows the default
                              container engine SDK client URL to be changed.
                            nullable: true
                            type: string
                          identityClientUrl:
                            description: IdentityClientUrl allows the default identity
                              SDK client URL to be changed.
                            nullable: true
                            type: string
                          loadBalancerClientUrl:
                            description: LoadBalancerClientUrl allows the default
                              load balancer SDK client URL to be changed.
                            nullable: true
                            type: string
                          networkLoadBalancerClientUrl:
                            description: NetworkLoadBalancerClientUrl allows the default
                              NLB SDK client URL to be changed.
                            nullable: true
                            type: string
                          vCNClientUrl:
                            description: VCNClientUrl allows the default vcn SDK client
                              URL to be changed.
                            nullable: true
                            type: string
                        type: object
                      identityRef:
                        description: IdentityRef is a reference to an identity(principal)
                          to be used when reconciling this cluster
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      networkSpec:
                        description: NetworkSpec encapsulates all things related to
                          OCI network.
                        properties:
                          apiServerLoadBalancer:
                            description: API Server LB configuration.
                            properties:
                              loadBalancerId:
                                description: ID of Load Balancer.
                                type: string
                              loadBalancerType:
                                description: 'Type of Load Balancer: NLB (default)
                                  or LBaaS.'
                                type: string
                              name:
                                description: LoadBalancer Name.
                                type: string
                            type: object
                          skipNetworkManagement:
                            description: SkipNetworkManagement defines if the networking
                              spec(VCN related) specified by the user needs to be
                              reconciled(actioned-upon) or used as it is. APIServerLB
                              will still be reconciled.
                            type: boolean
                          vcn:
                            description: VCN configuration.
                            properties:
                              cidr:
                                description: VCN CIDR.
                                type: string
                              id:
                                description: VCN OCID.
                                type: string
                              internetGateway:
                                description: Configuration for Internet Gateway.
                                properties:
                                  id:
                                    description: ID of Internet Gateway.
                                    type: string
                                  skip:
                                    description: Skip specifies whether to skip creating
                                      internet gateway even if any one Subnet is public.
                                    type: boolean
                                type: object
                              name:
                                description: VCN Name.
                                type: string
                              natGateway:
                                description: Configuration for NAT Gateway.
                                properties:
                                  id:
                                    description: ID of Nat Gateway.
                                    type: string
                                  skip:
                                    description: Skip specifies whether to skip creating
                                      NAT gateway even if any one Subnet is private.
                                    type: boolean
                                type: object
                              networkSecurityGroup:
                                description: Configuration for NSG management.
                                properties:
                                  list:
                                    description: NetworkSecurityGroup is the configuration
                                      for the Network Security Groups required in
                                      the VCN.
                                    items:
                                      description: NSG defines configuration for a
                                        Network Security Group. https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/networksecuritygroups.htm
                                      properties:
                                        egressRules:
                                          description: EgressRules on the NSG.
                                          items:
                                            description: EgressSecurityRuleForNSG
                                              is EgressSecurityRule for NSG.
                                            properties:
                                              egressRule:
                                                description: EgressSecurityRule A
                                                  rule for allowing outbound IP packets.
                                                properties:
                                                  description:
                                                    description: An optional description
                                                      of your choice for the rule.
                                                    type: string
                                                  destination:
                                                    description: 'Conceptually, this
                                                      is the range of IP addresses
                                                      that a packet originating from
                                                      the instance can go to. Allowed
                                                      values: * IP address range in
                                                      CIDR notation. For example:
                                                      `192.168.1.0/24` or `2001:0db8:0123:45::/56`
                                                      Note that IPv6 addressing is
                                                      currently supported only in
                                                      certain regions. See IPv6 Addresses
                                                      (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                      * The `cidrBlock` value for
                                                      a Service, if you''re setting
                                                      up a security list rule for
                                                      traffic destined for a particular
                                                      `Service` through a service
                                                      gateway. For example: `oci-phx-objectstorage`.'
                                                    type: string
                                                  destinationType:
                                                    description: 'Type of destination
                                                      for the rule. The default is
                                                      `CIDR_BLOCK`. Allowed values:
                                                      * `CIDR_BLOCK`: If the rule''s
                                                      `destination` is an IP address
                                                      range in CIDR notation. * `SERVICE_CIDR_BLOCK`:
                                                      If the rule''s `destination`
                                                      is the `cidrBlock` value for
                                                      a Service (the rule is for traffic
                                                      destined for a particular `Service`
                                                      through a service gateway).'
                                                    type: string
                                                  icmpOptions:
                                                    description: 'IcmpOptions Optional
                                                      and valid only for ICMP and
                                                      ICMPv6. Use to specify a particular
                                                      ICMP type and code as defined
                                                      in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                      - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                      If you specify ICMP or ICMPv6
                                                      as the protocol but omit this
                                                      object, then all ICMP types
                                                      and codes are allowed. If you
                                                      do provide this object, the
                                                      type is required and the code
                                                      is optional. To enable MTU negotiation
                                                      for ingress internet traffic
                                                      via IPv4, make sure to allow
                                                      type 3 ("Destination Unreachable")
                                                      code 4 ("Fragmentation Needed
                                                      and Don''t Fragment was Set").
                                                      If you need to specify multiple
                                                      codes for a single type, create
                                                      a separate security list rule
                                                      for each.'
                                                    properties:
                                                      code:
                                                        description: The ICMP code
                                                          (optional).
                                                        type: integer
                                                      type:
                                                        description: The ICMP type.
                                                        type: integer
                                                    type: object
                                                  isStateless:
                                                    description: A stateless rule
                                                      allows traffic in one direction.
                                                      Remember to add a corresponding
                                                      stateless rule in the other
                                                      direction if you need to support
                                                      bidirectional traffic. For example,
                                                      if egress traffic allows TCP
                                                      destination port 80, there should
                                                      be an ingress rule to allow
                                                      TCP source port 80. Defaults
                                                      to false, which means the rule
                                                      is stateful and a corresponding
                                                      rule is not necessary for bidirectional
                                                      traffic.
                                                    type: boolean
                                                  protocol:
                                                    description: The transport protocol.
                                                      Specify either `all` or an IPv4
                                                      protocol number as defined in
                                                      Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                      Options are supported only for
                                                      ICMP ("1"), TCP ("6"), UDP ("17"),
                                                      and ICMPv6 ("58").
                                                    type: string
                                                  tcpOptions:
                                                    description: TcpOptions Optional
                                                      and valid only for TCP. Use
                                                      to specify particular destination
                                                      ports for TCP rules. If you
                                                      specify TCP as the protocol
                                                      but omit this object, then all
                                                      destination ports are allowed.
                                                    properties:
                                                      destinationPortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                      sourcePortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                    type: object
                                                  udpOptions:
                                                    description: UdpOptions Optional
                                                      and valid only for UDP. Use
                                                      to specify particular destination
                                                      ports for UDP rules. If you
                                                      specify UDP as the protocol
                                                      but omit this object, then all
                                                      destination ports are allowed.
                                                    properties:
                                                      destinationPortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                      sourcePortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                    type: object
                                                type: object
                                            type: object
                                          type: array
                                        id:
                                          description: NSG OCID.
                                          type: string
                                        ingressRules:
                                          description: IngressRules on the NSG.
                                          items:
                                            description: IngressSecurityRuleForNSG
                                              is IngressSecurityRule for NSG
                                            properties:
                                              ingressRule:
                                                description: IngressSecurityRule A
                                                  rule for allowing inbound IP packets.
                                                properties:
                                                  description:
                                                    description: An optional description
                                                      of your choice for the rule.
                                                    type: string
                                                  icmpOptions:
                                                    description: 'IcmpOptions Optional
                                                      and valid only for ICMP and
                                                      ICMPv6. Use to specify a particular
                                                      ICMP type and code as defined
                                                      in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                      - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                      If you specify ICMP or ICMPv6
                                                      as the protocol but omit this
                                                      object, then all ICMP types
                                                      and codes are allowed. If you
                                                      do provide this object, the
                                                      type is required and the code
                                                      is optional. To enable MTU negotiation
                                                      for ingress internet traffic
                                                      via IPv4, make sure to allow
                                                      type 3 ("Destination Unreachable")
                                                      code 4 ("Fragmentation Needed
                                                      and Don''t Fragment was Set").
                                                      If you need to specify multiple
                                                      codes for a single type, create
                                                      a separate security list rule
                                                      for each.'
                                                    properties:
                                                      code:
                                                        description: The ICMP code
                                                          (optional).
                                                        type: integer
                                                      type:
                                                        description: The ICMP type.
                                                        type: integer
                                                    type: object
                                                  isStateless:
                                                    description: A stateless rule
                                                      allows traffic in one direction.
                                                      Remember to add a corresponding
                                                      stateless rule in the other
                                                      direction if you need to support
                                                      bidirectional traffic. For example,
                                                      if ingress traffic allows TCP
                                                      destination port 80, there should
                                                      be an egress rule to allow TCP
                                                      source port 80. Defaults to
                                                      false, which means the rule
                                                      is stateful and a corresponding
                                                      rule is not necessary for bidirectional
                                                      traffic.
                                                    type: boolean
                                                  protocol:
                                                    description: The transport protocol.
                                                      Specify either `all` or an IPv4
                                                      protocol number as defined in
                                                      Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                      Options are supported only for
                                                      ICMP ("1"), TCP ("6"), UDP ("17"),
                                                      and ICMPv6 ("58").
                                                    type: string
                                                  source:
                                                    description: 'Conceptually, this
                                                      is the range of IP addresses
                                                      that a packet coming into the
                                                      instance can come from. Allowed
                                                      values: * IP address range in
                                                      CIDR notation. For example:
                                                      `192.168.1.0/24` or `2001:0db8:0123:45::/56`.
                                                      IPv6 addressing is supported
                                                      for all commercial and government
                                                      regions. See IPv6 Addresses
                                                      (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                      * The `cidrBlock` value for
                                                      a Service, if you''re setting
                                                      up a security list rule for
                                                      traffic coming from a particular
                                                      `Service` through a service
                                                      gateway. For example: `oci-phx-objectstorage`.'
                                                    type: string
                                                  sourceType:
                                                    description: 'Type of source for
                                                      the rule. The default is `CIDR_BLOCK`.
                                                      * `CIDR_BLOCK`: If the rule''s
                                                      `source` is an IP address range
                                                      in CIDR notation. * `SERVICE_CIDR_BLOCK`:
                                                      If the rule''s `source` is the
                                                      `cidrBlock` value for a Service
                                                      (the rule is for traffic coming
                                                      from a particular `Service`
                                                      through a service gateway).'
                                                    type: string
                                                  tcpOptions:
                                                    description: TcpOptions Optional
                                                      and valid only for TCP. Use
                                                      to specify particular destination
                                                      ports for TCP rules. If you
                                                      specify TCP as the protocol
                                                      but omit this object, then all
                                                      destination ports are allowed.
                                                    properties:
                                                      destinationPortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                      sourcePortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                    type: object
                                                  udpOptions:
                                                    description: UdpOptions Optional
                                                      and valid only for UDP. Use
                                                      to specify particular destination
                                                      ports for UDP rules. If you
                                                      specify UDP as the protocol
                                                      but omit this object, then all
                                                      destination ports are allowed.
                                                    properties:
                                                      destinationPortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                      sourcePortRange:
                                                        description: PortRange The
                                                          representation of PortRange.
                                                        properties:
                                                          max:
                                                            description: The maximum
                                                              port number, which must
                                                              not be less than the
                                                              minimum port number.
                                                              To specify a single
                                                              port number, set both
                                                              the min and max to the
                                                              same value.
                                                            type: integer
                                                          min:
                                                            description: The minimum
                                                              port number, which must
                                                              not be greater than
                                                              the maximum port number.
                                                            type: integer
                                                        type: object
                                                    type: object
                                                type: object
                                            type: object
                                          type: array
                                        name:
                                          description: NSG Name.
                                          type: string
                                        role:
                                          description: Role defines the NSG role (eg.
                                            control-plane, control-plane-endpoint,
                                            service-lb, worker).
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  skip:
                                    description: Skip specifies whether to skip creating
                                      network security groups.
                                    type: boolean
                                type: object
                              routeTable:
                                description: Configuration for Route table.
                                properties:
                                  privateRouteTableId:
                                    description: ID of Private Route Table.
                                    type: string
                                  publicRouteTableId:
                                    description: ID of Public Route Table.
                                    type: string
                                  skip:
                                    description: Skip specifies whether to skip creating
                                      Route table.
                                    type: boolean
                                type: object
                              serviceGateway:
                                description: Configuration for Service Gateway.
                                properties:
                                  id:
                                    description: ID of Service Gateway.
                                    type: string
                                  skip:
                                    description: Skip specifies whether to skip creating
                                      Service gateway.
                                    type: boolean
                                type: object
                              subnets:
                                description: Subnets is the configuration for subnets
                                  required in the VCN.
                                items:
                                  description: Subnet defines the configuration for
                                    a network's subnet https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/managingVCNs_topic-Overview_of_VCNs_and_Subnets.htm#Overview
                                  properties:
                                    cidr:
                                      description: Subnet CIDR.
                                      type: string
                                    id:
                                      description: Subnet OCID.
                                      type: string
                                    name:
                                      description: Subnet Name.
                                      type: string
                                    role:
                                      description: Role defines the subnet role (eg.
                                        control-plane, control-plane-endpoint, service-lb,
                                        worker).
                                      type: string
                                    securityList:
                                      description: The security list associated with
                                        Subnet.
                                      properties:
                                        egressRules:
                                          description: EgressRules on the SecurityList.
                                          items:
                                            description: EgressSecurityRule A rule
                                              for allowing outbound IP packets.
                                            properties:
                                              description:
                                                description: An optional description
                                                  of your choice for the rule.
                                                type: string
                                              destination:
                                                description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet originating from the instance
                                                  can go to. Allowed values: * IP
                                                  address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56` Note that
                                                  IPv6 addressing is currently supported
                                                  only in certain regions. See IPv6
                                                  Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                  * The `cidrBlock` value for a Service,
                                                  if you''re setting up a security
                                                  list rule for traffic destined for
                                                  a particular `Service` through a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                type: string
                                              destinationType:
                                                description: 'Type of destination
                                                  for the rule. The default is `CIDR_BLOCK`.
                                                  Allowed values: * `CIDR_BLOCK`:
                                                  If the rule''s `destination` is
                                                  an IP address range in CIDR notation.
                                                  * `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `destination` is the `cidrBlock`
                                                  value for a Service (the rule is
                                                  for traffic destined for a particular
                                                  `Service` through a service gateway).'
                                                type: string
                                              icmpOptions:
                                                description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                properties:
                                                  code:
                                                    description: The ICMP code (optional).
                                                    type: integer
                                                  type:
                                                    description: The ICMP type.
                                                    type: integer
                                                type: object
                                              isStateless:
                                                description: A stateless rule allows
                                                  traffic in one direction. Remember
                                                  to add a corresponding stateless
                                                  rule in the other direction if you
                                                  need to support bidirectional traffic.
                                                  For example, if egress traffic allows
                                                  TCP destination port 80, there should
                                                  be an ingress rule to allow TCP
                                                  source port 80. Defaults to false,
                                                  which means the rule is stateful
                                                  and a corresponding rule is not
                                                  necessary for bidirectional traffic.
                                                type: boolean
                                              protocol:
                                                description: The transport protocol.
                                                  Specify either `all` or an IPv4
                                                  protocol number as defined in Protocol
                                                  Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                  Options are supported only for ICMP
                                                  ("1"), TCP ("6"), UDP ("17"), and
                                                  ICMPv6 ("58").
                                                type: string
                                              tcpOptions:
                                                description: TcpOptions Optional and
                                                  valid only for TCP. Use to specify
                                                  particular destination ports for
                                                  TCP rules. If you specify TCP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                              udpOptions:
                                                description: UdpOptions Optional and
                                                  valid only for UDP. Use to specify
                                                  particular destination ports for
                                                  UDP rules. If you specify UDP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                            type: object
                                          type: array
                                        id:
                                          description: ID of the SecurityList.
                                          type: string
                                        ingressRules:
                                          description: IngressRules on the SecurityList.
                                          items:
                                            description: IngressSecurityRule A rule
                                              for allowing inbound IP packets.
                                            properties:
                                              description:
                                                description: An optional description
                                                  of your choice for the rule.
                                                type: string
                                              icmpOptions:
                                                description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                properties:
                                                  code:
                                                    description: The ICMP code (optional).
                                                    type: integer
                                                  type:
                                                    description: The ICMP type.
                                                    type: integer
                                                type: object
                                              isStateless:
                                                description: A stateless rule allows
                                                  traffic in one direction. Remember
                                                  to add a corresponding stateless
                                                  rule in the other direction if you
                                                  need to support bidirectional traffic.
                                                  For example, if ingress traffic
                                                  allows TCP destination port 80,
                                                  there should be an egress rule to
                                                  allow TCP source port 80. Defaults
                                                  to false, which means the rule is
                                                  stateful and a corresponding rule
                                                  is not necessary for bidirectional
                                                  traffic.
                                                type: boolean
                                              protocol:
                                                description: The transport protocol.
                                                  Specify either `all` or an IPv4
                                                  protocol number as defined in Protocol
                                                  Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                  Options are supported only for ICMP
                                                  ("1"), TCP ("6"), UDP ("17"), and
                                                  ICMPv6 ("58").
                                                type: string
                                              source:
                                                description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet coming into the instance
                                                  can come from. Allowed values: *
                                                  IP address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56`. IPv6 addressing
                                                  is supported for all commercial
                                                  and government regions. See IPv6
                                                  Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
                                                  * The `cidrBlock` value for a Service,
                                                  if you''re setting up a security
                                                  list rule for traffic coming from
                                                  a particular `Service` through a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                type: string
                                              sourceType:
                                                description: 'Type of source for the
                                                  rule. The default is `CIDR_BLOCK`.
                                                  * `CIDR_BLOCK`: If the rule''s `source`
                                                  is an IP address range in CIDR notation.
                                                  * `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `source` is the `cidrBlock` value
                                                  for a Service (the rule is for traffic
                                                  coming from a particular `Service`
                                                  through a service gateway).'
                                                type: string
                                              tcpOptions:
                                                description: TcpOptions Optional and
                                                  valid only for TCP. Use to specify
                                                  particular destination ports for
                                                  TCP rules. If you specify TCP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                              udpOptions:
                                                description: UdpOptions Optional and
                                                  valid only for UDP. Use to specify
                                                  particular destination ports for
                                                  UDP rules. If you specify UDP as
                                                  the protocol but omit this object,
                                                  then all destination ports are allowed.
                                                properties:
                                                  destinationPortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                  sourcePortRange:
                                                    description: PortRange The representation
                                                      of PortRange.
                                                    properties:
                                                      max:
                                                        description: The maximum port
                                                          number, which must not be
                                                          less than the minimum port
                                                          number. To specify a single
                                                          port number, set both the
                                                          min and max to the same
                                                          value.
                                                        type: integer
                                                      min:
                                                        description: The minimum port
                                                          number, which must not be
                                                          greater than the maximum
                                                          port number.
                                                        type: integer
                                                    type: object
                                                type: object
                                            type: object
                                          type: array
                                        name:
                                          description: SecurityList Name.
                                          type: string
                                      type: object
                                    type:
                                      description: Type defines the subnet type (e.g.
                                        public, private).
                                      type: string
                                  required:
                                  - name
                                  - role
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          vcnPeering:
                            description: VCNPeering configuration.
                            properties:
                              drg:
                                description: DRG configuration refers to the DRG which
                                  has to be created if required. If management cluster
                                  and workload cluster shares the same DRG, this fields
                                  is not required to be specified.
                                properties:
                                  id:
                                    description: ID is the OCID for the created DRG.
                                    type: string
                                  manage:
                                    description: Manage defines whether the DRG has
                                      to be managed(including create). If set to false(the
                                      default) the ID has to be specified by the user
                                      to a valid DRG ID to which the VCN has to be
                                      attached.
                                    type: boolean
                                  name:
                                    description: Name is the name of the created DRG.
                                    type: string
                                  vcnAttachmentId:
                                    description: VcnAttachmentId is the ID of the
                                      VCN attachment of the DRG. The workload cluster
                                      VCN can be attached to either the management
                                      cluster VCN if they are sharing the same DRG
                                      or to the workload cluster DRG.
                                    type: string
                                type: object
                              peerRouteRules:
                                description: PeerRouteRules defines the routing rules
                                  which will be added to the private route tables
                                  of the workload cluster VCN. The routes defined
                                  here will be directed to DRG.
                                items:
                                  description: PeerRouteRule defines a Route Rule
                                    to be routed via a DRG.
                                  properties:
                                    vcnCIDRRange:
                                      description: VCNCIDRRange is the CIDR Range
                                        of peer VCN to which the workload cluster
                                        VCN will be peered. The CIDR range is required
                                        to add the route rule in the workload cluster
                                        VCN, the route rule will forward any traffic
                                        to the CIDR to the DRG.
                                      type: string
                                  type: object
                                type: array
                              remotePeeringConnections:
                                description: RemotePeeringConnections defines the
                                  RPC connections which be established with the workload
                                  cluster DRG.
                                items:
                                  description: RemotePeeringConnection is used to
                                    peer VCNs residing in different regions(typically).
                                    Remote VCN Peering is explained here - https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/remoteVCNpeering.htm
                                  properties:
                                    managePeerRPC:
                                      description: ManagePeerRPC will define if the
                                        Peer VCN needs to be managed. If set to true
                                        a Remote Peering Connection will be created
                                        in the Peer DRG and the connection will be
                                        created between local and peer RPC.
                                      type: boolean
                                    peerDRGId:
                                      description: PeerDRGId defines the DRG ID of
                                        the peer.
                                      type: string
                                    peerRPCConnectionId:
                                      description: PeerRPCConnectionId defines the
                                        RPC ID of peer. If ManagePeerRPC is set to
                                        true this will be created by Cluster API Provider
                                        for OCI, otherwise this has be defined by
                                        the user.
                                      type: string
                                    peerRegionName:
                                      description: PeerRegionName defined the region
                                        name of Peer VCN.
                                      type: string
                                    rpcConnectionId:
                                      description: RPCConnectionId is the connection
                                        ID of the connection between peer and local
                                        RPC.
                                      type: string
                                  type: object
                                type: array
                            type: object
                        type: object
                      ociResourceIdentifier:
                        description: The unique ID which will be used to tag all the
                          resources created by this Cluster. The tag will be used
                          to identify resources belonging to this cluster. this will
                          be auto-generated and should not be set by the user.
                        type: string
                      region:
                        description: Region the cluster operates in. It must be one
                          of available regions in Region Identifier format. See https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-oci-system/capoci-serving-cert
    controller-gen.kubebuilder.io/version: v0.10.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ocimanagedcontrolplanes.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: capoci-webhook-service
          namespace: cluster-api-provider-oci-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: OCIManagedControlPlane
    listKind: OCIManagedControlPlaneList
    plural: ocimanagedcontrolplanes
    singular: ocimanagedcontrolplane
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: OCIManagedControlPlane is the Schema for the ocimanagedcontrolplane
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIManagedControlPlaneSpec defines the desired state of OCIManagedControlPlane.
              The properties are generated from https://docs.oracle.com/en-us/iaas/api/#/en/containerengine/20180222/datatypes/CreateClusterDetails
            properties:
              clusterOptions:
                description: ClusterOptions defines Optional attributes for the cluster.
                properties:
                  addOnOptions:
                    description: AddOnOptions defines the properties that define options
                      for supported add-ons.
                    properties:
                      isKubernetesDashboardEnabled:
                        description: IsKubernetesDashboardEnabled defines whether
                          or not to enable the Kubernetes Dashboard add-on.
                        type: boolean
                      isTillerEnabled:
                        description: IsKubernetesDashboardEnabled defines whether
                          or not to enable the Tiller add-on.
                        type: boolean
                    type: object
                  admissionControllerOptions:
                    description: AdmissionControllerOptions defines the properties
                      that define supported admission controllers.
                    properties:
                      isPodSecurityPolicyEnabled:
                        description: IsPodSecurityPolicyEnabled defines whether or
                          not to enable the Pod Security Policy admission controller.
                        type: boolean
                    type: object
                type: object
              clusterPodNetworkOptions:
                description: ClusterPodNetworkOptions defines the available CNIs and
                  network options for existing and new node pools of the cluster
                items:
                  description: ClusterPodNetworkOptions defines the available CNIs
                    and network options for existing and new node pools of the cluster
                  properties:
                    cniType:
                      description: The CNI to be used are OCI_VCN_IP_NATIVE and FLANNEL_OVERLAY
                      type: string
                  type: object
                type: array
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              id:
                description: ID of the OKEcluster.
                type: string
              imagePolicyConfig:
                description: ImagePolicyConfig defines the properties that define
                  a image verification policy.
                properties:
                  isPolicyEnabled:
                    description: IsPolicyEnabled defines Whether the image verification
                      policy is enabled.
                    type: boolean
                  keyDetails:
                    description: KeyDetails defines a list of KMS key details.
                    items:
                      description: KeyDetails defines the properties that define the
                        kms keys used by OKE for Image Signature verification.
                      properties:
                        keyDetails:
                          description: KmsKeyId defines the OCID of the KMS key that
                            will be used to verify whether the images are signed by
                            an approved source.
                          type: string
                      type: object
                    type: array
                type: object
              kmsKeyId:
                description: KmsKeyId defines the OCID of the KMS key to be used as
                  the master encryption key for Kubernetes secret encryption. When
                  used,
                type: string
              version:
                description: Version represents the version of the Kubernetes Cluster
                  Control Plane.
                type: string
            type: object
          status:
            description: OCIManagedControlPlaneStatus defines the observed state of
              OCIManagedControlPlane
            properties:
              conditions:
                description: NetworkSpec encapsulates all things related to OCI network.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              initialized:
                description: Initialized denotes whether or not the control plane
                  has the uploaded kubernetes config-map.
                type: boolean
              ready:
                type: boolean
              version:
                description: Version represents the current Kubernetes version for
                  the control plane.
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: OCIManagedControlPlane is the Schema for the ocimanagedcontrolplane
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIManagedControlPlaneSpec defines the desired state of OCIManagedControlPlane.
              The properties are generated from https://docs.oracle.com/en-us/iaas/api/#/en/containerengine/20180222/datatypes/CreateClusterDetails
            properties:
              clusterOptions:
                description: ClusterOptions defines Optional attributes for the cluster.
                properties:
                  addOnOptions:
                    description: AddOnOptions defines the properties that define options
                      for supported add-ons.
                    properties:
                      isKubernetesDashboardEnabled:
                        description: IsKubernetesDashboardEnabled defines whether
                          or not to enable the Kubernetes Dashboard add-on.
                        type: boolean
                      isTillerEnabled:
                        description: IsKubernetesDashboardEnabled defines whether
                          or not to enable the Tiller add-on.
                        type: boolean
                    type: object
                  admissionControllerOptions:
                    description: AdmissionControllerOptions defines the properties
                      that define supported admission controllers.
                    properties:
                      isPodSecurityPolicyEnabled:
                        description: IsPodSecurityPolicyEnabled defines whether or
                          not to enable the Pod Security Policy admission controller.
                        type: boolean
                    type: object
                type: object
              clusterPodNetworkOptions:
                description: ClusterPodNetworkOptions defines the available CNIs and
                  network options for existing and new node pools of the cluster
                items:
                  description: ClusterPodNetworkOptions defines the available CNIs
                    and network options for existing and new node pools of the cluster
                  properties:
                    cniType:
                      description: The CNI to be used are OCI_VCN_IP_NATIVE and FLANNEL_OVERLAY
                      type: string
                  type: object
                type: array
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              id:
                description: ID of the OKEcluster.
                type: string
              imagePolicyConfig:
                description: ImagePolicyConfig defines the properties that define
                  a image verification policy.
                properties:
                  isPolicyEnabled:
                    description: IsPolicyEnabled defines Whether the image verification
                      policy is enabled.
                    type: boolean
                  keyDetails:
                    description: KeyDetails defines a list of KMS key details.
                    items:
                      description: KeyDetails defines the properties that define the
                        kms keys used by OKE for Image Signature verification.
                      properties:
                        keyDetails:
                          description: KmsKeyId defines the OCID of the KMS key that
                            will be used to verify whether the images are signed by
                            an approved source.
                          type: string
                      type: object
                    type: array
                type: object
              kmsKeyId:
                description: KmsKeyId defines the OCID of the KMS key to be used as
                  the master encryption key for Kubernetes secret encryption. When
                  used,
                type: string
              version:
                description: Version represents the version of the Kubernetes Cluster
                  Control Plane.
                type: string
            type: object
          status:
            description: OCIManagedControlPlaneStatus defines the observed state of
              OCIManagedControlPlane
            properties:
              conditions:
                description: NetworkSpec encapsulates all things related to OCI network.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              initialized:
                description: Initialized denotes whether or not the control plane
                  has the uploaded kubernetes config-map.
                type: boolean
              ready:
                type: boolean
              version:
                description: Version represents the current Kubernetes version for
                  the control plane.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ocimanagedcontrolplanetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: OCIManagedControlPlaneTemplate
    listKind: OCIManagedControlPlaneTemplateList
    plural: ocimanagedcontrolplanetemplates
    singular: ocimanagedcontrolplanetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: OCIManagedControlPlaneTemplate is the Schema for the OCIManagedControlPlaneTemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIManagedControlPlaneTemplateSpec defines the desired state
              of OCIManagedControlPlaneTemplate.
            properties:
              template:
                description: OCIManagedControlPlaneSpec describes the data needed
                  to create an OCIManagedControlPlane from a template.
                properties:
                  spec:
                    description: OCIManagedControlPlaneSpec defines the desired state
                      of OCIManagedControlPlane. The properties are generated from
                      https://docs.oracle.com/en-us/iaas/api/#/en/containerengine/20180222/datatypes/CreateClusterDetails
                    properties:
                      clusterOptions:
                        description: ClusterOptions defines Optional attributes for
                          the cluster.
                        properties:
                          addOnOptions:
                            description: AddOnOptions defines the properties that
                              define options for supported add-ons.
                            properties:
                              isKubernetesDashboardEnabled:
                                description: IsKubernetesDashboardEnabled defines
                                  whether or not to enable the Kubernetes Dashboard
                                  add-on.
                                type: boolean
                              isTillerEnabled:
                                description: IsKubernetesDashboardEnabled defines
                                  whether or not to enable the Tiller add-on.
                                type: boolean
                            type: object
                          admissionControllerOptions:
                            description: AdmissionControllerOptions defines the properties
                              that define supported admission controllers.
                            properties:
                              isPodSecurityPolicyEnabled:
                                description: IsPodSecurityPolicyEnabled defines whether
                                  or not to enable the Pod Security Policy admission
                                  controller.
                                type: boolean
                            type: object
                        type: object
                      clusterPodNetworkOptions:
                        description: ClusterPodNetworkOptions defines the available
                          CNIs and network options for existing and new node pools
                          of the cluster
                        items:
                          description: ClusterPodNetworkOptions defines the available
                            CNIs and network options for existing and new node pools
                            of the cluster
                          properties:
                            cniType:
                              description: The CNI to be used are OCI_VCN_IP_NATIVE
                                and FLANNEL_OVERLAY
                              type: string
                          type: object
                        type: array
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      id:
                        description: ID of the OKEcluster.
                        type: string
                      imagePolicyConfig:
                        description: ImagePolicyConfig defines the properties that
                          define a image verification policy.
                        properties:
                          isPolicyEnabled:
                            description: IsPolicyEnabled defines Whether the image
                              verification policy is enabled.
                            type: boolean
                          keyDetails:
                            description: KeyDetails defines a list of KMS key details.
                            items:
                              description: KeyDetails defines the properties that
                                define the kms keys used by OKE for Image Signature
                                verification.
                              properties:
                                keyDetails:
                                  description: KmsKeyId defines the OCID of the KMS
                                    key that will be used to verify whether the images
                                    are signed by an approved source.
                                  type: string
                              type: object
                            type: array
                        type: object
                      kmsKeyId:
                        description: KmsKeyId defines the OCID of the KMS key to be
                          used as the master encryption key for Kubernetes secret
                          encryption. When used,
                        type: string
                      version:
                        description: Version represents the version of the Kubernetes
                          Cluster Control Plane.
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: OCIManagedControlPlaneTemplate is the Schema for the OCIManagedControlPlaneTemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIManagedControlPlaneTemplateSpec defines the desired state
              of OCIManagedControlPlaneTemplate.
            properties:
              template:
                description: OCIManagedControlPlaneSpec describes the data needed
                  to create an OCIManagedControlPlane from a template.
                properties:
                  spec:
                    description: OCIManagedControlPlaneSpec defines the desired state
                      of OCIManagedControlPlane. The properties are generated from
                      https://docs.oracle.com/en-us/iaas/api/#/en/containerengine/20180222/datatypes/CreateClusterDetails
                    properties:
                      clusterOptions:
                        description: ClusterOptions defines Optional attributes for
                          the cluster.
                        properties:
                          addOnOptions:
                            description: AddOnOptions defines the properties that
                              define options for supported add-ons.
                            properties:
                              isKubernetesDashboardEnabled:
                                description: IsKubernetesDashboardEnabled defines
                                  whether or not to enable the Kubernetes Dashboard
                                  add-on.
                                type: boolean
                              isTillerEnabled:
                                description: IsKubernetesDashboardEnabled defines
                                  whether or not to enable the Tiller add-on.
                                type: boolean
                            type: object
                          admissionControllerOptions:
                            description: AdmissionControllerOptions defines the properties
                              that define supported admission controllers.
                            properties:
                              isPodSecurityPolicyEnabled:
                                description: IsPodSecurityPolicyEnabled defines whether
                                  or not to enable the Pod Security Policy admission
                                  controller.
                                type: boolean
                            type: object
                        type: object
                      clusterPodNetworkOptions:
                        description: ClusterPodNetworkOptions defines the available
                          CNIs and network options for existing and new node pools
                          of the cluster
                        items:
                          description: ClusterPodNetworkOptions defines the available
                            CNIs and network options for existing and new node pools
                            of the cluster
                          properties:
                            cniType:
                              description: The CNI to be used are OCI_VCN_IP_NATIVE
                                and FLANNEL_OVERLAY
                              type: string
                          type: object
                        type: array
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      id:
                        description: ID of the OKEcluster.
                        type: string
                      imagePolicyConfig:
                        description: ImagePolicyConfig defines the properties that
                          define a image verification policy.
                        properties:
                          isPolicyEnabled:
                            description: IsPolicyEnabled defines Whether the image
                              verification policy is enabled.
                            type: boolean
                          keyDetails:
                            description: KeyDetails defines a list of KMS key details.
                            items:
                              description: KeyDetails defines the properties that
                                define the kms keys used by OKE for Image Signature
                                verification.
                              properties:
                                keyDetails:
                                  description: KmsKeyId defines the OCID of the KMS
                                    key that will be used to verify whether the images
                                    are signed by an approved source.
                                  type: string
                              type: object
                            type: array
                        type: object
                      kmsKeyId:
                        description: KmsKeyId defines the OCID of the KMS key to be
                          used as the master encryption key for Kubernetes secret
                          encryption. When used,
                        type: string
                      version:
                        description: Version represents the version of the Kubernetes
                          Cluster Control Plane.
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-oci-system/capoci-serving-cert
    controller-gen.kubebuilder.io/version: v0.10.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ocimanagedmachinepools.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: capoci-webhook-service
          namespace: cluster-api-provider-oci-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: OCIManagedMachinePool
    listKind: OCIManagedMachinePoolList
    plural: ocimanagedmachinepools
    singular: ocimanagedmachinepool
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: OCIManagedMachinePool is the Schema for the ocimanagedmachinepool
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIManagedMachinePoolSpec defines the desired state of an
              OCI managed machine pool. An OCIManagedMachinePool translates to an
              OKE NodePool. The properties are generated from https://docs.oracle.com/en-us/iaas/api/#/en/containerengine/20180222/datatypes/CreateNodePoolDetails
            properties:
              id:
                description: ID is the OCID of the associated NodePool
                type: string
              initialNodeLabels:
                description: InitialNodeLabels defines a list of key/value pairs to
                  add to nodes after they join the Kubernetes cluster.
                items:
                  description: KeyValue The properties that define a key value pair.
                  properties:
                    key:
                      description: The key of the pair.
                      type: string
                    value:
                      description: The value of the pair.
                      type: string
                  type: object
                type: array
              nodeEvictionNodePoolSettings:
                description: NodeEvictionNodePoolSettings defines the eviction settings.
                properties:
                  evictionGraceDuration:
                    description: 'EvictionGraceDuration defines the duration after
                      which OKE will give up eviction of the pods on the node. PT0M
                      will indicate you want to delete the node without cordon and
                      drain. Default PT60M, Min PT0M, Max: PT60M. Format ISO 8601
                      e.g PT30M'
                    type: string
                  isForceDeleteAfterGraceDuration:
                    description: IsForceDeleteAfterGraceDuration defines if the underlying
                      compute instance should be deleted if you cannot evict all the
                      pods in grace period
                    type: boolean
                type: object
              nodeMetadata:
                additionalProperties:
                  type: string
                description: NodeMetadata defines a list of key/value pairs to add
                  to each underlying OCI instance in the node pool on launch.
                type: object
              nodePoolNodeConfig:
                description: NodePoolNodeConfig defines the configuration of nodes
                  in the node pool.
                properties:
                  isPvEncryptionInTransitEnabled:
                    description: IsPvEncryptionInTransitEnabled defines whether in
                      transit encryption should be enabled on the nodes.
                    type: boolean
                  kmsKeyId:
                    description: KmsKeyId  defines whether in transit encryption should
                      be enabled on the nodes.
                    type: string
                  nodePoolPodNetworkOptionDetails:
                    description: NodePoolPodNetworkOptionDetails defines the pod networking
                      details of the node pool
                    properties:
                      cniType:
                        description: CniType describes the CNI plugin used by this
                          node pool. Allowed values are OCI_VCN_IP_NATIVE and FLANNEL_OVERLAY.
                        type: string
                      vcnIpNativePodNetworkOptions:
                        description: VcnIpNativePodNetworkOptions describes the network
                          options specific to using the OCI VCN Native CNI
                        properties:
                          maxPodsPerNode:
                            description: MemoryInGBs defines the max number of pods
                              per node in the node pool. This value will be limited
                              by the number of VNICs attachable to the node pool shape
                            type: integer
                          nsgNames:
                            description: NSGNames defines the NSGs associated with
                              the native pod network.
                            items:
                              type: string
                            type: array
                          subnetNames:
                            description: SubnetNames defines the Subnets associated
                              with the native pod network.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  nsgNames:
                    description: NsgNames defines the names of NSGs which will be
                      associated with the nodes. the NSGs are defined in OCIManagedCluster
                      object.
                    items:
                      type: string
                    type: array
                  placementConfigs:
                    description: PlacementConfigs defines the placement configurations
                      for the node pool.
                    items:
                      description: PlacementConfig defines the placement configurations
                        for the node pool.
                      properties:
                        availabilityDomain:
                          description: AvailabilityDomain defines the availability
                            domain in which to place nodes.
                          type: string
                        capacityReservationId:
                          description: CapacityReservationId defines the OCID of the
                            compute capacity reservation in which to place the compute
                            instance.
                          type: string
                        faultDomains:
                          description: FaultDomains defines the list of fault domains
                            in which to place nodes.
                          items:
                            type: string
                          type: array
                        subnetName:
                          description: SubnetName defines the name of the subnet which
                            need ot be associated with the Nodepool. The subnets are
                            defined in the OCiManagedCluster object.
                          type: string
                      type: object
                    type: array
                type: object
              nodeShape:
                description: NodeShape defines the name of the node shape of the nodes
                  in the node pool.
                type: string
              nodeShapeConfig:
                description: NodeShapeConfig defines the configuration of the shape
                  to launch nodes in the node pool.
                properties:
                  memoryInGBs:
                    description: MemoryInGBs defines the total amount of memory available
                      to each node, in gigabytes.
                    type: string
                  ocpus:
                    description: Ocpus defines the total number of OCPUs available
                      to each node in the node pool.
                    type: string
                type: object
              nodeSourceViaImage:
                description: NodeSourceViaImage defines the image configuration of
                  the nodes in the nodepool.
                properties:
                  bootVolumeSizeInGBs:
                    description: BootVolumeSizeInGBs defines the size of the boot
                      volume in GBs.
                    format: int64
                    type: integer
                  imageId:
                    description: ImageId defines the OCID of the image used to boot
                      the node.
                    type: string
                type: object
              providerID:
                description: ProviderID is the OCID of the associated NodePool in
                  a provider format
                type: string
              providerIDList:
                description: ProviderIDList are the identification IDs of machine
                  instances provided by the provider. This field must match the provider
                  IDs as seen on the node objects corresponding to a machine pool's
                  machine instances.
                items:
                  type: string
                type: array
              sshPublicKey:
                description: SshPublicKey defines the SSH public key on each node
                  in the node pool on launch.
                type: string
              version:
                description: Version represents the version of the OKE node pool.
                type: string
            type: object
          status:
            description: OCIManagedMachinePoolStatus defines the observed state of
              OCIManagedMachinePool
            properties:
              conditions:
                description: NetworkSpec encapsulates all things related to OCI network.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessages:
                items:
                  type: string
                type: array
              failureReason:
                description: MachineStatusError defines errors states for Machine
                  objects.
                type: string
              ready:
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: OCIManagedMachinePool is the Schema for the ocimanagedmachinepool
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIManagedMachinePoolSpec defines the desired state of an
              OCI managed machine pool. An OCIManagedMachinePool translates to an
              OKE NodePool. The properties are generated from https://docs.oracle.com/en-us/iaas/api/#/en/containerengine/20180222/datatypes/CreateNodePoolDetails
            properties:
              id:
                description: ID is the OCID of the associated NodePool
                type: string
              initialNodeLabels:
                description: InitialNodeLabels defines a list of key/value pairs to
                  add to nodes after they join the Kubernetes cluster.
                items:
                  description: KeyValue The properties that define a key value pair.
                  properties:
                    key:
                      description: The key of the pair.
                      type: string
                    value:
                      description: The value of the pair.
                      type: string
                  type: object
                type: array
              nodeEvictionNodePoolSettings:
                description: NodeEvictionNodePoolSettings defines the eviction settings.
                properties:
                  evictionGraceDuration:
                    description: 'EvictionGraceDuration defines the duration after
                      which OKE will give up eviction of the pods on the node. PT0M
                      will indicate you want to delete the node without cordon and
                      drain. Default PT60M, Min PT0M, Max: PT60M. Format ISO 8601
                      e.g PT30M'
                    type: string
                  isForceDeleteAfterGraceDuration:
                    description: IsForceDeleteAfterGraceDuration defines if the underlying
                      compute instance should be deleted if you cannot evict all the
                      pods in grace period
                    type: boolean
                type: object
              nodeMetadata:
                additionalProperties:
                  type: string
                description: NodeMetadata defines a list of key/value pairs to add
                  to each underlying OCI instance in the node pool on launch.
                type: object
              nodePoolNodeConfig:
                description: NodePoolNodeConfig defines the configuration of nodes
                  in the node pool.
                properties:
                  isPvEncryptionInTransitEnabled:
                    description: IsPvEncryptionInTransitEnabled defines whether in
                      transit encryption should be enabled on the nodes.
                    type: boolean
                  kmsKeyId:
                    description: KmsKeyId  defines whether in transit encryption should
                      be enabled on the nodes.
                    type: string
                  nodePoolPodNetworkOptionDetails:
                    description: NodePoolPodNetworkOptionDetails defines the pod networking
                      details of the node pool
                    properties:
                      cniType:
                        description: CniType describes the CNI plugin used by this
                          node pool. Allowed values are OCI_VCN_IP_NATIVE and FLANNEL_OVERLAY.
                        type: string
                      vcnIpNativePodNetworkOptions:
                        description: VcnIpNativePodNetworkOptions describes the network
                          options specific to using the OCI VCN Native CNI
                        properties:
                          maxPodsPerNode:
                            description: MemoryInGBs defines the max number of pods
                              per node in the node pool. This value will be limited
                              by the number of VNICs attachable to the node pool shape
                            type: integer
                          nsgNames:
                            description: NSGNames defines the NSGs associated with
                              the native pod network.
                            items:
                              type: string
                            type: array
                          subnetNames:
                            description: SubnetNames defines the Subnets associated
                              with the native pod network.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  nsgNames:
                    description: NsgNames defines the names of NSGs which will be
                      associated with the nodes. the NSGs are defined in OCIManagedCluster
                      object.
                    items:
                      type: string
                    type: array
                  placementConfigs:
                    description: PlacementConfigs defines the placement configurations
                      for the node pool.
                    items:
                      description: PlacementConfig defines the placement configurations
                        for the node pool.
                      properties:
                        availabilityDomain:
                          description: AvailabilityDomain defines the availability
                            domain in which to place nodes.
                          type: string
                        capacityReservationId:
                          description: CapacityReservationId defines the OCID of the
                            compute capacity reservation in which to place the compute
                            instance.
                          type: string
                        faultDomains:
                          description: FaultDomains defines the list of fault domains
                            in which to place nodes.
                          items:
                            type: string
                          type: array
                        subnetName:
                          description: SubnetName defines the name of the subnet which
                            need ot be associated with the Nodepool. The subnets are
                            defined in the OCiManagedCluster object.
                          type: string
                      type: object
                    type: array
                type: object
              nodeShape:
                description: NodeShape defines the name of the node shape of the nodes
                  in the node pool.
                type: string
              nodeShapeConfig:
                description: NodeShapeConfig defines the configuration of the shape
                  to launch nodes in the node pool.
                properties:
                  memoryInGBs:
                    description: MemoryInGBs defines the total amount of memory available
                      to each node, in gigabytes.
                    type: string
                  ocpus:
                    description: Ocpus defines the total number of OCPUs available
                      to each node in the node pool.
                    type: string
                type: object
              nodeSourceViaImage:
                description: NodeSourceViaImage defines the image configuration of
                  the nodes in the nodepool.
                properties:
                  bootVolumeSizeInGBs:
                    description: BootVolumeSizeInGBs defines the size of the boot
                      volume in GBs.
                    format: int64
                    type: integer
                  imageId:
                    description: ImageId defines the OCID of the image used to boot
                      the node.
                    type: string
                type: object
              providerID:
                description: ProviderID is the OCID of the associated NodePool in
                  a provider format
                type: string
              providerIDList:
                description: ProviderIDList are the identification IDs of machine
                  instances provided by the provider. This field must match the provider
                  IDs as seen on the node objects corresponding to a machine pool's
                  machine instances.
                items:
                  type: string
                type: array
              sshPublicKey:
                description: SshPublicKey defines the SSH public key on each node
                  in the node pool on launch.
                type: string
              version:
                description: Version represents the version of the OKE node pool.
                type: string
            type: object
          status:
            description: OCIManagedMachinePoolStatus defines the observed state of
              OCIManagedMachinePool
            properties:
              conditions:
                description: NetworkSpec encapsulates all things related to OCI network.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessages:
                items:
                  type: string
                type: array
              failureReason:
                description: MachineStatusError defines errors states for Machine
                  objects.
                type: string
              ready:
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ocimanagedmachinepooltemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: OCIManagedMachinePoolTemplate
    listKind: OCIManagedMachinePoolTemplateList
    plural: ocimanagedmachinepooltemplates
    singular: ocimanagedmachinepooltemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: OCIManagedMachinePoolTemplate is the Schema for the OCIManagedMachinePoolTemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIManagedMachinePoolTemplateSpec defines the desired state
              of OCIManagedMachinePoolTemplate.
            properties:
              template:
                description: OCIManagedMachinePoolSpec describes the data needed to
                  create an OCIManagedMachinePool from a template.
                properties:
                  spec:
                    description: OCIManagedMachinePoolSpec defines the desired state
                      of an OCI managed machine pool. An OCIManagedMachinePool translates
                      to an OKE NodePool. The properties are generated from https://docs.oracle.com/en-us/iaas/api/#/en/containerengine/20180222/datatypes/CreateNodePoolDetails
                    properties:
                      id:
                        description: ID is the OCID of the associated NodePool
                        type: string
                      initialNodeLabels:
                        description: InitialNodeLabels defines a list of key/value
                          pairs to add to nodes after they join the Kubernetes cluster.
                        items:
                          description: KeyValue The properties that define a key value
                            pair.
                          properties:
                            key:
                              description: The key of the pair.
                              type: string
                            value:
                              description: The value of the pair.
                              type: string
                          type: object
                        type: array
                      nodeEvictionNodePoolSettings:
                        description: NodeEvictionNodePoolSettings defines the eviction
                          settings.
                        properties:
                          evictionGraceDuration:
                            description: 'EvictionGraceDuration defines the duration
                              after which OKE will give up eviction of the pods on
                              the node. PT0M will indicate you want to delete the
                              node without cordon and drain. Default PT60M, Min PT0M,
                              Max: PT60M. Format ISO 8601 e.g PT30M'
                            type: string
                          isForceDeleteAfterGraceDuration:
                            description: IsForceDeleteAfterGraceDuration defines if
                              the underlying compute instance should be deleted if
                              you cannot evict all the pods in grace period
                            type: boolean
                        type: object
                      nodeMetadata:
                        additionalProperties:
                          type: string
                        description: NodeMetadata defines a list of key/value pairs
                          to add to each underlying OCI instance in the node pool
                          on launch.
                        type: object
                      nodePoolNodeConfig:
                        description: NodePoolNodeConfig defines the configuration
                          of nodes in the node pool.
                        properties:
                          isPvEncryptionInTransitEnabled:
                            description: IsPvEncryptionInTransitEnabled defines whether
                              in transit encryption should be enabled on the nodes.
                            type: boolean
                          kmsKeyId:
                            description: KmsKeyId  defines whether in transit encryption
                              should be enabled on the nodes.
                            type: string
                          nodePoolPodNetworkOptionDetails:
                            description: NodePoolPodNetworkOptionDetails defines the
                              pod networking details of the node pool
                            properties:
                              cniType:
                                description: CniType describes the CNI plugin used
                                  by this node pool. Allowed values are OCI_VCN_IP_NATIVE
                                  and FLANNEL_OVERLAY.
                                type: string
                              vcnIpNativePodNetworkOptions:
                                description: VcnIpNativePodNetworkOptions describes
                                  the network options specific to using the OCI VCN
                                  Native CNI
                                properties:
                                  maxPodsPerNode:
                                    description: MemoryInGBs defines the max number
                                      of pods per node in the node pool. This value
                                      will be limited by the number of VNICs attachable
                                      to the node pool shape
                                    type: integer
                                  nsgNames:
                                    description: NSGNames defines the NSGs associated
                                      with the native pod network.
                                    items:
                                      type: string
                                    type: array
                                  subnetNames:
                                    description: SubnetNames defines the Subnets associated
                                      with the native pod network.
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          nsgNames:
                            description: NsgNames defines the names of NSGs which
                              will be associated with the nodes. the NSGs are defined
                              in OCIManagedCluster object.
                            items:
                              type: string
                            type: array
                          placementConfigs:
                            description: PlacementConfigs defines the placement configurations
                              for the node pool.
                            items:
                              description: PlacementConfig defines the placement configurations
                                for the node pool.
                              properties:
                                availabilityDomain:
                                  description: AvailabilityDomain defines the availability
                                    domain in which to place nodes.
                                  type: string
                                capacityReservationId:
                                  description: CapacityReservationId defines the OCID
                                    of the compute capacity reservation in which to
                                    place the compute instance.
                                  type: string
                                faultDomains:
                                  description: FaultDomains defines the list of fault
                                    domains in which to place nodes.
                                  items:
                                    type: string
                                  type: array
                                subnetName:
                                  description: SubnetName defines the name of the
                                    subnet which need ot be associated with the Nodepool.
                                    The subnets are defined in the OCiManagedCluster
                                    object.
                                  type: string
                              type: object
                            type: array
                        type: object
                      nodeShape:
                        description: NodeShape defines the name of the node shape
                          of the nodes in the node pool.
                        type: string
                      nodeShapeConfig:
                        description: NodeShapeConfig defines the configuration of
                          the shape to launch nodes in the node pool.
                        properties:
                          memoryInGBs:
                            description: MemoryInGBs defines the total amount of memory
                              available to each node, in gigabytes.
                            type: string
                          ocpus:
                            description: Ocpus defines the total number of OCPUs available
                              to each node in the node pool.
                            type: string
                        type: object
                      nodeSourceViaImage:
                        description: NodeSourceViaImage defines the image configuration
                          of the nodes in the nodepool.
                        properties:
                          bootVolumeSizeInGBs:
                            description: BootVolumeSizeInGBs defines the size of the
                              boot volume in GBs.
                            format: int64
                            type: integer
                          imageId:
                            description: ImageId defines the OCID of the image used
                              to boot the node.
                            type: string
                        type: object
                      providerID:
                        description: ProviderID is the OCID of the associated NodePool
                          in a provider format
                        type: string
                      providerIDList:
                        description: ProviderIDList are the identification IDs of
                          machine instances provided by the provider. This field must
                          match the provider IDs as seen on the node objects corresponding
                          to a machine pool's machine instances.
                        items:
                          type: string
                        type: array
                      sshPublicKey:
                        description: SshPublicKey defines the SSH public key on each
                          node in the node pool on launch.
                        type: string
                      version:
                        description: Version represents the version of the OKE node
                          pool.
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: OCIManagedMachinePoolTemplate is the Schema for the OCIManagedMachinePoolTemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OCIManagedMachinePoolTemplateSpec defines the desired state
              of OCIManagedMachinePoolTemplate.
            properties:
              template:
                description: OCIManagedMachinePoolSpec describes the data needed to
                  create an OCIManagedMachinePool from a template.
                properties:
                  spec:
                    description: OCIManagedMachinePoolSpec defines the desired state
                      of an OCI managed machine pool. An OCIManagedMachinePool translates
                      to an OKE NodePool. The properties are generated from https://docs.oracle.com/en-us/iaas/api/#/en/containerengine/20180222/datatypes/CreateNodePoolDetails
                    properties:
                      id:
                        description: ID is the OCID of the associated NodePool
                        type: string
                      initialNodeLabels:
                        description: InitialNodeLabels defines a list of key/value
                          pairs to add to nodes after they join the Kubernetes cluster.
                        items:
                          description: KeyValue The properties that define a key value
                            pair.
                          properties:
                            key:
                              description: The key of the pair.
                              type: string
                            value:
                              description: The value of the pair.
                              type: string
                          type: object
                        type: array
                      nodeEvictionNodePoolSettings:
                        description: NodeEvictionNodePoolSettings defines the eviction
                          settings.
                        properties:
                          evictionGraceDuration:
                            description: 'EvictionGraceDuration defines the duration
                              after which OKE will give up eviction of the pods on
                              the node. PT0M will indicate you want to delete the
                              node without cordon and drain. Default PT60M, Min PT0M,
                              Max: PT60M. Format ISO 8601 e.g PT30M'
                            type: string
                          isForceDeleteAfterGraceDuration:
                            description: IsForceDeleteAfterGraceDuration defines if
                              the underlying compute instance should be deleted if
                              you cannot evict all the pods in grace period
                            type: boolean
                        type: object
                      nodeMetadata:
                        additionalProperties:
                          type: string
                        description: NodeMetadata defines a list of key/value pairs
                          to add to each underlying OCI instance in the node pool
                          on launch.
                        type: object
                      nodePoolNodeConfig:
                        description: NodePoolNodeConfig defines the configuration
                          of nodes in the node pool.
                        properties:
                          isPvEncryptionInTransitEnabled:
                            description: IsPvEncryptionInTransitEnabled defines whether
                              in transit encryption should be enabled on the nodes.
                            type: boolean
                          kmsKeyId:
                            description: KmsKeyId  defines whether in transit encryption
                              should be enabled on the nodes.
                            type: string
                          nodePoolPodNetworkOptionDetails:
                            description: NodePoolPodNetworkOptionDetails defines the
                              pod networking details of the node pool
                            properties:
                              cniType:
                                description: CniType describes the CNI plugin used
                                  by this node pool. Allowed values are OCI_VCN_IP_NATIVE
                                  and FLANNEL_OVERLAY.
                                type: string
                              vcnIpNativePodNetworkOptions:
                                description: VcnIpNativePodNetworkOptions describes
                                  the network options specific to using the OCI VCN
                                  Native CNI
                                properties:
                                  maxPodsPerNode:
                                    description: MemoryInGBs defines the max number
                                      of pods per node in the node pool. This value
                                      will be limited by the number of VNICs attachable
                                      to the node pool shape
                                    type: integer
                                  nsgNames:
                                    description: NSGNames defines the NSGs associated
                                      with the native pod network.
                                    items:
                                      type: string
                                    type: array
                                  subnetNames:
                                    description: SubnetNames defines the Subnets associated
                                      with the native pod network.
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          nsgNames:
                            description: NsgNames defines the names of NSGs which
                              will be associated with the nodes. the NSGs are defined
                              in OCIManagedCluster object.
                            items:
                              type: string
                            type: array
                          placementConfigs:
                            description: PlacementConfigs defines the placement configurations
                              for the node pool.
                            items:
                              description: PlacementConfig defines the placement configurations
                                for the node pool.
                              properties:
                                availabilityDomain:
                                  description: AvailabilityDomain defines the availability
                                    domain in which to place nodes.
                                  type: string
                                capacityReservationId:
                                  description: CapacityReservationId defines the OCID
                                    of the compute capacity reservation in which to
                                    place the compute instance.
                                  type: string
                                faultDomains:
                                  description: FaultDomains defines the list of fault
                                    domains in which to place nodes.
                                  items:
                                    type: string
                                  type: array
                                subnetName:
                                  description: SubnetName defines the name of the
                                    subnet which need ot be associated with the Nodepool.
                                    The subnets are defined in the OCiManagedCluster
                                    object.
                                  type: string
                              type: object
                            type: array
                        type: object
                      nodeShape:
                        description: NodeShape defines the name of the node shape
                          of the nodes in the node pool.
                        type: string
                      nodeShapeConfig:
                        description: NodeShapeConfig defines the configuration of
                          the shape to launch nodes in the node pool.
                        properties:
                          memoryInGBs:
                            description: MemoryInGBs defines the total amount of memory
                              available to each node, in gigabytes.
                            type: string
                          ocpus:
                            description: Ocpus defines the total number of OCPUs available
                              to each node in the node pool.
                            type: string
                        type: object
                      nodeSourceViaImage:
                        description: NodeSourceViaImage defines the image configuration
                          of the nodes in the nodepool.
                        properties:
                          bootVolumeSizeInGBs:
                            description: BootVolumeSizeInGBs defines the size of the
                              boot volume in GBs.
                            format: int64
                            type: integer
                          imageId:
                            description: ImageId defines the OCID of the image used
                              to boot the node.
                            type: string
                        type: object
                      providerID:
                        description: ProviderID is the OCID of the associated NodePool
                          in a provider format
                        type: string
                      providerIDList:
                        description: ProviderIDList are the identification IDs of
                          machine instances provided by the provider. This field must
                          match the provider IDs as seen on the node objects corresponding
                          to a machine pool's machine instances.
                        items:
                          type: string
                        type: array
                      sshPublicKey:
                        description: SshPublicKey defines the SSH public key on each
                          node in the node pool on launch.
                        type: string
                      version:
                        description: Version represents the version of the OKE node
                          pool.
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-controller-manager
  namespace: cluster-api-provider-oci-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-leader-election-role
  namespace: cluster-api-provider-oci-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-manager-role
rules:
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ociclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ociclusters/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ociclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimachines/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimachines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimachinepools
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimachinepools
  - ocimachinepools/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimachinepools/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimachinepools/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinepools
  - machinepools/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimanagedclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimanagedclusters/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimanagedclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimanagedcontrolplanes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimanagedcontrolplanes/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimanagedcontrolplanes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimanagedmachinepools
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimanagedmachinepools/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ocimanagedmachinepools/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ociclusteridentities
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-leader-election-rolebinding
  namespace: cluster-api-provider-oci-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capoci-leader-election-role
subjects:
- kind: ServiceAccount
  name: capoci-controller-manager
  namespace: cluster-api-provider-oci-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capoci-manager-role
subjects:
- kind: ServiceAccount
  name: capoci-controller-manager
  namespace: cluster-api-provider-oci-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capoci-proxy-role
subjects:
- kind: ServiceAccount
  name: capoci-controller-manager
  namespace: cluster-api-provider-oci-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 237d8a8a.cluster.x-k8s.io
kind: ConfigMap
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-manager-config
  namespace: cluster-api-provider-oci-system
---
apiVersion: v1
data:
  fingerprint: ${OCI_CREDENTIALS_FINGERPRINT_B64:=""}
  key: ${OCI_CREDENTIALS_KEY_B64:=""}
  passphrase: ${OCI_CREDENTIALS_PASSPHRASE_B64:=""}
  region: ${OCI_REGION_B64:=""}
  tenancy: ${OCI_TENANCY_ID_B64:=""}
  useInstancePrincipal: ${USE_INSTANCE_PRINCIPAL_B64:="ZmFsc2U="}
  user: ${OCI_USER_ID_B64:=""}
kind: Secret
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-auth-config
  namespace: cluster-api-provider-oci-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    control-plane: controller-manager
  name: capoci-controller-manager-metrics-service
  namespace: cluster-api-provider-oci-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    cluster.x-k8s.io/provider: infrastructure-oci
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-webhook-service
  namespace: cluster-api-provider-oci-system
spec:
  ports:
  - port: 443
    targetPort: webhook-server
  selector:
    cluster.x-k8s.io/provider: infrastructure-oci
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    control-plane: controller-manager
  name: capoci-controller-manager
  namespace: cluster-api-provider-oci-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-oci
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-oci
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: ${K8S_CP_LABEL:=node-role.kubernetes.io/control-plane}
                operator: Exists
            weight: 10
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
            weight: 10
      containers:
      - args:
        - --leader-elect
        - --feature-gates=MachinePool=${EXP_MACHINE_POOL:=false},OKE=${EXP_OKE:=false}
        - --metrics-bind-address=127.0.0.1:8080
        - --logging-format=${LOG_FORMAT:=text}
        - --init-oci-clients-on-startup=${INIT_OCI_CLIENTS_ON_STARTUP:=true}
        command:
        - /manager
        env:
        - name: AUTH_CONFIG_DIR
          value: /etc/oci
        image: ghcr.io/oracle/cluster-api-oci-controller:v0.9.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsGroup: 65532
          runAsUser: 65532
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /etc/oci
          name: auth-config-dir
          readOnly: true
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: capoci-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capoci-webhook-service-cert
      - name: auth-config-dir
        secret:
          secretName: capoci-auth-config
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-serving-cert
  namespace: cluster-api-provider-oci-system
spec:
  dnsNames:
  - capoci-webhook-service.cluster-api-provider-oci-system.svc
  - capoci-webhook-service.cluster-api-provider-oci-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: capoci-selfsigned-issuer
  secretName: capoci-webhook-service-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-selfsigned-issuer
  namespace: cluster-api-provider-oci-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-oci-system/capoci-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capoci-webhook-service
      namespace: cluster-api-provider-oci-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta2-ocicluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.ocicluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ociclusters
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capoci-webhook-service
      namespace: cluster-api-provider-oci-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta2-ocimanagedcluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.ocimanagedcluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ocimanagedclusters
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capoci-webhook-service
      namespace: cluster-api-provider-oci-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta2-ocimanagedcontrolplane
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.ocimanagedcontrolplane.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ocimanagedcontrolplanes
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capoci-webhook-service
      namespace: cluster-api-provider-oci-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta2-ocimanagedmachinepool
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.ocimanagedmachinepool.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ocimanagedmachinepools
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-oci-system/capoci-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capoci-webhook-service
      namespace: cluster-api-provider-oci-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta2-ocicluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.ocicluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ociclusters
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capoci-webhook-service
      namespace: cluster-api-provider-oci-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta2-ocimachinetemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.ocimachinetemplate.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ocimachinetemplates
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capoci-webhook-service
      namespace: cluster-api-provider-oci-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta2-ocimanagedcluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.ocimanagedcluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ocimanagedclusters
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capoci-webhook-service
      namespace: cluster-api-provider-oci-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta2-ocimanagedcontrolplane
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.ocimanagedcontrolplane.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ocimanagedcontrolplanes
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capoci-webhook-service
      namespace: cluster-api-provider-oci-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta2-ocimanagedmachinepool
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.ocimanagedmachinepool.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ocimanagedmachinepools
  sideEffects: None
