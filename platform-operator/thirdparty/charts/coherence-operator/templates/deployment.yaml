{{- if ne .Values.webhookCertType "manual" }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ default "coherence-webhook-server-cert" .Values.webhookCertSecret }}
  namespace: {{ .Release.Namespace }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: coherence-operator-webhook
  namespace: {{ .Release.Namespace }}
  labels:
    control-plane: coherence
    app.kubernetes.io/name: coherence-operator
    app.kubernetes.io/instance: coherence-operator-manager
    app.kubernetes.io/version: "3.3.1"
    app.kubernetes.io/component: webhook
    app.kubernetes.io/part-of: coherence-operator
    app.kubernetes.io/managed-by: helm
spec:
  ports:
  - name: webhook
    port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/name: coherence-operator
    app.kubernetes.io/instance: coherence-operator-manager
    app.kubernetes.io/version: "3.3.1"
    app.kubernetes.io/component: manager
---
apiVersion: v1
kind: Service
metadata:
  name: coherence-operator-rest
  namespace: {{ .Release.Namespace }}
  labels:
    control-plane: coherence
    app.kubernetes.io/name: coherence-operator
    app.kubernetes.io/instance: coherence-operator-rest
    app.kubernetes.io/version: "3.3.1"
    app.kubernetes.io/component: rest
    app.kubernetes.io/part-of: coherence-operator
    app.kubernetes.io/managed-by: helm
spec:
  ports:
  - name: http-rest
    port: 8000
    targetPort: 8000
  selector:
    app.kubernetes.io/name: coherence-operator
    app.kubernetes.io/instance: coherence-operator-manager
    app.kubernetes.io/version: "3.3.1"
    app.kubernetes.io/component: manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coherence-operator
  namespace: {{ .Release.Namespace }}
  labels:
    control-plane: coherence
    app.kubernetes.io/name: coherence-operator
    app.kubernetes.io/instance: coherence-operator-manager
    app.kubernetes.io/version: "3.3.1"
    app.kubernetes.io/component: manager
    app.kubernetes.io/part-of: coherence-operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/created-by: controller-manager
{{- if .Values.deploymentLabels }}
{{ toYaml .Values.deploymentLabels | indent 4 }}
{{- end }}
{{- if .Values.deploymentAnnotations }}
  annotations:
{{ toYaml .Values.deploymentAnnotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ default 3 .Values.replicas }}
  selector:
    matchLabels:
      control-plane: coherence
  template:
    metadata:
      labels:
        control-plane: coherence
        app.kubernetes.io/name: coherence-operator
        app.kubernetes.io/instance: coherence-operator-manager
        app.kubernetes.io/version: "3.3.1"
        app.kubernetes.io/component: manager
        app.kubernetes.io/part-of: coherence-operator
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/created-by: controller-manager
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 8 }}
{{- end }}
{{- if .Values.annotations }}
      annotations:
{{ toYaml .Values.annotations | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ default "coherence-operator" .Values.serviceAccountName }}
{{- if .Values.podSecurityContext }}
      securityContext:
{{ toYaml .Values.podSecurityContext | indent 8 }}
{{- end }}
      containers:
      - name: manager
        args:
        - operator
        - --enable-leader-election
{{- if (eq .Values.clusterRoles false) }}
        - --enable-webhook=false
        - --install-crd=false
{{- else }}
{{- if (eq .Values.webhooks false) }}
        - --enable-webhook=false
{{- end }}
{{- end }}
        command:
        - "/files/runner"
        env:
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OPERATOR_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: WEBHOOK_SERVICE
          value: coherence-operator-webhook
        - name: WEBHOOK_SECRET
          value: {{ default "coherence-webhook-server-cert" .Values.webhookCertSecret }}
        - name: SERVICE_NAME
          value: coherence-operator-rest
        - name: CERT_TYPE
          value: {{ default "self-signed" .Values.webhookCertType | quote }}
        - name: COHERENCE_IMAGE
{{- if kindIs "string" .Values.defaultCoherenceImage }}
          value: {{ .Values.defaultCoherenceImage | quote }}
{{- else }}
          value: {{ printf "%s/%s:%s" .Values.defaultCoherenceImage.registry .Values.defaultCoherenceImage.name .Values.defaultCoherenceImage.tag | quote }}
{{- end }}
        - name: RACK_LABEL
          value: {{ .Values.rackLabel | quote }}
        - name: SITE_LABEL
          value: {{ .Values.siteLabel | quote }}
        - name: OPERATOR_IMAGE
{{- if kindIs "string" .Values.image }}
          value: {{ .Values.image | quote }}
{{- else }}
          value: {{ printf "%s/%s:%s" .Values.image.registry .Values.image.name .Values.image.tag | quote }}
{{- end }}
        - name: WATCH_NAMESPACE
{{- if .Values.onlySameNamespace }}
          value: {{ .Release.Namespace | quote }}
{{- else }}
{{-   if .Values.clusterRoles }}
          value: {{ .Values.watchNamespaces | quote }}
{{-   else }}
          value: {{ .Release.Namespace | quote }}
{{-   end }}
{{- end }}
{{- if kindIs "string" .Values.image }}
        image: {{ .Values.image | quote }}
{{- else }}
        image: {{ printf "%s/%s:%s" .Values.image.registry .Values.image.name .Values.image.tag | quote }}
{{- end }}
        ports:
        - containerPort: 8000
          name: operator
          protocol: TCP
        - name: webhook-server
          containerPort: 9443
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8088
          name: health
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        readinessProbe:
          httpGet:
            port: health
            path: /readyz
          initialDelaySeconds: {{ default 10 .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ default 10 .Values.readinessProbe.periodSeconds }}
          failureThreshold: {{ default 3 .Values.readinessProbe.failureThreshold }}
        livenessProbe:
          httpGet:
            port: health
            path: /healthz
          initialDelaySeconds: {{ default 10 .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ default 10 .Values.livenessProbe.periodSeconds }}
          failureThreshold: {{ default 3 .Values.livenessProbe.failureThreshold }}
{{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
{{- end }}
{{- if .Values.securityContext }}
        securityContext:
{{ toYaml .Values.securityContext | indent 10 }}
{{- end }}
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
      terminationGracePeriodSeconds: 10
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- else }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: "topology.kubernetes.io/zone"
                labelSelector:
                  matchLabels:
                    control-plane: coherence
                    app.kubernetes.io/name: coherence-operator
                    app.kubernetes.io/instance: coherence-operator-manager
                    app.kubernetes.io/version: "3.3.1"
              weight: 50
            - podAffinityTerm:
                topologyKey: "oci.oraclecloud.com/fault-domain"
                labelSelector:
                  matchLabels:
                    control-plane: coherence
                    app.kubernetes.io/name: coherence-operator
                    app.kubernetes.io/instance: coherence-operator-manager
                    app.kubernetes.io/version: "3.3.1"
              weight: 10
            - podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchLabels:
                    control-plane: coherence
                    app.kubernetes.io/name: coherence-operator
                    app.kubernetes.io/instance: coherence-operator-manager
                    app.kubernetes.io/version: "3.3.1"
              weight: 1
{{- end }}
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ .Values.webhookCertSecret }}
