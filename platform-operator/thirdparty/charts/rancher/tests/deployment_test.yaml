suite: Test Deployment
templates:
- deployment.yaml
tests:
- it: should set --add-local=false
  set:
    addLocal: "false"
  asserts:
  - contains:
      path: spec.template.spec.containers[0].args
      content: "--add-local=false"
- it: should default to --add-local=true
  asserts:
  - contains:
      path: spec.template.spec.containers[0].args
      content: "--add-local=true"
- it: should add CATTLE_SYSTEM_DEFAULT_REGISTRY to env and maintain default vars
  set:
    systemDefaultRegistry: "registry.example.com"
    extraEnv:
    - name: CATTLE_TLS_MIN_VERSION
      value: "1.0"
  asserts:
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: CATTLE_SYSTEM_DEFAULT_REGISTRY
        value: "registry.example.com"
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: CATTLE_TLS_MIN_VERSION
        value: "1.0"
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: CATTLE_PEER_SERVICE
        value: RELEASE-NAME-rancher
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: CATTLE_NAMESPACE
        value: NAMESPACE
- it: should Just have default env vars
  asserts:
  - equal:
      path: spec.template.spec.containers[0].env
      value:
      - name: CATTLE_NAMESPACE
        value: NAMESPACE
      - name: CATTLE_PEER_SERVICE
        value: RELEASE-NAME-rancher
- it: should default imagePullPolicy to IfNotPresent
  asserts:
  - equal:
      path: spec.template.spec.containers[0].imagePullPolicy
      value: IfNotPresent
- it: should override imagePullPolicy to Always
  set:
    rancherImagePullPolicy: Always
  asserts:
  - equal:
      path: spec.template.spec.containers[0].imagePullPolicy
      value: Always
- it: should set sidecar image as busybox when auditLog.destination is sidecar and auditLog.level > 0
  set:
    auditLog:
      destination: sidecar
      level: 1
  asserts:
  - equal:
      path: spec.template.spec.containers[1].image
      value: busybox
- it: should override busybox image when auditLog.destination is sidecar and auditLog.level > 0 and busyboxImage is set
  set:
    auditLog:
      destination: sidecar
      level: 1
    busyboxImage: my.private.repo:5000/rancher/busybox:1.0.1
  asserts:
  - equal:
      path: spec.template.spec.containers[1].image
      value: my.private.repo:5000/rancher/busybox:1.0.1
- it: should not have command arg "--no-cacerts" when using private CA
  set:
    privateCA: "true"
  asserts:
  - notContains:
      path: spec.template.spec.containers[0].args
      content: "--no-cacerts"
- it: should not have command arg "--no-cacerts" when using default (rancher) ingress TLS
  set:
    tls: "ingress"
  asserts:
  - notContains:
      path: spec.template.spec.containers[0].args
      content: "--no-cacerts"
- it: should have command arg "--no-cacerts" when using letsEncrypt ingress TLS
  set:
    tls: "ingress"
    ingress.tls.source: "letsEncrypt"
  asserts:
  - contains:
      path: spec.template.spec.containers[0].args
      content: "--no-cacerts"
- it: should have command arg "--no-cacerts" when using external TLS
  set:
    tls: "external"
  asserts:
  - contains:
      path: spec.template.spec.containers[0].args
      content: "--no-cacerts"
- it: should add CATTLE_SYSTEM_CATALOG to env
  set:
    useBundledSystemChart: true
  asserts:
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: CATTLE_SYSTEM_CATALOG
        value: "bundled"
- it: should create custom-logos volume if customLogos.enabled and customLogos.volumeKind=persistentVolumeClaim using default volumeName
  set:
    customLogos.enabled: true
    customLogos.volumeKind: persistentVolumeClaim
  asserts:
  - contains:
      path: spec.template.spec.volumes
      content:
        name: custom-logos
        persistentVolumeClaim:
          claimName: RELEASE-NAME-rancher-custom-logos
- it: should create custom-logos volume customLogos.enabled and customLogos.volumeKind=persistentVolumeClaim using customLogos.volumeName
  set:
    customLogos.enabled: true
    customLogos.volumeKind: persistentVolumeClaim
    customLogos.volumeName: existing-pvc
  asserts:
  - contains:
      path: spec.template.spec.volumes
      content:
        name: custom-logos
        persistentVolumeClaim:
          claimName: existing-pvc
- it: should create custom-logos volume customLogos.enabled and customLogos.volumeKind=configMap using customLogos.volumeName
  set:
    customLogos.enabled: true
    customLogos.volumeKind: configMap
    customLogos.volumeName: existing-configMap
  asserts:
  - contains:
      path: spec.template.spec.volumes
      content:
        name: custom-logos
        configMap:
          name: existing-configMap
- it: should not create custom-logos volume if customLogos.enabled and customLogos.volumeKind=configMap but no customLogos.volumeName
  set:
    customLogos.enabled: true
    customLogos.volumeKind: configMap
  asserts:
  - isNull:
      path: spec.template.spec.volumes
- it: should not create custom-logos volume if not customLogos.enabled
  set:
    customLogos.enabled: false
  asserts:
  - isNull:
      path: spec.template.spec.volumes
- it: should mount custom-logos volume with default subpaths if customLogos.enabled and customLogos.volumeKind=persistentVolumeClaim
  set:
    customLogos.enabled: true
    customLogos.volumeKind: persistentVolumeClaim
  asserts:
  - contains:
      path: spec.template.spec.containers[0].volumeMounts
      content:
        mountPath: /usr/share/rancher/ui/assets/images/logos
        name: custom-logos
        subPath: ember
  - contains:
      path: spec.template.spec.containers[0].volumeMounts
      content:
        mountPath: /usr/share/rancher/ui-dashboard/dashboard/_nuxt/assets/images/pl
        name: custom-logos
        subPath: vue
- it: should mount custom-logos volume with default subpaths if customLogos.enabled and customLogos.volumeKind=persistentVolumeClaim and customLogos.volumeSubpaths.* blank 
  set:
    customLogos.enabled: true
    customLogos.volumeKind: persistentVolumeClaim
    customLogos.volumeSubpaths.emberUi: ""
    customLogos.volumeSubpaths.vueUi: ""
  asserts:
  - contains:
      path: spec.template.spec.containers[0].volumeMounts
      content:
        mountPath: /usr/share/rancher/ui/assets/images/logos
        name: custom-logos
        subPath: ember
  - contains:
      path: spec.template.spec.containers[0].volumeMounts
      content:
        mountPath: /usr/share/rancher/ui-dashboard/dashboard/_nuxt/assets/images/pl
        name: custom-logos
        subPath: vue
- it: should mount custom-logos volume with specified subpaths if customLogos.enabled and customLogos.volumeKind=persistentVolumeClaim
  set:
    customLogos.enabled: true
    customLogos.volumeKind: persistentVolumeClaim
    customLogos.volumeSubpaths.emberUi: test_ember
    customLogos.volumeSubpaths.vueUi: test_vue
  asserts:
  - contains:
      path: spec.template.spec.containers[0].volumeMounts
      content:
        mountPath: /usr/share/rancher/ui/assets/images/logos
        name: custom-logos
        subPath: test_ember
  - contains:
      path: spec.template.spec.containers[0].volumeMounts
      content:
        mountPath: /usr/share/rancher/ui-dashboard/dashboard/_nuxt/assets/images/pl
        name: custom-logos
        subPath: test_vue
- it: should mount custom-logos volume with default subpaths if customLogos.enabled and customLogos.volumeKind=persistentVolumeClaim and customLogos.volumeName
  set:
    customLogos.enabled: true
    customLogos.volumeKind: configMap
    customLogos.volumeName: existing-configMap
  asserts:
  - contains:
      path: spec.template.spec.containers[0].volumeMounts
      content:
        mountPath: /usr/share/rancher/ui/assets/images/logos
        name: custom-logos
        subPath: ember
  - contains:
      path: spec.template.spec.containers[0].volumeMounts
      content:
        mountPath: /usr/share/rancher/ui-dashboard/dashboard/_nuxt/assets/images/pl
        name: custom-logos
        subPath: vue
- it: should mount custom-logos volume with default subpaths if customLogos.enabled and customLogos.volumeKind=persistentVolumeClaim and customLogos.volumeName and customLogos.volumeSubpaths.* blank 
  set:
    customLogos.enabled: true
    customLogos.volumeKind: configMap
    customLogos.volumeName: existing-configMap
    customLogos.volumeSubpaths.emberUi: ""
    customLogos.volumeSubpaths.vueUi: ""
  asserts:
  - contains:
      path: spec.template.spec.containers[0].volumeMounts
      content:
        mountPath: /usr/share/rancher/ui/assets/images/logos
        name: custom-logos
        subPath: ember
  - contains:
      path: spec.template.spec.containers[0].volumeMounts
      content:
        mountPath: /usr/share/rancher/ui-dashboard/dashboard/_nuxt/assets/images/pl
        name: custom-logos
        subPath: vue
- it: should mount custom-logos volume with specified subpaths if customLogos.enabled and customLogos.volumeKind=persistentVolumeClaim and customLogos.volumeName
  set:
    customLogos.enabled: true
    customLogos.volumeKind: configMap
    customLogos.volumeName: existing-configMap
    customLogos.volumeSubpaths.emberUi: test_ember
    customLogos.volumeSubpaths.vueUi: test_vue
  asserts:
  - contains:
      path: spec.template.spec.containers[0].volumeMounts
      content:
        mountPath: /usr/share/rancher/ui/assets/images/logos
        name: custom-logos
        subPath: test_ember
  - contains:
      path: spec.template.spec.containers[0].volumeMounts
      content:
        mountPath: /usr/share/rancher/ui-dashboard/dashboard/_nuxt/assets/images/pl
        name: custom-logos
        subPath: test_vue
- it: should not mount custom-logos volume if customLogos.enabled and customLogos.volumeKind=configMap but no customLogos.volumeName
  set:
    customLogos.enabled: true
    customLogos.volumeKind: configMap
  asserts:
  - isNull:
      path: spec.template.spec.containers[0].volumeMounts
- it: should not mount custom-logos volume if not customLogos.enabled
  set:
    customLogos.enabled: false
  asserts:
  - isNull:
      path: spec.template.spec.containers[0].volumeMounts
