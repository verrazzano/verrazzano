# Copyright (c) 2022, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
metadata:
  creationTimestamp: null
  name: prod-no-storage-os-overrides
spec:
  components:
    applicationOperator:
      enabled: true
    authProxy:
      enabled: true
      kubernetes:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: app
                        operator: In
                        values:
                          - verrazzano-authproxy
                  topologyKey: kubernetes.io/hostname
                weight: 100
        replicas: 1
    certManager:
      certificate:
        acme:
          provider: ""
        ca:
          clusterResourceNamespace: cert-manager
          secretName: verrazzano-ca-certificate-secret
      enabled: true
      overrides:
        - values:
            affinity:
              podAntiAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchLabels:
                          app: cert-manager
                      topologyKey: kubernetes.io/hostname
                    weight: 100
            cainjector:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchLabels:
                            app: cainjector
                        topologyKey: kubernetes.io/hostname
                      weight: 100
              replicaCount: 1
            replicaCount: 1
            webhook:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchLabels:
                            app: webhook
                        topologyKey: kubernetes.io/hostname
                      weight: 100
              replicaCount: 1
    certManagerWebhookOCI:
      enabled: false
    clusterIssuer:
      enabled: true
      clusterResourceNamespace: "cert-manager"
      ca:
        secretName: "verrazzano-ca-certificate-secret"
    clusterOperator:
      enabled: true
    coherenceOperator:
      enabled: true
    console:
      enabled: true
      overrides:
        - values:
            affinity:
              podAntiAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchLabels:
                          app: verrazzano-console
                      topologyKey: kubernetes.io/hostname
                    weight: 100
            replicas: 1
    dns:
      wildcard:
        domain: nip.io
    elasticsearch:
      enabled: true
      nodes:
        - name: es-master
          replicas: 0
          resources:
            requests:
              memory: 1503238553600m
          roles:
            - master
          storage:
            size: 50Gi
        - name: es-data
          replicas: 0
          resources:
            requests:
              memory: 5153960755200m
          roles:
            - data
          storage:
            size: 50Gi
        - name: es-ingest
          replicas: 0
          resources:
            requests:
              memory: 2560Mi
          roles:
            - ingest
        - name: custom
          replicas: 3
          roles:
            - data
            - ingest
            - master
    fluentd:
      elasticsearchSecret: verrazzano-es-internal
      elasticsearchURL: http://verrazzano-authproxy-opensearch:8775
      enabled: true
    fluentOperator:
      enabled: false
    fluentbitOpensearchOutput:
      enabled: false
    grafana:
      enabled: true
    ingress:
      enabled: true
      overrides:
        - values:
            controller:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchLabels:
                            app.kubernetes.io/component: controller
                            app.kubernetes.io/name: ingress-nginx
                        topologyKey: kubernetes.io/hostname
                      weight: 100
              autoscaling:
                enabled: false
                minReplicas: 1
            defaultBackend:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchLabels:
                            app.kubernetes.io/component: default-backend
                            app.kubernetes.io/name: ingress-nginx
                        topologyKey: kubernetes.io/hostname
                      weight: 100
              replicaCount: 1
      type: LoadBalancer
    istio:
      egress:
        kubernetes:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - istio-egressgateway
                    topologyKey: kubernetes.io/hostname
                  weight: 100
          replicas: 1
      enabled: true
      ingress:
        kubernetes:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - istio-ingressgateway
                    topologyKey: kubernetes.io/hostname
                  weight: 100
          replicas: 1
      overrides:
        - values:
            apiVersion: install.istio.io/v1alpha1
            kind: IstioOperator
            spec:
              components:
                pilot:
                  k8s:
                    affinity:
                      podAntiAffinity:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          - podAffinityTerm:
                              labelSelector:
                                matchLabels:
                                  app: istiod
                              topologyKey: kubernetes.io/hostname
                            weight: 100
    keycloak:
      enabled: true
      mysql:
        overrides:
          - values:
              image:
                pullPolicy: IfNotPresent
                pullSecrets:
                  enabled: false
              podSpec:
                affinity:
                  podAntiAffinity:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      - podAffinityTerm:
                          labelSelector:
                            matchLabels:
                              app.kubernetes.io/instance: mysql-innodbcluster-mysql-mysql-server
                              app.kubernetes.io/name: mysql-innodbcluster-mysql-server
                          topologyKey: kubernetes.io/hostname
                        weight: 100
              router:
                podSpec:
                  affinity:
                    podAntiAffinity:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        - podAffinityTerm:
                            labelSelector:
                              matchLabels:
                                app.kubernetes.io/instance: mysql-innodbcluster-mysql-router
                                app.kubernetes.io/name: mysql-router
                            topologyKey: kubernetes.io/hostname
                          weight: 100
              routerInstances: 1
              serverInstances: 1
      overrides:
        - values:
            affinity: |
              podAntiAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - weight: 100
                    podAffinityTerm:
                      labelSelector:
                        matchLabels:
                          app.kubernetes.io/instance: keycloak
                          app.kubernetes.io/name: keycloak
                      topologyKey: kubernetes.io/hostname
            replicas: 1
    kiali:
      enabled: true
      overrides:
        - values:
            deployment:
              affinity:
                pod_anti:
                  preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchLabels:
                            app: kiali
                        topologyKey: kubernetes.io/hostname
                      weight: 100
              replicas: 1
    kibana:
      enabled: true
      replicas: 1
    kubeStateMetrics:
      enabled: true
    mySQLOperator:
      enabled: true
    oam:
      enabled: true
    prometheus:
      enabled: true
    prometheusOperator:
      enabled: true
      overrides:
        - values:
            prometheus:
              prometheusSpec:
                resources:
                  requests:
                    memory: 128Mi
        - values:
            prometheus:
              prometheusSpec:
                affinity:
                  podAntiAffinity:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      - podAffinityTerm:
                          labelSelector:
                            matchLabels:
                              app.kubernetes.io/name: prometheus
                          topologyKey: kubernetes.io/hostname
                        weight: 100
                replicas: 1
    rancher:
      enabled: true
    verrazzano:
      enabled: true
    weblogicOperator:
      enabled: true
    argoCD:
      enabled: false
    clusterAPI:
      enabled: true
  defaultVolumeSource:
    emptyDir: {}
  environmentName: default
  profile: prod
  security: {}
status: {}
