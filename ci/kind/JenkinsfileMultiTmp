// Copyright (c) 2020, 2021, Oracle and/or its affiliates.
// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

pipeline {

    agent {
       docker {
            image "${RUNNER_DOCKER_IMAGE}"
            args "${RUNNER_DOCKER_ARGS}"
            registryUrl "${RUNNER_DOCKER_REGISTRY_URL}"
            registryCredentialsId 'ocir-pull-and-push-account'
            label "VM.Standard2.8"
        }
    }

    parameters {
        string (name: 'VERRAZZANO_BRANCH',
                        defaultValue: 'develop',
                        description: 'Branch or tag or commit to clone and checkout, of the Verrazzano repo',
                        trim: true)
        booleanParam (description: 'Whether to dump k8s cluster on success (off by default can be useful to capture for comparing to failed cluster)', name: 'DUMP_K8S_CLUSTER_ON_SUCCESS', defaultValue: false)
    }

    environment {
        KUBERNETES_VERSION = '1.17, 1.18, 1.19, 1.20'
    }

    stages {
        stage('Trigger Acceptance Tests') {
            steps {
                script {
                    def kversions = [:]
                    for (kversion in env.KUBERNETES_VERSION.tokenize(',')) {
                        sh """
                             echo '>>>>> Kubernetes Version ${kversion}'
                        """
                        build job: 'verrazzano-new-kind-acceptance-tests',
                            parameters: [
                                string(name: 'VERRAZZANO_BRANCH', value: params.VERRAZZANO_BRANCH),
                                string(name: 'KUBERNETES_CLUSTER_VERSION', value: kversion)
                            ], wait: false
                    }
                }
            }
        }
    }
}
