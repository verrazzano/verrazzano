// Copyright (c) 2021, 2022, Oracle and/or its affiliates.
// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

pipeline {
    options {
        timestamps ()
    }

    agent {
       docker {
            image "${V8O_HELPER_DOCKER_IMAGE}"
            args "${RUNNER_DOCKER_ARGS}"
            registryUrl "${RUNNER_DOCKER_REGISTRY_URL}"
            registryCredentialsId 'ocir-pull-and-push-account'
            label "internal"
        }
    }

    environment {
        OCI_CLI_AUTH="instance_principal"
        OCI_OS_NAMESPACE = credentials('oci-os-namespace')
        OCI_OS_SHARED_BUCKET="build-shared-files"
    }

    stages {
        stage('Clean workspace and checkout') {
            environment {
                GOPATH = '/home/opc/go'
                GO_REPO_PATH = "${GOPATH}/src/github.com/verrazzano"
                NETRC_FILE = credentials('netrc')
            }
            steps {
                sh """
                    echo "${NODE_LABELS}"
                    echo "SCM checkout of ${env.GIT_BRANCH} at ${env.GIT_COMMIT}"

                    cp -f "${NETRC_FILE}" $HOME/.netrc
                    chmod 600 $HOME/.netrc

                    rm -rf ${GO_REPO_PATH}/verrazzano
                    mkdir -p ${GO_REPO_PATH}/verrazzano
                    tar cf - . | (cd ${GO_REPO_PATH}/verrazzano/ ; tar xf -)
                """
            }
            script {
                sh """
                    echo "Downloading verrazzano-helper from object storage"
                    oci --region us-phoenix-1 os object get --namespace ${OCI_OS_NAMESPACE} -bn ${OCI_OS_SHARED_BUCKET} --name ${env.BRANCH_NAME}/verrazzano-helper --file ${WORKSPACE}/verrazzano-helper
                """
            }
        }

        stage('Update JIRA tickets with pull request') {
            environment {
                JIRA_USERNAME = credentials('jira-username')
                JIRA_PASSWORD = credentials('jira-password')
            }
            steps {
                script {
                    // Do not add a comment to the JIRA if an existing pull request is being updated
                    if (currentBuild.changeSets.size() == 0) {
                        // Escape double quotes in the PR title
                        env.PR_TITLE = sh(script:'echo "${CHANGE_TITLE}" | sed \'s/"/\\\\"/g\'', returnStdout: true).trim()
                        sh """
                            ${WORKSPACE}/verrazzano-helper update ticket-commits --pr-url "${env.CHANGE_URL}" --pr-title "${env.PR_TITLE}" --pr-target "${env.CHANGE_TARGET}" --token unused --jira-env=prod
                        """
                    } else {
                        echo "Existing pull request updated, skipping update of JIRA ticket"
                    }
                }
            }
        }
    }

    post {
        failure {
            script {
                if (env.GIT_BRANCH == "master" || env.GIT_BRANCH ==~ "release-*" ) {
                    slackSend ( channel: "$SLACK_ALERT_CHANNEL", message: "Job Failed - \"${env.JOB_NAME}\" build: ${env.BUILD_NUMBER}\n\nView the log at:\n ${env.BUILD_URL}\n\nBlue Ocean:\n${env.RUN_DISPLAY_URL}\n\n" )
                }
            }
        }
        cleanup {
            deleteDir()
        }
    }
}
