// Copyright (c) 2023, Oracle and/or its affiliates.
// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

// Non Fields
def branchSpecificSchedule = getCronSchedule()

def ociOsRegion = "us-phoenix-1"
def ociOsBucket = "verrazzano-builds"
def urlTriggerBranchName = env.BRANCH_NAME.replace('/', '%2F')
def CLEAN_BACKEND_OS_LOCATION = "${CLEAN_BRANCH_NAME}-last-clean-backend-test/verrazzano_backend-commit.txt"

For each branch (master + release-*) {
    Check if there is anything in objectstore for each branch {
        If yes, check state {
            If state changed, kick off new jobs {
                commit = get(https://objectstorage.us-phoenix-1.oraclecloud.com/n/stevengreenberginc/b/verrazzano-builds/o/master/last-stable-commit.txt)
                if state.lastBackend != commit {
                    (run backend pipeline with new commit)
                    state.lastBackend = commit
                }
            }
            If no change, ignore/continue
        }
        If no, kick off new jobs (first time seeing new url/pipeline) {
            (run periodics pipeline with new commit)
            state.lastBackend = commit
            (run backend pipeline with new commit)
            state.lastBackend = commit
        }
    }
}