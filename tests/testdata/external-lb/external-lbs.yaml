# Copyright (c) 2022, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

---
apiVersion: v1
kind: Service
metadata:
  name: system-external-lb-svc
  namespace: external-lb
spec:
  ports:
    - name: https
      port: 433
      protocol: TCP
      targetPort: 8777
  selector:
    app: system-external-lb
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: system-external-lb
  name: system-external-lb
  namespace: external-lb
spec:
  selector:
    matchLabels:
      app: system-external-lb
  template:
    metadata:
      labels:
        app: system-external-lb
    spec:
      volumes:
        - name: config
          configMap:
            name: system-external-lb-cm
            items:
              - key: startup.sh
                path: startup.sh
                mode: 0755
              - key: nginx.conf
                path: nginx.conf
                mode: 0744
      containers:
        - image: ghcr.io/verrazzano/nginx-ingress-controller:1.1.1-20220413170248-b60724ed1
          imagePullPolicy: IfNotPresent
          name: system-external-lb
          command: ["/config/startup.sh"]
          ports:
            - containerPort: 8777
          volumeMounts:
            - mountPath: /config
              name: config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: system-external-lb-cm
  namespace: external-lb
  labels:
    app: system-external-lb
data:
  nginx.conf: |
    error_log  /var/log/nginx/error.log info;
    pid        logs/nginx.pid;

    events {
        worker_connections  1024;
    }

    stream {
        upstream nginx_ingress {
           least_conn;
{{.NginxIngressServiceServerList}}
        }

        server {
            listen       8777;
            proxy_pass nginx_ingress;
        }
    }
  startup.sh: |
    #!/bin/bash
    startupDir=$(dirname $0)
    cd $startupDir
    cp $startupDir/nginx.conf /etc/nginx/nginx.conf

    mkdir -p /etc/nginx/logs

    /usr/local/nginx/sbin/nginx -c /etc/nginx/nginx.conf -p /etc/nginx -t
    /usr/local/nginx/sbin/nginx -c /etc/nginx/nginx.conf -p /etc/nginx

    while [ $? -ne 0 ]; do
        sleep 20
        echo "retry nginx startup ..."
        /usr/local/nginx/sbin/nginx -c /etc/nginx/nginx.conf -p /etc/nginx
    done

    tail -f /var/log/nginx/error.log
---
apiVersion: v1
kind: Service
metadata:
  name: application-external-lb-svc
  namespace: external-lb
spec:
  ports:
    - name: https
      port: 433
      protocol: TCP
      targetPort: 8777
  selector:
    app: application-external-lb
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: application-external-lb
  name: application-external-lb
  namespace: external-lb
spec:
  selector:
    matchLabels:
      app: application-external-lb
  template:
    metadata:
      labels:
        app: application-external-lb
    spec:
      volumes:
        - name: config
          configMap:
            name: application-external-lb-cm
            items:
              - key: startup.sh
                path: startup.sh
                mode: 0755
              - key: nginx.conf
                path: nginx.conf
                mode: 0744
      containers:
        - image: ghcr.io/verrazzano/nginx-ingress-controller:1.1.1-20220413170248-b60724ed1
          imagePullPolicy: IfNotPresent
          name: application-external-lb
          command: ["/config/startup.sh"]
          ports:
            - containerPort: 8777
          volumeMounts:
            - mountPath: /config
              name: config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: application-external-lb-cm
  namespace: external-lb
  labels:
    app: application-external-lb
data:
  nginx.conf: |
    error_log  /var/log/nginx/error.log info;
    pid        logs/nginx.pid;

    events {
        worker_connections  1024;
    }

    stream {
        upstream nginx_ingress {
           least_conn;
{{.IstioIngressServiceServerList}}
        }

        server {
            listen       8777;
            proxy_pass nginx_ingress;
        }
    }
  startup.sh: |
    #!/bin/bash
    startupDir=$(dirname $0)
    cd $startupDir
    cp $startupDir/nginx.conf /etc/nginx/nginx.conf

    mkdir -p /etc/nginx/logs

    /usr/local/nginx/sbin/nginx -c /etc/nginx/nginx.conf -p /etc/nginx -t
    /usr/local/nginx/sbin/nginx -c /etc/nginx/nginx.conf -p /etc/nginx

    while [ $? -ne 0 ]; do
        sleep 20
        echo "retry nginx startup ..."
        /usr/local/nginx/sbin/nginx -c /etc/nginx/nginx.conf -p /etc/nginx
    done

    tail -f /var/log/nginx/error.log
