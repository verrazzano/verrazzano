{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "14691"
    },
    "items": [
        {
            "metadata": {
                "name": "ingress-controller-ingress-nginx-controller",
                "namespace": "verrazzano-ingress-nginx",
                "uid": "c9d3fcd8-7684-43c7-9a0a-26748cc29155",
                "resourceVersion": "4766",
                "generation": 1,
                "creationTimestamp": "2022-05-25T13:19:19Z",
                "labels": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "ingress-controller",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ingress-nginx",
                    "app.kubernetes.io/version": "1.1.1",
                    "helm.sh/chart": "ingress-nginx-4.0.15"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "ingress-controller",
                    "meta.helm.sh/release-namespace": "verrazzano-ingress-nginx"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "controller",
                        "app.kubernetes.io/instance": "ingress-controller",
                        "app.kubernetes.io/name": "ingress-nginx"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "controller",
                            "app.kubernetes.io/instance": "ingress-controller",
                            "app.kubernetes.io/name": "ingress-nginx"
                        },
                        "annotations": {
                            "prometheus.io/port": "10254",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/rewriteAppHTTPProbers": "true",
                            "system.io/scrape": "true",
                            "traffic.sidecar.istio.io/excludeInboundPorts": "80,443",
                            "traffic.sidecar.istio.io/includeInboundPorts": ""
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "custom-400-error",
                                "configMap": {
                                    "name": "ingress-controller-ingress-nginx-defaultbackend-custom-error-pages",
                                    "items": [
                                        {
                                            "key": "400.html",
                                            "path": "400.html"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "controller",
                                "image": "ghcr.io/verrazzano/nginx-ingress-controller:1.1.1-20220413170248-b60724ed1",
                                "args": [
                                    "/nginx-ingress-controller",
                                    "--default-backend-service=$(POD_NAMESPACE)/ingress-controller-ingress-nginx-defaultbackend",
                                    "--publish-service=$(POD_NAMESPACE)/ingress-controller-ingress-nginx-controller",
                                    "--election-id=ingress-controller-leader",
                                    "--controller-class=k8s.io/ingress-nginx",
                                    "--configmap=$(POD_NAMESPACE)/ingress-controller-ingress-nginx-controller",
                                    "--watch-ingress-without-class=true"
                                ],
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "https",
                                        "containerPort": 443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 10254,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "LD_PRELOAD",
                                        "value": "/usr/local/lib/libmimalloc.so"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "90Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "custom-400-error",
                                        "mountPath": "/usr/local/nginx/html"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/wait-shutdown"
                                            ]
                                        }
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 101,
                                    "allowPrivilegeEscalation": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 300,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "ingress-controller-ingress-nginx",
                        "serviceAccount": "ingress-controller-ingress-nginx",
                        "securityContext": {},
                        "imagePullSecrets": [
                            {
                                "name": "verrazzano-container-registry"
                            }
                        ],
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2022-05-25T13:20:00Z",
                        "lastTransitionTime": "2022-05-25T13:20:00Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2022-05-25T13:20:00Z",
                        "lastTransitionTime": "2022-05-25T13:19:19Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"ingress-controller-ingress-nginx-controller-6b8bb69d6d\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "ingress-controller-ingress-nginx-defaultbackend",
                "namespace": "verrazzano-ingress-nginx",
                "uid": "d3050ef0-c2d0-4fc5-8efd-eaba31803e5b",
                "resourceVersion": "4631",
                "generation": 1,
                "creationTimestamp": "2022-05-25T13:19:19Z",
                "labels": {
                    "app.kubernetes.io/component": "default-backend",
                    "app.kubernetes.io/instance": "ingress-controller",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ingress-nginx",
                    "app.kubernetes.io/version": "1.1.1",
                    "helm.sh/chart": "ingress-nginx-4.0.15"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "ingress-controller",
                    "meta.helm.sh/release-namespace": "verrazzano-ingress-nginx"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "default-backend",
                        "app.kubernetes.io/instance": "ingress-controller",
                        "app.kubernetes.io/name": "ingress-nginx"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "default-backend",
                            "app.kubernetes.io/instance": "ingress-controller",
                            "app.kubernetes.io/name": "ingress-nginx"
                        },
                        "annotations": {
                            "traffic.sidecar.istio.io/excludeInboundPorts": "8080"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "error-pages",
                                "configMap": {
                                    "name": "ingress-controller-ingress-nginx-defaultbackend-custom-error-pages",
                                    "items": [
                                        {
                                            "key": "301.html",
                                            "path": "301.html"
                                        },
                                        {
                                            "key": "302.html",
                                            "path": "302.html"
                                        },
                                        {
                                            "key": "304.html",
                                            "path": "304.html"
                                        },
                                        {
                                            "key": "307.html",
                                            "path": "307.html"
                                        },
                                        {
                                            "key": "308.html",
                                            "path": "308.html"
                                        },
                                        {
                                            "key": "400.html",
                                            "path": "400.html"
                                        },
                                        {
                                            "key": "401.html",
                                            "path": "401.html"
                                        },
                                        {
                                            "key": "403.html",
                                            "path": "403.html"
                                        },
                                        {
                                            "key": "404.html",
                                            "path": "404.html"
                                        },
                                        {
                                            "key": "407.html",
                                            "path": "407.html"
                                        },
                                        {
                                            "key": "408.html",
                                            "path": "408.html"
                                        },
                                        {
                                            "key": "409.html",
                                            "path": "409.html"
                                        },
                                        {
                                            "key": "413.html",
                                            "path": "413.html"
                                        },
                                        {
                                            "key": "414.html",
                                            "path": "414.html"
                                        },
                                        {
                                            "key": "415.html",
                                            "path": "415.html"
                                        },
                                        {
                                            "key": "416.html",
                                            "path": "416.html"
                                        },
                                        {
                                            "key": "418.html",
                                            "path": "418.html"
                                        },
                                        {
                                            "key": "421.html",
                                            "path": "421.html"
                                        },
                                        {
                                            "key": "429.html",
                                            "path": "429.html"
                                        },
                                        {
                                            "key": "431.html",
                                            "path": "431.html"
                                        },
                                        {
                                            "key": "500.html",
                                            "path": "500.html"
                                        },
                                        {
                                            "key": "501.html",
                                            "path": "501.html"
                                        },
                                        {
                                            "key": "502.html",
                                            "path": "502.html"
                                        },
                                        {
                                            "key": "503.html",
                                            "path": "503.html"
                                        },
                                        {
                                            "key": "504.html",
                                            "path": "504.html"
                                        },
                                        {
                                            "key": "505.html",
                                            "path": "505.html"
                                        },
                                        {
                                            "key": "301.html",
                                            "path": "301.htm"
                                        },
                                        {
                                            "key": "302.html",
                                            "path": "302.htm"
                                        },
                                        {
                                            "key": "304.html",
                                            "path": "304.htm"
                                        },
                                        {
                                            "key": "307.html",
                                            "path": "307.htm"
                                        },
                                        {
                                            "key": "308.html",
                                            "path": "308.htm"
                                        },
                                        {
                                            "key": "400.html",
                                            "path": "400.htm"
                                        },
                                        {
                                            "key": "401.html",
                                            "path": "401.htm"
                                        },
                                        {
                                            "key": "403.html",
                                            "path": "403.htm"
                                        },
                                        {
                                            "key": "404.html",
                                            "path": "404.htm"
                                        },
                                        {
                                            "key": "407.html",
                                            "path": "407.htm"
                                        },
                                        {
                                            "key": "408.html",
                                            "path": "408.htm"
                                        },
                                        {
                                            "key": "409.html",
                                            "path": "409.htm"
                                        },
                                        {
                                            "key": "413.html",
                                            "path": "413.htm"
                                        },
                                        {
                                            "key": "414.html",
                                            "path": "414.htm"
                                        },
                                        {
                                            "key": "415.html",
                                            "path": "415.htm"
                                        },
                                        {
                                            "key": "416.html",
                                            "path": "416.htm"
                                        },
                                        {
                                            "key": "418.html",
                                            "path": "418.htm"
                                        },
                                        {
                                            "key": "421.html",
                                            "path": "421.htm"
                                        },
                                        {
                                            "key": "429.html",
                                            "path": "429.htm"
                                        },
                                        {
                                            "key": "431.html",
                                            "path": "431.htm"
                                        },
                                        {
                                            "key": "500.html",
                                            "path": "500.htm"
                                        },
                                        {
                                            "key": "501.html",
                                            "path": "501.htm"
                                        },
                                        {
                                            "key": "502.html",
                                            "path": "502.htm"
                                        },
                                        {
                                            "key": "503.html",
                                            "path": "503.htm"
                                        },
                                        {
                                            "key": "504.html",
                                            "path": "504.htm"
                                        },
                                        {
                                            "key": "505.html",
                                            "path": "505.htm"
                                        },
                                        {
                                            "key": "301.json",
                                            "path": "301.json"
                                        },
                                        {
                                            "key": "302.json",
                                            "path": "302.json"
                                        },
                                        {
                                            "key": "304.json",
                                            "path": "304.json"
                                        },
                                        {
                                            "key": "307.json",
                                            "path": "307.json"
                                        },
                                        {
                                            "key": "308.json",
                                            "path": "308.json"
                                        },
                                        {
                                            "key": "400.json",
                                            "path": "400.json"
                                        },
                                        {
                                            "key": "401.json",
                                            "path": "401.json"
                                        },
                                        {
                                            "key": "403.json",
                                            "path": "403.json"
                                        },
                                        {
                                            "key": "404.json",
                                            "path": "404.json"
                                        },
                                        {
                                            "key": "407.json",
                                            "path": "407.json"
                                        },
                                        {
                                            "key": "408.json",
                                            "path": "408.json"
                                        },
                                        {
                                            "key": "409.json",
                                            "path": "409.json"
                                        },
                                        {
                                            "key": "413.json",
                                            "path": "413.json"
                                        },
                                        {
                                            "key": "414.json",
                                            "path": "414.json"
                                        },
                                        {
                                            "key": "415.json",
                                            "path": "415.json"
                                        },
                                        {
                                            "key": "416.json",
                                            "path": "416.json"
                                        },
                                        {
                                            "key": "418.json",
                                            "path": "418.json"
                                        },
                                        {
                                            "key": "421.json",
                                            "path": "421.json"
                                        },
                                        {
                                            "key": "429.json",
                                            "path": "429.json"
                                        },
                                        {
                                            "key": "431.json",
                                            "path": "431.json"
                                        },
                                        {
                                            "key": "500.json",
                                            "path": "500.json"
                                        },
                                        {
                                            "key": "501.json",
                                            "path": "501.json"
                                        },
                                        {
                                            "key": "502.json",
                                            "path": "502.json"
                                        },
                                        {
                                            "key": "503.json",
                                            "path": "503.json"
                                        },
                                        {
                                            "key": "504.json",
                                            "path": "504.json"
                                        },
                                        {
                                            "key": "505.json",
                                            "path": "505.json"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "ingress-nginx-default-backend",
                                "image": "ghcr.io/verrazzano/nginx-ingress-default-backend:1.1.1-20220413170248-b60724ed1",
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "error-pages",
                                        "mountPath": "/www"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "failureThreshold": 6
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 65534,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 60,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "ingress-controller-ingress-nginx-backend",
                        "serviceAccount": "ingress-controller-ingress-nginx-backend",
                        "securityContext": {},
                        "imagePullSecrets": [
                            {
                                "name": "verrazzano-container-registry"
                            }
                        ],
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2022-05-25T13:19:44Z",
                        "lastTransitionTime": "2022-05-25T13:19:44Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2022-05-25T13:19:44Z",
                        "lastTransitionTime": "2022-05-25T13:19:19Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"ingress-controller-ingress-nginx-defaultbackend-56c5fbc6b8\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
