# Copyright (c) 2021, 2022, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

==== START logs for container controller of pod ingress-nginx/ingress-controller-ingress-nginx-controller-6d798895b8-zpt6q ====
-------------------------------------------------------------------------------
NGINX Ingress controller
  Release:       0.46.0-20210510134749-abc2d2088
  Build:         git-abc2d2088
  Repository:    https://github.com/verrazzano/ingress-nginx.git
  nginx version: nginx/1.19.6

-------------------------------------------------------------------------------

I0805 08:05:41.937371       7 flags.go:208] "Watching for Ingress" class="nginx"
W0805 08:05:41.937510       7 flags.go:213] Ingresses with an empty class will also be processed by this Ingress controller
W0805 08:05:41.938484       7 client_config.go:614] Neither --kubeconfig nor --master was specified.  Using the inClusterConfig.  This might not work.
I0805 08:05:41.938844       7 main.go:241] "Creating API client" host="REDACTED-IP4-ADDRESS"
W0805 08:05:47.155687       7 main.go:282] Initial connection to the Kubernetes API server was retried 3 times.
I0805 08:05:47.155736       7 main.go:285] "Running in Kubernetes cluster" major="1" minor="20" git="v1.20.8" state="clean" commit="50317190d44dbdb51ae7ff430917b32ba96188b5" platform="linux/amd64"
I0805 08:05:47.165280       7 main.go:87] "Valid default backend" service="ingress-nginx/ingress-controller-ingress-nginx-defaultbackend"
I0805 08:05:47.365788       7 main.go:105] "SSL fake certificate created" file="/etc/ingress-controller/ssl/default-fake-certificate.pem"
I0805 08:05:47.369423       7 main.go:115] "Enabling new Ingress features available since Kubernetes v1.18"
W0805 08:05:47.377362       7 main.go:127] No IngressClass resource with name nginx found. Only annotation will be used.
I0805 08:05:47.422509       7 nginx.go:254] "Starting NGINX Ingress controller"
I0805 08:05:47.441234       7 event.go:282] Event(v1.ObjectReference{Kind:"ConfigMap", Namespace:"ingress-nginx", Name:"ingress-controller-ingress-nginx-controller", UID:"41825dc5-dbbd-41b9-9b7f-7d7e6c8a036f", APIVersion:"v1", ResourceVersion:"3050", FieldPath:""}): type: 'Normal' reason: 'CREATE' ConfigMap ingress-nginx/ingress-controller-ingress-nginx-controller
I0805 08:05:48.623053       7 nginx.go:296] "Starting NGINX process"
I0805 08:05:48.623118       7 leaderelection.go:243] attempting to acquire leader lease ingress-nginx/ingress-controller-leader-nginx...
I0805 08:05:48.623746       7 controller.go:146] "Configuration changes detected, backend reload required"
I0805 08:05:48.654774       7 leaderelection.go:253] successfully acquired lease ingress-nginx/ingress-controller-leader-nginx
I0805 08:05:48.654816       7 status.go:84] "New leader elected" identity="ingress-controller-ingress-nginx-controller-6d798895b8-zpt6q"
I0805 08:05:48.684408       7 controller.go:163] "Backend successfully reloaded"
I0805 08:05:48.684517       7 controller.go:174] "Initial sync, sleeping for 1 second"
I0805 08:05:48.684598       7 event.go:282] Event(v1.ObjectReference{Kind:"Pod", Namespace:"ingress-nginx", Name:"ingress-controller-ingress-nginx-controller-6d798895b8-zpt6q", UID:"9724b6cb-c946-4640-9359-6e6b83ed10f9", APIVersion:"v1", ResourceVersion:"3288", FieldPath:""}): type: 'Normal' reason: 'RELOAD' NGINX reload triggered due to a change in configuration
==== END logs for container controller of pod ingress-nginx/ingress-controller-ingress-nginx-controller-6d798895b8-zpt6q ====
