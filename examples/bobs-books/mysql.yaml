# Copyright (c) 2020, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
apiVersion: v1
kind: Namespace
metadata:
  name: bob
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
  namespace: bob
data:
  initdb.sql: |
    create table `orders` (
        `id` int not null auto_increment,
        `order_date` date,
        `name` char(40),
        `street` char(40),
        `city` char(40),
        `state` char(2),
        primary key(`id`)
    );
    create table `order_books` (
        `order_id` int,
        `book_id` int,
        `title` char(255),
        foreign key (`order_id`)
        references `orders`(`id`)
        on delete cascade
    );
    insert into `orders` (`id`, `order_date`, `name`, `street`, `city`, `state`)
    values (1, curdate(), "Bob Down", "12 Main Rd", "Mt Everest", "NJ");

    insert into `order_books` (`order_id`, `book_id`, `title`)
    values (1, 2, "Harry Potter");

    insert into `order_books` (`order_id`, `book_id`, `title`)
    values (1, 4, "Twilight");
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: bob
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: password
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: password
        - name: MYSQL_DATABASE
          value: books
        image: mysql:8.0.20
        imagePullPolicy: IfNotPresent
        name: mysql
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /docker-entrypoint-initdb.d
          name: mysql-initdb
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ocr
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: mysql-initdb-config
        name: mysql-initdb
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: bob
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
  clusterIP: None
